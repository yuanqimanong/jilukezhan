<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Stable Diffusion</title>
    <link href="/4a3927bb8884/"/>
    <url>/4a3927bb8884/</url>
    
    <content type="html"><![CDATA[<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><ul><li>gradio</li></ul><blockquote><p>Build &amp; Share Delightful Machine Learning Apps</p><p><a target="_blank" rel="noopener" href="https://www.gradio.app/">https://www.gradio.app/</a></p><p>GitHub：<a target="_blank" rel="noopener" href="https://github.com/gradio-app/gradio">https://github.com/gradio-app/gradio</a></p></blockquote><ul><li>Stable Diffusion web UI</li></ul><blockquote><p>A browser interface based on Gradio library for Stable Diffusion.</p><p>GitHub：<a target="_blank" rel="noopener" href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></p></blockquote><ul><li><p>整合包</p><ul><li><p>秋葉aaaki</p><blockquote><p><a target="_blank" rel="noopener" href="https://space.bilibili.com/12566101">https://space.bilibili.com/12566101</a></p></blockquote></li><li><p>独立研究员-星空</p><blockquote><p><a target="_blank" rel="noopener" href="https://space.bilibili.com/250989068">https://space.bilibili.com/250989068</a></p></blockquote></li></ul></li></ul><h2 id="安装注意"><a href="#安装注意" class="headerlink" title="安装注意"></a>安装注意</h2><ol><li>路径不要中文</li><li>显存大于8G，高速固态硬盘容量大于300G</li></ol><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="查看图片输出路径"><a href="#查看图片输出路径" class="headerlink" title="查看图片输出路径"></a>查看图片输出路径</h2><blockquote><ol><li>UI中无边图像浏览</li><li><code>.\outputs</code> 中分类保存</li></ol></blockquote><h2 id="文生图"><a href="#文生图" class="headerlink" title="文生图"></a>文生图</h2><h3 id="迭代步数-Steps"><a href="#迭代步数-Steps" class="headerlink" title="迭代步数 (Steps)"></a>迭代步数 (Steps)</h3><blockquote><p>默认20，再提升效果提升不大，性能好可30-40</p></blockquote><h3 id="采样方法-Sampler"><a href="#采样方法-Sampler" class="headerlink" title="采样方法 (Sampler)"></a>采样方法 (Sampler)</h3><blockquote><p>如果模型本身推荐那个就用那个，或者带 <code>+</code> 号的算法</p></blockquote><h3 id="高分辨率修复-Hires-fix"><a href="#高分辨率修复-Hires-fix" class="headerlink" title="高分辨率修复 (Hires. fix)"></a>高分辨率修复 (Hires. fix)</h3><blockquote><p>宽度、高度不要太高推荐512，需要靠高分辨率修复的“修改放大倍率”提升</p></blockquote><h3 id="提示词引导系数-CFG-Scale"><a href="#提示词引导系数-CFG-Scale" class="headerlink" title="提示词引导系数 (CFG Scale)"></a>提示词引导系数 (CFG Scale)</h3><blockquote><p>推荐：7-12</p></blockquote><h3 id="随机数种子-Seed"><a href="#随机数种子-Seed" class="headerlink" title="随机数种子 (Seed)"></a>随机数种子 (Seed)</h3><blockquote><p>与提示词引导系数都是ai控制画面内容的参数，填入ai图片生成的数值可以保持与其风格一致</p></blockquote><h3 id="总批次数、单批数量"><a href="#总批次数、单批数量" class="headerlink" title="总批次数、单批数量"></a>总批次数、单批数量</h3><blockquote><p>总批批次可以增大，代表一次出多少张图。单批数量推荐：1</p></blockquote><h2 id="图生图"><a href="#图生图" class="headerlink" title="图生图"></a>图生图</h2><h3 id="重绘幅度"><a href="#重绘幅度" class="headerlink" title="重绘幅度"></a>重绘幅度</h3><blockquote><p>跟据原图重绘改造的幅度值，推荐0.6 - 0.8</p></blockquote><h1 id="提示词（Prompt）"><a href="#提示词（Prompt）" class="headerlink" title="提示词（Prompt）"></a>提示词（Prompt）</h1><blockquote><p>文生图：主要靠 <strong>正向提示词</strong> 和 <strong>反向提示词</strong> 控制图像的生成</p><p>要求英文（词&#x2F;句），用 <code>,</code> 分隔（可换行，但结尾要添加 <code>,</code>）</p></blockquote><h2 id="画质提示词"><a href="#画质提示词" class="headerlink" title="画质提示词"></a>画质提示词</h2><h3 id="高画质"><a href="#高画质" class="headerlink" title="高画质"></a>高画质</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">best quality,ultra-detailed,masterpiece,hires,8k<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="高分辨率"><a href="#高分辨率" class="headerlink" title="高分辨率"></a>高分辨率</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 超精细的8KUnity游戏CG，虚幻引擎渲染</span>extremely detailed CG unity 8k wallpaper,unreal engine rendered<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="画风提示词"><a href="#画风提示词" class="headerlink" title="画风提示词"></a>画风提示词</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 插画风</span>illustration,painting,paintbrush<span class="token title important"><span class="token punctuation">#</span> 二次元</span>anime,comic,game CG<span class="token title important"><span class="token punctuation">#</span> 写实</span>photorealistic,realistic,photograph<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="内容提示词"><a href="#内容提示词" class="headerlink" title="内容提示词"></a>内容提示词</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 人物及主体特征</span>服饰穿搭：white dress发型发色：blonde hair,long hair五官特点：small eyes,big mouth面部表情：smiling肢体动作：stretching arms<span class="token title important"><span class="token punctuation">#</span> 场景特征</span>室内、室外：indoor/outdoor大场景：forest,city,street小细节：tree,bush,white flower<span class="token title important"><span class="token punctuation">#</span> 环境光照</span>白天黑夜：day/night特定时段：morning,sunset光环境：sunlight,bright,dark天空：blue sky,starry sky<span class="token title important"><span class="token punctuation">#</span> 画幅视角</span>距离：close-up,distant人物此例：full body,upper body观察视角：from above,view of back镜头类型：wide angle,Sony A7 Ⅲ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="提示词权重"><a href="#提示词权重" class="headerlink" title="提示词权重"></a>提示词权重</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 括号内冒号数字</span>增强1.5倍：(xxx:1.5)减弱0.8倍：(xxx:0.8)<span class="token title important"><span class="token punctuation">#</span> 小括号 x1.1倍</span>(((xxx))) 增强1.1<span class="token italic"><span class="token punctuation">*</span><span class="token content">1.1</span><span class="token punctuation">*</span></span>1.1=1.331倍<span class="token title important"><span class="token punctuation">#</span> 中括号 x0.9倍</span>[[[xxx]]] 1.15倍<span class="token title important"><span class="token punctuation">#</span> 大括号 x1.05倍</span>&#123;&#123;&#123;xxx&#125;&#125;&#125; 0.729倍<span class="token title important"><span class="token punctuation">#</span> 混合：| </span>白色和黄色的花：white|yellow flower,<span class="token title important"><span class="token punctuation">#</span> 迁移：生成连续多个不同特征对象</span>先生成白花，再红花，最后蓝花：[white|red|blue] flower,<span class="token title important"><span class="token punctuation">#</span> 迭代</span>进程达到80%之前生成白花，之后生成灌木：(whitet flower:bush:0.8)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="标准化提示词"><a href="#标准化提示词" class="headerlink" title="标准化提示词"></a>标准化提示词</h2><h3 id="正向"><a href="#正向" class="headerlink" title="正向"></a>正向</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">(masterpiece:1,2), best quality, masterpiece, highres, original, extremely detailed wallpaper, perfect lighting,(extremely detailed CG:1.2), drawing, paintbrush,<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="负向"><a href="#负向" class="headerlink" title="负向"></a>负向</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">NSFW, (worst quality:2), (low quality:2), (normal quality:2), lowres, normal quality, ((monochrome)), ((grayscale)), skin spots, acnes, skin blemishes, age spot, (ugly:1.331), (duplicate:1.331), (morbid:1.21), (mutilated:1.21), (tranny:1.331), mutated hands, (poorly drawn hands:1.5), blurry, (bad anatomy:1.21), (bad proportions:1.331), extra limbs, (disfigured:1.331), (missing arms:1.331), (extra legs:1.331), (fused fingers:1.61051), (too many fingers:1.61051), (unclear eyes:1.331), lowers, bad hands, missing fingers, extra digit,bad hands, missing fingers, (((extra arms and legs))),<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="提示词工具-amp-插件"><a href="#提示词工具-amp-插件" class="headerlink" title="提示词工具&amp;插件"></a>提示词工具&amp;插件</h2><blockquote><p><a target="_blank" rel="noopener" href="http://www.atoolbox.net/Tool.php?Id=1101">AI绘画提示词生成器 : http://www.atoolbox.net/Tool.php?Id=1101 </a></p><p><a target="_blank" rel="noopener" href="https://github.com/Physton/sd-webui-prompt-all-in-one/blob/main/README_CN.MD">sd-webui-prompt-all-in-one : https://github.com/Physton/sd-webui-prompt-all-in-one.git</a></p></blockquote><h1 id="模型（Model）"><a href="#模型（Model）" class="headerlink" title="模型（Model）"></a>模型（Model）</h1><h2 id="大模型存储路径"><a href="#大模型存储路径" class="headerlink" title="大模型存储路径"></a>大模型存储路径</h2><blockquote><p><code>.\models\Stable-diffusion</code></p></blockquote><h2 id="VAE模型（变分自解码器）"><a href="#VAE模型（变分自解码器）" class="headerlink" title="VAE模型（变分自解码器）"></a>VAE模型（变分自解码器）</h2><h3 id="存储路径"><a href="#存储路径" class="headerlink" title="存储路径"></a>存储路径</h3><blockquote><p><code>.\models\VAE</code></p></blockquote><h3 id="自动选项含义"><a href="#自动选项含义" class="headerlink" title="自动选项含义"></a>自动选项含义</h3><blockquote><p>选择自动后，需要将VAE模型放在 <code>models\stable-diffusion</code> 下并修改为特定模型名字，并在后追加 <code>.vae.pt</code></p><p>如 <code>XXX.safetensors</code> 对应 <code>XXX.vae.pt</code></p></blockquote><h2 id="模型下载推荐"><a href="#模型下载推荐" class="headerlink" title="模型下载推荐"></a>模型下载推荐</h2><blockquote><p><a target="_blank" rel="noopener" href="https://huggingface.co/">https://huggingface.co/</a>      <code>Models </code> → <code> Text-to-Image</code></p><p><a target="_blank" rel="noopener" href="https://civitai.com/">https://civitai.com/</a></p></blockquote><p>相关网站</p><blockquote><p><a target="_blank" rel="noopener" href="https://www.liandange.com/">https://www.liandange.com/</a></p><p><a target="_blank" rel="noopener" href="https://www.desai.art/#/">https://www.desai.art/#/</a></p><p><a target="_blank" rel="noopener" href="https://tusiart.com/">https://tusiart.com/</a></p></blockquote><h1 id="放大"><a href="#放大" class="headerlink" title="放大"></a>放大</h1><h2 id="文生图-1"><a href="#文生图-1" class="headerlink" title="文生图"></a>文生图</h2><h3 id="高分辨率修复（Hires-fix）"><a href="#高分辨率修复（Hires-fix）" class="headerlink" title="高分辨率修复（Hires. fix）"></a>高分辨率修复（Hires. fix）</h3><h4 id="放大倍数"><a href="#放大倍数" class="headerlink" title="放大倍数"></a>放大倍数</h4><blockquote><p>从原始的分辨率要扩大多少倍</p></blockquote><h4 id="重绘幅度-1"><a href="#重绘幅度-1" class="headerlink" title="重绘幅度"></a>重绘幅度</h4><blockquote><p>推荐 <code>0.3-0.7</code> ，数值越大AI参与度越高。仅想放大图片 需设置 <code>0.2</code> 以下</p></blockquote><h4 id="放大算法"><a href="#放大算法" class="headerlink" title="放大算法"></a>放大算法</h4><blockquote><p>优先选择模型作者推荐的放大算法</p><p>其次，尝试 <code>R-ESRGAN 4x+</code> 和 <code>R-ESRGAN 4x+ Anime6B</code>（二次元优先）</p></blockquote><h2 id="图生图-1"><a href="#图生图-1" class="headerlink" title="图生图"></a>图生图</h2><blockquote><ul><li>重绘尺寸倍数</li><li>脚本：SD upscale（使用 SD 放大）</li></ul></blockquote><h2 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h2><blockquote><p>等比缩放</p></blockquote><h1 id="进阶模型"><a href="#进阶模型" class="headerlink" title="进阶模型"></a>进阶模型</h1><blockquote><ul><li>嵌入式 (T.I. Embedding)：较为通用，如负面词优化</li><li>超网络 (Hypernetworks)：描绘整体画风</li><li>Lora：描绘特定对象、整体画风</li></ul></blockquote><h1 id="局部重绘"><a href="#局部重绘" class="headerlink" title="局部重绘"></a>局部重绘</h1><blockquote><ul><li>蒙版边缘模糊：10 以下较为稳妥，这也要看画面大小</li><li>蒙版模式：重绘蒙版内容；重绘非蒙版内容</li><li>蒙版区域内容处理：填充（高度模糊后填充）、原版（保留原图不做预处理）</li><li>重绘区域：整张图片；仅蒙版区域（未读取整图信息，有可能会出现拼接错误）、仅蒙版区域下边缘预留像素（缓冲带，需要结合图片大小设置）</li></ul></blockquote>]]></content>
    
    
    <categories>
      
      <category>Chobits</category>
      
      <category>Stable Diffusion</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Stable Diffusion</tag>
      
      <tag>AI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卡巴斯基转换为免费版的方法</title>
    <link href="/ba0ef645ae55/"/>
    <url>/ba0ef645ae55/</url>
    
    <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><blockquote><p>这里下载软件 <a target="_blank" rel="noopener" href="https://www.kaspersky.com.cn/free-antivirus">https://www.kaspersky.com.cn/free-antivirus</a></p><p>输入激活码 <code>3SXCM-M9RJM-6985N-PWKP7</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>迹路一下</category>
      
    </categories>
    
    
    <tags>
      
      <tag>卡巴斯基</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>迎香穴</title>
    <link href="/445eb5ae4092/"/>
    <url>/445eb5ae4092/</url>
    
    <content type="html"><![CDATA[<blockquote><p>迎香穴（英文名称：Ying Xiang），也被称为“鼻通穴”或“迎香风府”，是人体上的一个穴位，广泛应用于中医学中的针灸疗法和按摩疗法中。它位于面部，有许多疗效和应用。以下是关于迎香穴的准确位置、作用功效和常用手法的信息：</p></blockquote><p><strong>准确位置：</strong> 迎香穴位于面部，具体位置是在鼻翼两侧，当鼻翼疏松时，位于鼻翼边缘与鼻唇交界处的凹陷处。</p><p><img src="/445eb5ae4092/%E8%BF%8E%E9%A6%99%E7%A9%B4.png" alt="迎香穴"></p><p><strong>作用功效：</strong> 迎香穴在中医学中被认为具有多种作用和功效，常用于治疗以下问题：</p><ol><li><strong>鼻塞和鼻炎：</strong> 迎香穴是治疗鼻塞和鼻炎的常用穴位，通过刺激该穴位可以促进鼻腔的通气，缓解鼻塞和改善鼻炎症状。</li><li><strong>头痛：</strong> 迎香穴的刺激也可以用于缓解头痛和偏头痛。</li><li><strong>眼部问题：</strong> 该穴位的刺激有时可以缓解眼部不适，如眼疲劳、干涩等。</li><li><strong>面部神经痛：</strong> 迎香穴的刺激还可以用于治疗面部神经痛，如三叉神经痛等。</li><li><strong>情绪调节：</strong> 某些情况下，迎香穴的按摩也被认为可以帮助情绪调节，缓解紧张和焦虑。</li></ol><p><strong>常用手法：</strong> 迎香穴的刺激可以通过多种方法实现，包括：</p><ol><li><strong>指压：</strong> 使用适当的力量，用指腹或拇指指腹按压迎香穴，可以持续按压或稍微旋转手指，持续数秒至数分钟。</li><li><strong>针灸：</strong> 医生或针灸师可以使用细针刺激迎香穴，以达到类似的效果。</li><li><strong>按摩：</strong> 使用指腹或按摩工具进行迎香穴的按摩，可以轻轻地按摩、揉捏或旋转。</li><li><strong>精油：</strong> 将一些舒缓的精油涂抹在迎香穴周围，然后进行按摩，可以增强放松效果。</li><li></li></ol><blockquote><p>无论采用哪种方法，刺激迎香穴时应注意力度适中，不要过度用力，以避免不必要的不适或刺激。</p><p>此外，对于严重的健康问题，建议在专业医生或中医师的指导下使用这些技巧。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>中医</category>
      
    </categories>
    
    
    <tags>
      
      <tag>中医</tag>
      
      <tag>迎香穴</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卸载带密码保护的奇安信天擎</title>
    <link href="/f6006faa895f/"/>
    <url>/f6006faa895f/</url>
    
    <content type="html"><![CDATA[<h1 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h1><ol><li><p><code>Win+R</code>  输入 <code>msconfig</code>  选择 <code>引导</code> → <code>安全引导</code> → <code>最小</code> 后，重启，进入<strong>安全模式</strong>。</p></li><li><blockquote><ul><li><p>删除  <code>C:\Program Files (x86)\qianxin</code> 的 <code>ifl</code> 文件夹</p></li><li><p>删除 <code>Tianqing</code> 文件夹（最开始安装的路径）</p></li><li><p>停用服务（注意看，有3个天擎服务，可用火绒启动管理优化掉）</p></li><li><p>删除注册表（regedit）<code>控制版面 - 卸载程序</code> 中的卸载信息 <code>\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall</code> 下的天擎目录</p></li></ul></blockquote></li><li><p>将<strong>操作一</strong>还原成 <strong>正常启动</strong>，重启。最后删除无用的快捷方式（桌面及开始菜单）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>迹路一下</category>
      
    </categories>
    
    
    <tags>
      
      <tag>奇安信天擎</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ValueError greenlet.greenlet size changed, may indicate binary incompatibility. Expected 128 from C 报错</title>
    <link href="/d22b8d5f602a/"/>
    <url>/d22b8d5f602a/</url>
    
    <content type="html"><![CDATA[<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ValueError greenlet.greenlet size changed, may indicate binary incompatibility. Expected <span class="token number">128</span> from C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><blockquote><p><code>pip install greenlet==0.4.15</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Case】下载红茶影视APK</title>
    <link href="/03d3442f7a86/"/>
    <url>/03d3442f7a86/</url>
    
    <content type="html"><![CDATA[<h1 id="测试网址"><a href="#测试网址" class="headerlink" title="测试网址"></a>测试网址</h1><blockquote><p><code>aHR0cHM6Ly9ob25nY2hhLmFwcC9pbmRleC5odG1s</code></p></blockquote><h1 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h1><blockquote><p>原本是有安卓下载入口的，不知道为什么给注释掉了 只保留IOS版本 ,如下图</p></blockquote><p><img src="/03d3442f7a86/image-20230623212410162.png" alt="image-20230623212410162"></p><h1 id="获取下载链接"><a href="#获取下载链接" class="headerlink" title="获取下载链接"></a>获取下载链接</h1><blockquote><p>先在审查元素中将前端的注释解除</p></blockquote><p><img src="/03d3442f7a86/image-20230623212642729.png" alt="image-20230623212642729"></p><blockquote><p>因为下载需要 click事件，所以查看 “事件监听器”，点击跳转到脚本</p></blockquote><p><img src="/03d3442f7a86/image-20230623212852029.png" alt="image-20230623212852029"></p><blockquote><p>阅读代码，清晰可见下载链接</p></blockquote><p><img src="/03d3442f7a86/image-20230623213013708.png" alt="image-20230623213013708"></p><blockquote><p>该分析套路也适用于对<code>A标签</code>链接有加密操作的情况，如某护城河政府网站</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不宁腿综合症(不安腿综合征)</title>
    <link href="/7e69f83b6e30/"/>
    <url>/7e69f83b6e30/</url>
    
    <content type="html"><![CDATA[<h1 id="不宁腿综合征（不安腿综合症）"><a href="#不宁腿综合征（不安腿综合症）" class="headerlink" title="不宁腿综合征（不安腿综合症）"></a>不宁腿综合征（不安腿综合症）</h1><blockquote><p><strong>不宁腿综合症（英语：restless legs syndrome, RLS）</strong>，又称睡眠腿动症、不安腿综合征、腿不宁症候群、Willis-Ekbom病或Wittmaack-Ekbom症候群是一种强烈想要让腿部移动的障碍。平常患者腿部有一种令人不快的感觉，这种感觉会随著腿部移动而有所改善，不适感可能是疼痛、刺痛或是虫爬感，双臂偶尔也可能受到影响[2]。 不宁腿综合症通常在休息时发生，因此可能使患者难以入睡。 由于睡眠不良，患者可能会在白天嗜睡、精力不集中、烦躁不安和情绪低落。此外，许多人在睡眠时都有肢体抽动的状况。</p><p>导致不宁腿综合症的危险因素包括缺铁、肾功能衰竭、帕金森氏症、糖尿病、类风湿性关节炎和妊娠。一些药物治疗也会触发症状。包括抗抑郁药、抗精神病药、 抗组织胺药和钙离子通道阻滞剂。不宁腿综合症主要有以下两个类型。一种是早期的发病，在45岁之前。发生在家族中，随着时间推移而恶化。另一种是后期的发病，在45岁之后，突然发生并且不会恶化。诊断通常是在排除了其他潜在因素之后，根据病人的症状而定。</p><p>如果能处理好潜在问题，就可以解决不宁腿症候群的状况；其他治疗方式包括改变生活方式和药物治疗有助于消除不宁腿症候群的生活方式改变包括戒酒、戒烟、以及睡眠卫教；药物使用包括左旋多巴或多巴胺激动剂，如普拉克索。不宁腿症候群大约影响美国人口中的2.5-15%；性别方面，女性比男性更易受影响；随著年龄渐增也会更常见。</p><p>—— <a target="_blank" rel="noopener" href="https://zh.wikipedia.org/zh-hans/%E4%B8%8D%E5%AF%A7%E8%85%BF%E7%B6%9C%E5%90%88%E7%97%87">维基百科</a></p></blockquote><h1 id="按压穴位"><a href="#按压穴位" class="headerlink" title="按压穴位"></a>按压穴位</h1><h2 id="手三里、合谷穴"><a href="#手三里、合谷穴" class="headerlink" title="手三里、合谷穴"></a>手三里、合谷穴</h2><blockquote><p><strong>手三里穴</strong>属于“手阳明大肠经”，取此穴位时应让患者采用正坐，侧腕，伸直前臂，曲肘的取穴姿势，手三里穴位于前臂，手肘弯曲处向前3指幅，在阳溪与曲池连线上，用手按就痛之处。</p></blockquote><p><img src="/7e69f83b6e30/%E6%89%8B%E4%B8%89%E9%87%8C.jpg" alt="手三里"></p><blockquote><p><strong>合谷穴</strong>属“手阳明大肠经”，位于手背虎口处，第一、二掌骨间。患者通过按压或者配合医师<em>针灸</em>合谷穴，能够起到镇静止痛、通经活经、清热解表等功效，可以用来治疗或缓解发热、头痛、呕吐、咽喉肿痛、<em>痛经</em>、多汗、<em>耳聋</em>、面肿、目赤肿痛等病症。</p></blockquote><p><img src="/7e69f83b6e30/%E5%90%88%E8%B0%B7%E7%A9%B4.jpeg" alt="合谷穴"></p><blockquote><p>每个穴位找周围痛点位置，酸胀位置，揉2-3分钟，上下午各一次，这个是下病上取的经典组合。</p></blockquote><h2 id="小指肾穴"><a href="#小指肾穴" class="headerlink" title="小指肾穴"></a>小指肾穴</h2><p><img src="/7e69f83b6e30/%E6%89%8B%E9%83%A8%E7%A9%B4%E4%BD%8D.webp" alt="手部穴位"></p><blockquote><p>按住小拇指中节不松手，时间得长一些，保持在5-7分钟以上，然后再换另一只手，一般情况下做完都会有效果，部分人会感觉膝盖以下发热感觉，这样最好。一边按，一边揉也可以，按压力量不能消失，多保持一会。</p><p>小拇指内侧中节的中点位置，改善小腿胀痛有疗效，小腿胀、酸、难受有时间就按摩一会，基本立马见效。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>中医</category>
      
    </categories>
    
    
    <tags>
      
      <tag>中医</tag>
      
      <tag>不安腿综合征</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三次握手与四次挥手</title>
    <link href="/61a64ab4fe21/"/>
    <url>/61a64ab4fe21/</url>
    
    <content type="html"><![CDATA[<h1 id="详解TCP连接的“三次握手”与“四次挥手”-上"><a href="#详解TCP连接的“三次握手”与“四次挥手”-上" class="headerlink" title="详解TCP连接的“三次握手”与“四次挥手”(上)"></a>详解TCP连接的“三次握手”与“四次挥手”(上)</h1><blockquote><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/AhuntSun-blog/p/12028636.html">https://www.cnblogs.com/AhuntSun-blog/p/12028636.html</a></p></blockquote><h1 id="详解TCP连接的“三次握手”与“四次挥手”-下"><a href="#详解TCP连接的“三次握手”与“四次挥手”-下" class="headerlink" title="详解TCP连接的“三次握手”与“四次挥手”(下)"></a>详解TCP连接的“三次握手”与“四次挥手”(下)</h1><blockquote><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/AhuntSun-blog/p/12037852.html">https://www.cnblogs.com/AhuntSun-blog/p/12037852.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抓包</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抓包</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【Case】加速乐分析</title>
    <link href="/1a6861840eb3/"/>
    <url>/1a6861840eb3/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码⊙ω⊙看着不太对, 请再试试..." data-whm="抱歉, 这个文章╮（╯_╰）╭不能被校验, 不过您还是能看看解密后的内容...">  <script id="hbeData" type="hbeData" data-hmacdigest="7e261ea68a65450ad86884cd2b054b6fcd79abd33bb9a6473131fdb50252332b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">我是👽️编号89757, 请输入飞船登录码 ●△●</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
      <tag>加速乐</tag>
      
      <tag>WEB安全产品</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>1.[Vue入门]Hello Vue!</title>
    <link href="/4b24588301c4/"/>
    <url>/4b24588301c4/</url>
    
    <content type="html"><![CDATA[<h1 id="引入Vue"><a href="#引入Vue" class="headerlink" title="引入Vue"></a>引入Vue</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- Vue.js v2.7.14 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h1><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Hello Vue!'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello Vue!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; message &#125;&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Hello Vue!'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2.[Vue入门]el挂载点</title>
    <link href="/ee786d3bea9f/"/>
    <url>/ee786d3bea9f/</url>
    
    <content type="html"><![CDATA[<h1 id="el-挂载点"><a href="#el-挂载点" class="headerlink" title="el 挂载点"></a><code>el</code> 挂载点</h1><blockquote><p><code>el</code>挂载点，不能挂到html和body上</p></blockquote><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>el挂载点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    &#123;&#123; message &#125;&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; message &#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> &#123;&#123; message &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">// el: '#app',</span>            <span class="token comment">// el: '.app',</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'span'</span><span class="token punctuation">,</span>            <span class="token comment">// 不能挂到html和body上</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'el挂载点'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>3.[Vue入门]data数据对象</title>
    <link href="/7593061f534a/"/>
    <url>/7593061f534a/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>data 数据对象<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; message &#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>&#123;&#123; person &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>&#123;&#123; person.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>&#123;&#123; person.age &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>&#123;&#123; hobby &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>&#123;&#123; hobby[0] &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>&#123;&#123; hobby[1] &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>&#123;&#123; hobby[2] &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'data 数据对象'</span><span class="token punctuation">,</span>                <span class="token literal-property property">person</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小爱'</span><span class="token punctuation">,</span>                    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">'18'</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'吃饭'</span><span class="token punctuation">,</span> <span class="token string">'睡觉'</span><span class="token punctuation">,</span> <span class="token string">'打豆豆'</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>4.[Vue入门]v-text</title>
    <link href="/4163bb5ea235/"/>
    <url>/4163bb5ea235/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123;message&#125;&#125; 显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message + '拼接' <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123;message + '拼接'&#125;&#125; 显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'v-text'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>5.[Vue入门]v-html</title>
    <link href="/177adfe7f2ee/"/>
    <url>/177adfe7f2ee/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'&lt;b>加粗字体&lt;/b>'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>6.[Vue入门]v-on</title>
    <link href="/05d8b36e93cb/"/>
    <url>/05d8b36e93cb/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-on<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v-on指令<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doIt<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v-on指令简写<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doIt<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>双击<span class="token punctuation">"</span></span> <span class="token attr-name">@dblclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doIt<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeFood<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;food&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">food</span><span class="token operator">:</span> <span class="token string">'西兰花炒蛋'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">doIt</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'触发事件'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">changeFood</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>food <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>food<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'兰花炒'</span><span class="token punctuation">,</span> <span class="token string">'红柿炒鸡'</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>7.[Vue入门]计数器案例</title>
    <link href="/4136a686de1d/"/>
    <url>/4136a686de1d/</url>
    
    <content type="html"><![CDATA[<h1 id="定义方法"><a href="#定义方法" class="headerlink" title="定义方法"></a>定义方法</h1><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 减法</span><span class="token string-property property">"sub"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sub'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">judgmentNum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 加法</span><span class="token string-property property">"add"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'add'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">judgmentNum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 重置</span><span class="token string-property property">"reset"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'reset'</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 判断数字边界</span><span class="token string-property property">"judgmentNum"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'num =='</span> <span class="token operator">+</span> num<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"别点了最小值了"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"别点了最大值了"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>计数器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">5</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token string-property property">"sub"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'sub'</span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">judgmentNum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">--</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token string-property property">"add"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'add'</span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">judgmentNum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token string-property property">"reset"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'reset'</span><span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">5</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token string-property property">"judgmentNum"</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'num =='</span> <span class="token operator">+</span> num<span class="token punctuation">)</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"别点了最小值了"</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"别点了最大值了"</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>8.[Vue入门]v-show</title>
    <link href="/0d433f364d6f/"/>
    <url>/0d433f364d6f/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-show<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>显示切换<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeShow<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>增加年龄<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addAge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> &#123;&#123;age&#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://t7.baidu.com/it/u=860330160,4117395242&amp;fm=193&amp;f=GIF<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图1<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://t7.baidu.com/it/u=860330160,4117395242&amp;fm=193&amp;f=GIF<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图2<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age>=8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">changeShow</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isShow<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">addAge</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>9.[Vue入门]v-if</title>
    <link href="/f0df5a15e76b/"/>
    <url>/f0df5a15e76b/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-if<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>显示切换<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一段文字 v-if<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一段文字 v-show<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isShow<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10.[Vue入门]v-bind</title>
    <link href="/f84de96f5b1a/"/>
    <url>/f84de96f5b1a/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-bind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.active</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 10px solid red<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_src<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:isActive&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_src<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">img_src</span><span class="token operator">:</span> <span class="token string">'https://t7.baidu.com/it/u=860330160,4117395242&amp;fm=193&amp;f=GIF'</span><span class="token punctuation">,</span>                <span class="token literal-property property">img_title</span><span class="token operator">:</span> <span class="token string">'图片'</span><span class="token punctuation">,</span>                <span class="token literal-property property">isActive</span><span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isActive                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>11.[Vue入门]切换图片案例</title>
    <link href="/af332d7bc3e4/"/>
    <url>/af332d7bc3e4/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>图片切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>共 ' + imgArr.length + ' 张图,现在第 ' + (index+1) + ' 张'<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prev<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index!=0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>👈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index&lt;imgArr.length-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>👉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgArr[index]<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#mask'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">imgArr</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">'https://imgsa.baidu.com/forum/w%3D580/sign=f93f022ad562853592e0d229a0ee76f2/bdcb5cfbb2fb43160f4d02a220a4462308f7d33a.jpg'</span><span class="token punctuation">,</span>                <span class="token string">'https://imgsa.baidu.com/forum/w%3D580/sign=23917b3bd539b6004dce0fbfd9513526/b9b4ba1bb051f819b0477b92dab44aed2f73e72a.jpg'</span><span class="token punctuation">,</span>                <span class="token string">'https://imgsa.baidu.com/forum/w%3D580/sign=c46fc1bc94eef01f4d1418cdd0fc99e0/fb6d0346f21fbe091b83bbcc6b600c338544adab.jpg'</span><span class="token punctuation">,</span>                <span class="token string">'https://imgsa.baidu.com/forum/w%3D580/sign=6b03a52cb74543a9f51bfac42e168a7b/00ac10d8bc3eb135ebe0cc63a61ea8d3fc1f446d.jpg'</span><span class="token punctuation">,</span>                <span class="token string">'https://imgsa.baidu.com/forum/w%3D580/sign=0fb4686fe950352ab16125006342fb1a/06be3f7adab44aed1b34d93cb31c8701a08bfb12.jpg'</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function-variable function">prev</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>12.[Vue入门]v-for</title>
    <link href="/605fb73a103e/"/>
    <url>/605fb73a103e/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-for<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(num,idx) in numList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                索引：&#123;&#123;idx&#125;&#125;<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>值：&#123;&#123;num&#125;&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>obj in objArr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            &#123;&#123;obj.name&#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">numList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">objArr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'aaaaa'</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'bbbbb'</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'ccccc'</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>objArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>objArr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>13.[Vue入门]v-on</title>
    <link href="/8fb9574596cb/"/>
    <url>/8fb9574596cb/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-on传参<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v-on传参<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>doIt(666,'老铁')<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sayHi($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">doIt</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p1<span class="token punctuation">,</span> p2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'触发事件:'</span> <span class="token operator">+</span> p2 <span class="token operator">+</span> <span class="token string">'双击'</span> <span class="token operator">+</span> p1<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">"吃了么"</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>14.[Vue入门]v-model</title>
    <link href="/d7d9325cccc4/"/>
    <url>/d7d9325cccc4/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>v-model<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">''</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>15.[Vue入门]记事本案例</title>
    <link href="/3f505a2f7b39/"/>
    <url>/3f505a2f7b39/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>note<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEvent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(event,index) in note<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enter(index)<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leave(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                &#123;&#123;index+1&#125;&#125;. &#123;&#123;event&#125;&#125;                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove(index)<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ishow &amp;&amp; index == current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> X <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>一共有 ' + note.length + ' 件事情还没干呢'<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note.length != 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note.length != 0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>老子不干了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'吃饭饭'</span><span class="token punctuation">,</span> <span class="token string">'睡觉觉'</span><span class="token punctuation">,</span> <span class="token string">'打豆豆'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">addEvent</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">ishow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>note <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>note<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>addEvent<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>note<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">enter</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ishow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>current <span class="token operator">=</span> index<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">leave</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ishow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>16.[Vue入门]axios</title>
    <link href="/5fb208022850/"/>
    <url>/5fb208022850/</url>
    
    <content type="html"><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><blockquote><p><a target="_blank" rel="noopener" href="https://github.com/axios/axios">https://github.com/axios/axios</a></p></blockquote><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>axios<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Get请求<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;script src="https://unpkg.com/axios/dist/axios.min.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/axios@0.21.1/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// get</span>        <span class="token comment">// https://autumnfish.cn/</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".get"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"https://autumnfish.cn/search?keywords=%E6%B5%B7%E9%98%94%E5%A4%A9%E7%A9%BA"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>17.[Vue入门]vue整合axios</title>
    <link href="/f4c4971c4ebb/"/>
    <url>/f4c4971c4ebb/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue整合axios<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>获取数据<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getData<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/axios@0.21.1/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">''</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">getData</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://autumnfish.cn/search?keywords=%E6%B5%B7%E9%98%94%E5%A4%A9%E7%A9%BA'</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token comment">// console.log(response);</span>                            that<span class="token punctuation">.</span>message <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songCount<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>18.[Vue入门]查天气案例</title>
    <link href="/be548ca2882b/"/>
    <url>/be548ca2882b/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>查天气<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getWeather<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCity('北京')<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCity('上海')<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>distCity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>weather in weatherList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                &#123;&#123;weather.date&#125;&#125;                &#123;&#123;weather.high&#125;&#125;                &#123;&#123;weather.low&#125;&#125;                &#123;&#123;weather.fengli&#125;&#125;                &#123;&#123;weather.fengxiang&#125;&#125;                &#123;&#123;weather.type&#125;&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/axios@0.21.1/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">/*            http://wthrcdn.etouch.cn/weather_mini            get            city=城市名称         */</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">distCity</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">weatherList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">getWeather</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://wthrcdn.etouch.cn/weather_mini?city='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>city<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>forecast<span class="token punctuation">)</span><span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>distCity <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>city<span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>weatherList <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>forecast                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">changeCity</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">city</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>19.[Vue入门]音乐播放器案例</title>
    <link href="/688969c178db/"/>
    <url>/688969c178db/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>音乐播放器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>player<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchMusic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in musicList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>playMusic(item.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>&#123;&#123;item.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>audio<span class="token punctuation">'</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>musicUrl<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span> <span class="token attr-name">loop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>musicImg<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>musicImg!=''<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span>1px solid #0094ff<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>头像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>昵称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>点赞<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment in commentList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment.user.avatarUrl<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 50px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment.user.nickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment.content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment.likedCount<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/axios@0.21.1/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">/*            https://autumnfish.cn/            搜索歌曲            https://autumnfish.cn/search?keywords=歌曲名            歌曲地址            https://autumnfish.cn/song/url?id=歌曲ID            歌曲详情            https://autumnfish.cn/song/detail?ids=歌曲ID            歌曲评论            https://autumnfish.cn/comment/hot?type=0&amp;id=歌曲ID         */</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#player'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">musicList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">musicUrl</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">musicImg</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token literal-property property">commentList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 歌曲地址</span>                <span class="token function-variable function">searchMusic</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://autumnfish.cn/search?keywords='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songs<span class="token punctuation">)</span><span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>musicList <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songs<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">playMusic</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">musicId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>musicId<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 歌曲地址</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://autumnfish.cn/song/url?id='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>musicUrl <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token comment">// 歌曲详情</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://autumnfish.cn/song/detail?ids='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>songs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>al<span class="token punctuation">.</span>picUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>musicImg <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>songs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>al<span class="token punctuation">.</span>picUrl<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token comment">// 歌曲评论</span>                    axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://autumnfish.cn/comment/hot?type=0&amp;id='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hotComments<span class="token punctuation">)</span><span class="token punctuation">;</span>                            that<span class="token punctuation">.</span>commentList <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hotComments<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>20.[Vue入门]Vue生命周期</title>
    <link href="/0736cb92bacc/"/>
    <url>/0736cb92bacc/</url>
    
    <content type="html"><![CDATA[<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Vue 生命周期<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        &#123;&#123; message &#125;&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Vue 生命周期'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeCreate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeCreate'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">created</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'created'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeMount</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeMount'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mounted'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeUpdate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeUpdate'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">updated</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'updated'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeDestroy</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeDestroy'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">destroyed</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'destroyed'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AST</title>
    <link href="/0725b07e2f6d/"/>
    <url>/0725b07e2f6d/</url>
    
    <content type="html"><![CDATA[<h1 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h1><h2 id="Babel-是一个-JavaScript-编译器"><a href="#Babel-是一个-JavaScript-编译器" class="headerlink" title="Babel 是一个 JavaScript 编译器"></a>Babel 是一个 JavaScript 编译器</h2><p>Babel 是一个工具链，主要用于将采用 ECMAScript 2015+ 语法编写的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中。</p><blockquote><p>官方文档：<a target="_blank" rel="noopener" href="https://babeljs.io/docs/en/">https://babeljs.io/docs/en/</a></p><p>中文文档：<a target="_blank" rel="noopener" href="https://www.babeljs.cn/docs/">https://www.babeljs.cn/docs/</a></p></blockquote><h2 id="安装Babel"><a href="#安装Babel" class="headerlink" title="安装Babel"></a>安装Babel</h2><p><code>npm install @babel/parser @babel/core @babel/generator @babel/types</code></p><h1 id="AST"><a href="#AST" class="headerlink" title="AST"></a>AST</h1><blockquote><p>AST，抽象语法树（<a target="_blank" rel="noopener" href="https://so.csdn.net/so/search?q=abstract&spm=1001.2101.3001.7020">abstract</a> syntax code，AST）是源代码语法结构的一种的多叉树抽象表示。</p></blockquote><h2 id="在线解析"><a href="#在线解析" class="headerlink" title="在线解析"></a>在线解析</h2><blockquote><p>解析网站：<a target="_blank" rel="noopener" href="https://astexplorer.net/">https://astexplorer.net/</a></p><p>解析器设置为<code>@babel/parser</code></p></blockquote><h2 id="AST使用"><a href="#AST使用" class="headerlink" title="AST使用"></a>AST使用</h2><p>给定一段JS，利用AST修改 <code>a</code> 的值为<code>How old are you??</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a <span class="token punctuation">;</span> a <span class="token operator">=</span> <span class="token string">"hi ast,How are you?"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>node下运行得到结果</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>parse<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@babel/parser'</span><span class="token punctuation">)</span><span class="token keyword">const</span> generator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@babel/generator'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token keyword">const</span> ast_code <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'var a ; a = "hi ast,How are you?"'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ast_code<span class="token punctuation">)</span>ast_code<span class="token punctuation">.</span>program<span class="token punctuation">.</span>body<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>expression<span class="token punctuation">.</span>right<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'How old are you??'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">generator</span><span class="token punctuation">(</span>ast_code<span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 打印 ast_code 的输出</span>Node <span class="token punctuation">&#123;</span>  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'File'</span><span class="token punctuation">,</span>  <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>  <span class="token literal-property property">loc</span><span class="token operator">:</span> SourceLocation <span class="token punctuation">&#123;</span>    <span class="token literal-property property">start</span><span class="token operator">:</span> Position <span class="token punctuation">&#123;</span> <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">column</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">end</span><span class="token operator">:</span> Position <span class="token punctuation">&#123;</span> <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">column</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">33</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>    <span class="token literal-property property">identifierName</span><span class="token operator">:</span> <span class="token keyword">undefined</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">program</span><span class="token operator">:</span> Node <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'Program'</span><span class="token punctuation">,</span>    <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>    <span class="token literal-property property">loc</span><span class="token operator">:</span> SourceLocation <span class="token punctuation">&#123;</span>      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token punctuation">[</span>Position<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token punctuation">[</span>Position<span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>      <span class="token literal-property property">identifierName</span><span class="token operator">:</span> <span class="token keyword">undefined</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">'script'</span><span class="token punctuation">,</span>    <span class="token literal-property property">interpreter</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">[</span>Node<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Node<span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">comments</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token comment">// 修改后的结果</span><span class="token keyword">var</span> a<span class="token punctuation">;</span>a <span class="token operator">=</span> <span class="token string">"How old are you??"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'=======解析成AST======='</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>parse<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@babel/parser'</span><span class="token punctuation">)</span><span class="token keyword">var</span> js_code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">var a = 1var b = 2var c;console.log(a + b)</span><span class="token template-punctuation string">`</span></span><span class="token keyword">let</span> ast_code <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>js_code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">'module'</span><span class="token punctuation">,</span><span class="token comment">//默认为'script'。'unambiguous':尝试推测，若存在ES6的'import'或'export'语法，则推测为'module'，否则为'script'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ast_code<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'=======遍历值======='</span><span class="token punctuation">)</span><span class="token keyword">const</span> traverse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@babel/traverse'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token keyword">const</span> visitor <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token function">Identifier</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'name = '</span> <span class="token operator">+</span> path<span class="token punctuation">.</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">NumericLiteral</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'value = '</span> <span class="token operator">+</span> path<span class="token punctuation">.</span>node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token function">traverse</span><span class="token punctuation">(</span>ast_code<span class="token punctuation">,</span> visitor<span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'=======生成js代码======='</span><span class="token punctuation">)</span><span class="token keyword">const</span> generator <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@babel/generator'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>ast_code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">retainLines</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//默认为'false'。保留空行</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
      <tag>JavaScript</tag>
      
      <tag>AST</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数组类算法</title>
    <link href="/67c99c15c3e9/"/>
    <url>/67c99c15c3e9/</url>
    
    <content type="html"><![CDATA[<h1 id="做好初始定义"><a href="#做好初始定义" class="headerlink" title="做好初始定义"></a>做好初始定义</h1><blockquote><p>做数组类算法问题的时候，我们常常需要定义一个变量，明确该变量的定义，并且在书写整个逻辑的时候，要不停的维护住这个变量的意义。也特别需要注意初始值和边界的问题。</p></blockquote><h2 id="移动零"><a href="#移动零" class="headerlink" title="移动零"></a>移动零</h2><blockquote><p>给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。<br>请注意 ，必须在不复制数组的情况下原地对数组进行操作。</p><p> 示例 1:</p><p><code>输入: nums = [0,1,0,3,12]</code><br><code>输出: [1,3,12,0,0]</code></p><p>示例 2:</p><p><code>输入: nums = [0]</code><br><code>输出: [0]</code></p><p>提示:</p><p><code>1 &lt;= nums.length &lt;= 104</code><br><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></p><p>进阶：你能尽量减少完成的操作次数吗？</p></blockquote><h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">L283_MoveZeroes</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">moveZeroes</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    nums<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// int[] nums = &#123; 0 &#125;;</span>        <span class="token function">moveZeroes</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">moveZeroes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        :type nums: List[int]        :rtype: void Do not return anything, modify nums in-place instead.        """</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>        j <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment"># nums[0....i]表示非0元素的数列,初始值i=-1</span>        <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                i <span class="token operator">+=</span> <span class="token number">1</span>                nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span>            j <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>            nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Leetcode</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript 操作符优先级</title>
    <link href="/94f7b391d1ff/"/>
    <url>/94f7b391d1ff/</url>
    
    <content type="html"><![CDATA[<h1 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h1><blockquote><p>参考网站 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence</a></p></blockquote><h1 id="汇总表"><a href="#汇总表" class="headerlink" title="汇总表"></a>汇总表</h1><table>  <tbody>    <tr>      <th>优先级</th>      <th>运算符类型</th>      <th>结合性</th>      <th>运算符</th>    </tr>    <tr>      <td>19</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Grouping">分组</a></td>      <td>n/a（不相关）</td>      <td><code>( … )</code></td>    </tr>    <tr>      <td rowspan="5">18</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Property_accessors#%E7%82%B9%E5%8F%B7%E8%A1%A8%E7%A4%BA%E6%B3%95">成员访问</a></td>      <td>从左到右</td>      <td><code>… . …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Property_accessors#%E6%96%B9%E6%8B%AC%E5%8F%B7%E8%A1%A8%E7%A4%BA%E6%B3%95">需计算的成员访问</a></td>      <td>从左到右</td>      <td><code>… [ … ]</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/new"><code>new</code></a>（带参数列表）</td>      <td>n/a</td>      <td><code>new … ( … )</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Functions">函数调用</a></td>      <td>从左到右</td>      <td><code>… ( <var>… </var>)</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Optional_chaining" se_prerender_url="complete">可选链（Optional chaining）</a></td>      <td>从左到右</td>      <td><code>?.</code></td>    </tr>    <tr>      <td>17</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/new"><code>new</code></a>（无参数列表）</td>      <td>从右到左</td>      <td><code>new …</code></td>    </tr>    <tr>      <td rowspan="2">16</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F">后置递增</a></td>      <td rowspan="2">n/a</td>      <td><code>… ++</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F">后置递减</a></td>      <td><code>… --</code></td>    </tr>    <tr>      <td rowspan="10">15</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_NOT">逻辑非 (!)</a></td>      <td rowspan="10">从右到左</td>      <td><code>! …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT">按位非 (~)</a></td>      <td><code>~ …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unary_plus">一元加法 (+)</a></td>      <td><code>+ …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unary_negation">一元减法 (-)</a></td>      <td><code>- …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F">前置递增</a></td>      <td><code>++ …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E8%87%AA%E5%A2%9E%E5%92%8C%E8%87%AA%E5%87%8F">前置递减</a></td>      <td><code>-- …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof"><code>typeof</code></a></td>      <td><code>typeof …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/void"><code>void</code></a></td>      <td><code>void …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/delete"><code>delete</code></a></td>      <td><code>delete …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/await"><code>await</code></a></td>      <td><code>await …</code></td>    </tr>    <tr>      <td>14</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Exponentiation">幂 (**)</a></td>      <td>从右到左</td>      <td><code>… ** …</code></td>    </tr>    <tr>      <td rowspan="3">13</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Multiplication">乘法 (*)</a></td>      <td rowspan="3">从左到右</td>      <td><code>… * …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Division">除法 (/)</a></td>      <td><code>… / …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Remainder">取余 (%)</a></td>      <td><code>… % …</code></td>    </tr>    <tr>      <td rowspan="2">12</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Addition">加法 (+)</a></td>      <td rowspan="2">从左到右</td>      <td><code>… + …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Subtraction">减法 (-)</a></td>      <td><code>… - …</code></td>    </tr>    <tr>      <td rowspan="3">11</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Left_shift">按位左移 (&lt;&lt;)</a></td>      <td rowspan="3">从左到右</td>      <td><code>… &lt;&lt; …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Right_shift">按位右移 (&gt;&gt;)</a></td>      <td><code>… &gt;&gt; …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift">无符号右移 (&gt;&gt;&gt;)</a></td>      <td><code>… &gt;&gt;&gt; …</code></td>    </tr>    <tr>      <td rowspan="6">10</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Less_than">小于 (&lt;)</a></td>      <td rowspan="6">从左到右</td>      <td><code>… &lt; …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal">小于等于 (&lt;=)</a></td>      <td><code>… &lt;= …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Greater_than">大于 (&gt;)</a></td>      <td><code>… &gt; …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal">大于等于 (&gt;=)</a></td>      <td><code>… &gt;= …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/in"><code>in</code></a></td>      <td><code>… in …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/instanceof"><code>instanceof</code></a></td>      <td><code>… instanceof …</code></td>    </tr>    <tr>      <td rowspan="4">9</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Equality">相等 (==)</a></td>      <td rowspan="4">从左到右</td>      <td><code>… == …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Inequality">不相等 (!=)</a></td>      <td><code>… != …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Strict_equality">一致/严格相等 (===)</a></td>      <td><code>… === …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Strict_inequality">不一致/严格不相等 (!==)</a></td>      <td><code>… !== …</code></td>    </tr>    <tr>      <td>8</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_AND">按位与 (&amp;)</a></td>      <td>从左到右</td>      <td><code>… &amp; …</code></td>    </tr>    <tr>      <td>7</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR">按位异或 (^)</a></td>      <td>从左到右</td>      <td><code>… ^ …</code></td>    </tr>    <tr>      <td>6</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_OR">按位或 (|)</a></td>      <td>从左到右</td>      <td><code>… | …</code></td>    </tr>    <tr>      <td>5</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_AND">逻辑与 (&amp;&amp;)</a></td>      <td>从左到右</td>      <td><code>… &amp;&amp; …</code></td>    </tr>    <tr>      <td rowspan="2">4</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_OR">逻辑或 (||)</a></td>      <td>从左到右</td>      <td><code>… || …</code></td>    </tr>    <tr>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing">空值合并 (??)</a></td>      <td>从左到右</td>      <td><code>… ?? …</code></td>    </tr>    <tr>      <td>3</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Conditional_operator">条件（三元）运算符</a></td>      <td>从右到左</td>      <td><code>… ? … : …</code></td>    </tr>    <tr>      <td rowspan="16">2</td>      <td rowspan="16"><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#赋值运算符">赋值</a></td>      <td rowspan="16">从右到左</td>      <td><code>… = …</code></td>    </tr>    <tr>      <td><code>… += …</code></td>    </tr>    <tr>      <td><code>… -= …</code></td>    </tr>    <tr>      <td><code>… **= …</code></td>    </tr>    <tr>      <td><code>… *= …</code></td>    </tr>    <tr>      <td><code>… /= …</code></td>    </tr>    <tr>      <td><code>… %= …</code></td>    </tr>    <tr>      <td><code>… &lt;&lt;= …</code></td>    </tr>    <tr>      <td><code>… &gt;&gt;= …</code></td>    </tr>    <tr>      <td><code>… &gt;&gt;&gt;= …</code></td>    </tr>    <tr>      <td><code>… &amp;= …</code></td>    </tr>    <tr>      <td><code>… ^= …</code></td>    </tr>    <tr>      <td><code>… |= …</code></td>    </tr>    <tr>      <td><code>… &amp;&amp;= …</code></td>    </tr>    <tr>      <td><code>… ||= …</code></td>    </tr>    <tr>      <td><code>… ??= …</code></td>    </tr>    <tr>      <td>1</td>      <td><a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Comma_operator">逗号 / 序列</a></td>      <td>从左到右</td>      <td><code>… , …</code></td>    </tr>  </tbody></table><h1 id="JavaScript面试题，关于连续赋值的坑？"><a href="#JavaScript面试题，关于连续赋值的坑？" class="headerlink" title="JavaScript面试题，关于连续赋值的坑？"></a>JavaScript面试题，关于连续赋值的坑？</h1><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>a<span class="token punctuation">.</span>x <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// undefined</span><span class="token comment">// &#123;"n": 1,"x": &#123;"n": 2&#125;&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><blockquote><p>解答 <a target="_blank" rel="noopener" href="https://www.zhihu.com/question/41220520">https://www.zhihu.com/question/41220520</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Edge浏览器的一些技巧</title>
    <link href="/f7b4bbe5dd41/"/>
    <url>/f7b4bbe5dd41/</url>
    
    <content type="html"><![CDATA[<h1 id="优化性能"><a href="#优化性能" class="headerlink" title="优化性能"></a>优化性能</h1><blockquote><p>设置 👉 系统和性能 👉 优化性能</p><p>按说明设置，若运行出现卡顿，则需要关闭</p></blockquote><h1 id="IE兼容性设置"><a href="#IE兼容性设置" class="headerlink" title="IE兼容性设置"></a>IE兼容性设置</h1><blockquote><p>设置 👉 默认浏览器 👉 允许在 Internet Explorer 模式下重新加载网站 (IE 模式)：允许</p></blockquote><h1 id="实验性功能"><a href="#实验性功能" class="headerlink" title="实验性功能"></a>实验性功能</h1><blockquote><p>浏览器输入 <code>edge://flags/</code></p><p>在输入框搜索关键词</p><p><code>Smooth Scrolling</code>：滚动页面内容时平滑动画</p><p><code>Parallel downloading</code>：启用并行下载以加快下载速度</p><p><code>Show block option in autoplay settings</code>：自动播放设置</p></blockquote><h1 id="阅读器模式"><a href="#阅读器模式" class="headerlink" title="阅读器模式"></a>阅读器模式</h1><blockquote><p>网址前面加上 <code>read:</code> 再回车（突破一些无法复制文字网页的限制）</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>迹路一下</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Edge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>⑵ 认知Frida</title>
    <link href="/a79955185f6f/"/>
    <url>/a79955185f6f/</url>
    
    <content type="html"><![CDATA[<h1 id="官网API文档"><a href="#官网API文档" class="headerlink" title="官网API文档"></a>官网API文档</h1><blockquote><p><a target="_blank" rel="noopener" href="https://frida.re/docs/javascript-api/">https://frida.re/docs/javascript-api/</a></p></blockquote><h1 id="Frida-常用命令"><a href="#Frida-常用命令" class="headerlink" title="Frida 常用命令"></a>Frida 常用命令</h1><blockquote><p>帮助命令：<code>frida -h</code>  ,  <code>frida-ps -h</code></p><p>通过USB连接，仅列出应用程序：<code>frida-ps -U -a</code></p></blockquote><h1 id="Frida-启动"><a href="#Frida-启动" class="headerlink" title="Frida 启动"></a>Frida 启动</h1><blockquote><p>Frida有<code>attach</code>和<code>spawn</code>两种启动方式</p><p><code>attach</code>：在APP启动后进行注入。适用于Hook点处于靠后的情况，若启动时已加载则无法Hook到。</p><p><code>spawn</code>：在启动时进行注入。交由Frida管控APP，运行中则会重启APP在启动时注入。</p></blockquote><h2 id="attach"><a href="#attach" class="headerlink" title="attach"></a>attach</h2><p><code>hello-frida.js</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Java<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello frida ~'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="通过USB，根据包名-x2F-应用名，加载脚本"><a href="#通过USB，根据包名-x2F-应用名，加载脚本" class="headerlink" title="通过USB，根据包名&#x2F;应用名，加载脚本"></a>通过USB，根据包名&#x2F;应用名，加载脚本</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 打开应用 查询信息</span>frida-ps <span class="token parameter variable">-U</span> <span class="token parameter variable">-a</span><span class="token comment">#   PID  Name        Identifier</span><span class="token comment">#  ----------  ---------------------------------------</span><span class="token comment"># 15883  LessonTest  com.hexl.lessontest</span><span class="token comment"># 低版本（12）的用包名</span>frida <span class="token parameter variable">-U</span> com.hexl.lessontest <span class="token parameter variable">-l</span> .<span class="token punctuation">\</span>hello-frida.js<span class="token comment"># Failed to spawn: unable to find process with name 'com.hexl.lessontest'</span><span class="token comment"># 高版本的需要用应用名 -n 可省略</span>frida <span class="token parameter variable">-U</span> LessonTest <span class="token parameter variable">-l</span> .<span class="token punctuation">\</span>hello-frida.js<span class="token comment"># -N 为指定包名</span>frida <span class="token parameter variable">-U</span> <span class="token parameter variable">-N</span> com.hexl.lessontest <span class="token parameter variable">-l</span> .<span class="token punctuation">\</span>hello-frida.js<span class="token comment">#      ____</span><span class="token comment">#     / _  |   Frida 16.0.2 - A world-class dynamic instrumentation toolkit</span><span class="token comment">#    | (_| |</span><span class="token comment">#     > _  |   Commands:</span><span class="token comment">#    /_/ |_|       help      -> Displays the help system</span><span class="token comment">#    . . . .       object?   -> Display information about 'object'</span><span class="token comment">#    . . . .       exit/quit -> Exit</span><span class="token comment">#    . . . .</span><span class="token comment">#    . . . .   More info at https://frida.re/docs/home/</span><span class="token comment">#    . . . .</span><span class="token comment">#    . . . .   Connected to Nexus 6P (id=CVH7N15A31000710)</span><span class="token comment"># Attaching...</span><span class="token comment"># hello frida ~</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="通过USB，Hook最前端的APP"><a href="#通过USB，Hook最前端的APP" class="headerlink" title="通过USB，Hook最前端的APP"></a>通过USB，Hook最前端的APP</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frida <span class="token parameter variable">-UF</span> <span class="token parameter variable">-l</span> .<span class="token punctuation">\</span>hello-frida.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="spawn"><a href="#spawn" class="headerlink" title="spawn"></a>spawn</h2><blockquote><p>必须增加 <code>-f</code> 参数</p><p><code>frida -U -f com.hexl.lessontest -l .\hello-frida.js</code></p><p><code>--no-pause</code> 新版本取消，默认立即执行。暂停主线程参数 <code>--pause</code></p></blockquote><h2 id="通过python调用"><a href="#通过python调用" class="headerlink" title="通过python调用"></a>通过python调用</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> frida<span class="token keyword">def</span> <span class="token function">on_message</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">start_by_attach</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> js_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    device <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span>    session <span class="token operator">=</span> device<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>js_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        script <span class="token operator">=</span> session<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    script<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> on_message<span class="token punctuation">)</span>    script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">start_by_spawn</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> js_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    device <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_usb_device<span class="token punctuation">(</span><span class="token punctuation">)</span>    pid <span class="token operator">=</span> device<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span>name<span class="token punctuation">)</span>    device<span class="token punctuation">.</span>resume<span class="token punctuation">(</span>pid<span class="token punctuation">)</span>    session <span class="token operator">=</span> device<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>pid<span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>js_path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        script <span class="token operator">=</span> session<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    script<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> on_message<span class="token punctuation">)</span>    script<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># start_by_attach('LessonTest', "./hello-frida.js")</span>    start_by_spawn<span class="token punctuation">(</span><span class="token string">'com.hexl.lessontest'</span><span class="token punctuation">,</span> <span class="token string">"./hello-frida.js"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="Frida自定义连接"><a href="#Frida自定义连接" class="headerlink" title="Frida自定义连接"></a>Frida自定义连接</h1><h2 id="Frida-Server自定义端口"><a href="#Frida-Server自定义端口" class="headerlink" title="Frida Server自定义端口"></a>Frida Server自定义端口</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./frida-server <span class="token parameter variable">-l</span> <span class="token number">192.168</span>.0.1:6666<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="Frida远程连接自定义端口"><a href="#Frida远程连接自定义端口" class="headerlink" title="Frida远程连接自定义端口"></a>Frida远程连接自定义端口</h2><h3 id="通过命令连接"><a href="#通过命令连接" class="headerlink" title="通过命令连接"></a>通过命令连接</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frida <span class="token parameter variable">-H</span> <span class="token number">192.168</span>.0.1:6666 com.demo.app <span class="token parameter variable">-l</span> encryption-algorithm.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="通过python连接"><a href="#通过python连接" class="headerlink" title="通过python连接"></a>通过python连接</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 核心代码</span>process <span class="token operator">=</span> frida<span class="token punctuation">.</span>get_device_manager<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_remote_device<span class="token punctuation">(</span><span class="token string">'127.0.0.1:6666'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string">'com.demo.app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="Frida-Hook"><a href="#Frida-Hook" class="headerlink" title="Frida Hook"></a>Frida Hook</h1><p><a target="_blank" rel="noopener" href="https://kevinspider.github.io/frida/frida-hook-java/">https://kevinspider.github.io/frida/frida-hook-java/</a></p><p><a target="_blank" rel="noopener" href="https://kevinspider.github.io/frida/frida-hook-so/">https://kevinspider.github.io/frida/frida-hook-so/</a></p><p><a target="_blank" rel="noopener" href="https://eternalsakura13.com/2020/07/04/frida/">https://eternalsakura13.com/2020/07/04/frida/</a></p><p><a target="_blank" rel="noopener" href="https://zhuanlan.zhihu.com/p/157604388">https://zhuanlan.zhihu.com/p/157604388</a></p><p><a target="_blank" rel="noopener" href="https://copyfuture.com/blogs-details/20200728143553957rr76y0poznfo875">https://copyfuture.com/blogs-details/20200728143553957rr76y0poznfo875</a></p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>安卓逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/0eb38620ac85/"/>
    <url>/0eb38620ac85/</url>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><blockquote><p>(<a target="_blank" rel="noopener" href="https://www.docker.com/)[https://www.docker.com/]">https://www.docker.com/)[https://www.docker.com/]</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>运维</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>⑴ 准备安卓逆向</title>
    <link href="/572e93e4ff4c/"/>
    <url>/572e93e4ff4c/</url>
    
    <content type="html"><![CDATA[<h1 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h1><h2 id="虚拟机环境"><a href="#虚拟机环境" class="headerlink" title="虚拟机环境"></a>虚拟机环境</h2><blockquote><p><strong>下载地址</strong>  <a target="_blank" rel="noopener" href="https://www.kali.org/get-kali/#kali-virtual-machines">Kali Linux</a></p><p><strong>文档地址</strong>  <a target="_blank" rel="noopener" href="https://www.kali.org/docs/virtualization/install-vmware-guest-vm/">https://www.kali.org/docs/virtualization/install-vmware-guest-vm/</a></p></blockquote><h2 id="安卓逆向环境"><a href="#安卓逆向环境" class="headerlink" title="安卓逆向环境"></a>安卓逆向环境</h2><ul><li><a target="_blank" rel="noopener" href="https://developer.android.google.cn/studio/">Android Studio </a> ：ADB要加入环境变量，方便操作</li><li><a target="_blank" rel="noopener" href="https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links">Miniconda</a> ：需要 python 3.8</li><li><strong>测试机</strong>：推荐Google Nexus或者Pixel系列。<strong>Pixel2XL</strong> 或者 <strong>Nexus 6P</strong>，我这里用的 <em>Nexus 6P 64GB</em> 的版本</li><li><a target="_blank" rel="noopener" href="https://developers.google.cn/android/images?hl=zh-cn#angler">“angler” for Nexus 6P - 8.1.0 (OPM7.181205.001, Dec 2018)</a>：下载测试机对应的安卓8系统</li><li><a target="_blank" rel="noopener" href="https://github.com/topjohnwu/Magisk/releases">Magisk</a> ：Magisk v25.2 （此时此刻为最新版本）</li></ul><h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><blockquote><p>最方便的是让卖家直接帮忙刷好</p></blockquote><p>刷机步骤：</p><ol><li><p>打开<strong>开发者模式</strong>，打开OEM解锁和USB调试。</p></li><li><p>用USB线连接计算机后要同意允许USB调试。</p></li><li><p>命令行输入 <code>adb reboot bootloader</code> ，手机会重启进入 bootloader 模式（OEM没解锁可以运行 <code>fastboot flashing unlock</code>，音量电源选择 Yes）</p></li><li><p>解压 <a target="_blank" rel="noopener" href="https://developers.google.cn/android/images?hl=zh-cn#angler">“angler” for Nexus 6P - 8.1.0 (OPM7.181205.001, Dec 2018)</a> ，进入目录，运行<code>flash-all.bat</code>，进行刷机，安装过程耐心等待，完成后设置手机。</p></li><li><p>手机设置中文，其他的选项都不开一路都 <strong>跳过</strong>。最后进入开发者模式打开<strong>USB调试</strong>。</p></li><li><p>设置WIFI。“已连接，但无法访问互联网”是正常的，需要USB连接，打开命令行输入：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置 204服务器</span>adb shell settings put global captive_portal_http_url https://www.google.cn/generate_204adb shell settings put global captive_portal_https_url https://www.google.cn/generate_204<span class="token comment"># 设置 时间服务器</span>adb shell settings put global ntp_server <span class="token number">1</span>.hk.pool.ntp.org<span class="token comment"># 重启手机</span>adb <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ol><h2 id="ROOT"><a href="#ROOT" class="headerlink" title="ROOT"></a>ROOT</h2><ol><li><p>安装 <strong>Magisk</strong> ，<code>adb install Magisk-v25.2.apk</code></p></li><li><p>在解压的 <a target="_blank" rel="noopener" href="https://developers.google.cn/android/images?hl=zh-cn#angler">“angler” for Nexus 6P - 8.1.0 (OPM7.181205.001, Dec 2018)</a> 文件目录里，找到 <code>image-angler-opm7.181205.001.zip</code> 并解压，推送 <code>boot.img</code> 文件到手机 <code>/sdcard/download/</code> 目录</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb push boot.img /sdcard/download/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>操作手机，打开 <strong>Magisk</strong> ，安装、下一步、选择一个修补文件、选择 <code>下载目录</code> 找到刚才推送的 <code>boot.img</code> 文件，开始。</p></li><li><p>把 <strong>Output file</strong> 通过 adb pull 拿到计算机。</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ***** 以实际为准</span>adb pull /storage/emulated/0/Download/magisk_patched-*****_*****.img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>进入bootloader，<code>adb reboot bootloader</code></p></li><li><p><code>fastboot flash boot magisk_patched-*****_*****.img</code> ，fastboot 刷入刚才导出的文件后，点击手机电源键，进入系统。</p></li><li><p>**Magisk **的设置（设置好，重启手机）：</p><ul><li>超级用户中 打开 <code>shell</code> </li><li>安全DNS</li><li>隐藏<code>Magisk</code>应用，添加主屏幕快捷方式</li><li>开启<code>Zygisk</code>，遵守排除列表。（排除列表是要添加有检测root能力的APP）</li></ul></li><li><p>验证 手机是否root成功。<code>adb shell </code> 再输入<code>su</code> 看下是不是<code>由$变成了#</code></p></li></ol><h1 id="抓包环境搭建"><a href="#抓包环境搭建" class="headerlink" title="抓包环境搭建"></a>抓包环境搭建</h1><h2 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h2><h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h3><ul><li>Tools → Options → HTTPS 和 Connections 按软件界面文字勾选</li><li>手机配置网络代理 → 访问Fiddler代理地址 → 下载证书</li><li>将证书移入系统内</li></ul><h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><ul><li>Proxy Settings  → HTTP Proxy 和 SOCKS Proxy 都勾选相应选项</li><li>SSL Proxying   → 添加 Include Location <code>*:*</code></li><li>Help  → SSL Proxying  → Install Charles Root Certificate on a Mobile Device or Remote Browser  → 按上面IP去手机设置代理并访问<code>chls.pro/ssl</code></li><li>将证书移入系统内</li></ul><h2 id="信任证书"><a href="#信任证书" class="headerlink" title="信任证书"></a>信任证书</h2><blockquote><p>安卓7以上才需要设置信任证书，将证书移入系统</p><p>使用MT管理器，移动证书目录如下：</p><p><code>/data/misc/user/0/cacerts-added/</code>  → <code>/system/etc/security/cacerts</code></p></blockquote><h2 id="VPN-中间人"><a href="#VPN-中间人" class="headerlink" title="VPN + 中间人"></a>VPN + 中间人</h2><h3 id="Postern"><a href="#Postern" class="headerlink" title="Postern"></a>Postern</h3><ul><li><p>安装软件</p><blockquote><p><a target="_blank" rel="noopener" href="https://github.com/postern-overwal/postern-stuff">https://github.com/postern-overwal/postern-stuff</a></p></blockquote></li><li><p>配置代理</p><blockquote><p>设置代理类型为 SOCKS5</p></blockquote></li><li><p>配置代理规则</p><blockquote><p>匹配所有地址，通过代理连接，设置代理&#x2F;代理组，开启抓包</p></blockquote></li></ul><p>开启VPN后，可配合Charles进行抓包</p><h2 id="翻墙代理设置"><a href="#翻墙代理设置" class="headerlink" title="翻墙代理设置"></a>翻墙代理设置</h2><p>Charles设置：Proxy → External Proxy Settings…  → 勾选<code>Use external proxy servers</code> → 勾选<code>SOCKS Proxy</code>并设置</p><h2 id="手机内抓包"><a href="#手机内抓包" class="headerlink" title="手机内抓包"></a>手机内抓包</h2><h3 id="HttpCanary"><a href="#HttpCanary" class="headerlink" title="HttpCanary"></a>HttpCanary</h3><blockquote><p><a target="_blank" rel="noopener" href="https://apkpure.com/tw/httpcanary-%E2%80%94-http-sniffer-capture-analysis/com.guoshi.httpcanary/download">https://apkpure.com/tw/httpcanary-%E2%80%94-http-sniffer-capture-analysis/com.guoshi.httpcanary/download</a></p><p><a target="_blank" rel="noopener" href="https://www.52pojie.cn/thread-1592529-1-1.html">https://www.52pojie.cn/thread-1592529-1-1.html</a></p></blockquote><p>拓展：<a target="_blank" rel="noopener" href="https://www.everyproxy.co.uk/why-use-every-proxy/">Every Proxy 👉 https://www.everyproxy.co.uk/why-use-every-proxy/</a></p><h3 id="AVD-https-remount-clash代理转发-burp版"><a href="#AVD-https-remount-clash代理转发-burp版" class="headerlink" title="AVD+https+remount+clash代理转发+burp版"></a>AVD+https+remount+clash代理转发+burp版</h3><blockquote><p>详见大佬文章：<a target="_blank" rel="noopener" href="https://www.52pojie.cn/thread-1701215-1-1.html">https://www.52pojie.cn/thread-1701215-1-1.html</a></p></blockquote><h1 id="Frida-环境搭建"><a href="#Frida-环境搭建" class="headerlink" title="Frida 环境搭建"></a>Frida 环境搭建</h1><h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><blockquote><p>官网 👉 <a target="_blank" rel="noopener" href="https://frida.re/docs/installation/">https://frida.re/docs/installation/</a></p><p>GitHub 👉 <a target="_blank" rel="noopener" href="https://github.com/frida/frida">https://github.com/frida/frida</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 这个若使用最新可以不执行</span>pip <span class="token function">install</span> <span class="token assign-left variable">frida</span><span class="token operator">==</span><span class="token number">16.0</span>.1<span class="token comment"># 可以直接执行安装 frida-tools</span>pip <span class="token function">install</span> frida-tools<span class="token operator">==</span><span class="token number">12.0</span>.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>查询手机架构，下载对应版本 <code>frida-server</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查CPU信息</span>adb shell <span class="token function">cat</span> /proc/cpuinfo<span class="token comment"># processor 为 0-7  代表8个核心</span><span class="token comment"># CPU architecture: 8  代表 arm64-v8a 架构</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>推送 <code>frida-server</code> 到手机中</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb push frida-server-16.0.1-android-arm64 /data/local/tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>修改 <code>frida-server</code>  权限为 777 ，并启动</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 修改权限</span><span class="token builtin class-name">cd</span> data/local/tmp<span class="token function">chmod</span> <span class="token number">777</span> frida-server-16.0.1-android-arm64<span class="token comment"># 查看是否修改成功</span><span class="token function">ls</span> <span class="token parameter variable">-l</span><span class="token comment"># 启动 frida-server</span>./frida-server-16.0.1-android-arm64 <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>测试</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在PC上执行“列出所有进程”命令 进行验证是否安装成功</span> frida-ps <span class="token parameter variable">-U</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>Windows 端口转发（可能会用上）</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb forward tcp:27043 tcp:27043adb forward tcp:27042 tcp:27042<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>安卓逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
      <tag>Frida</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JSFuck AAEncode JJEncode</title>
    <link href="/a2b22582c81c/"/>
    <url>/a2b22582c81c/</url>
    
    <content type="html"><![CDATA[<h1 id="JSFuck"><a href="#JSFuck" class="headerlink" title="JSFuck"></a>JSFuck</h1><blockquote><p>网站 ：<a target="_blank" rel="noopener" href="http://www.jsfuck.com/">http://www.jsfuck.com/</a></p><p>Github ：<a target="_blank" rel="noopener" href="https://github.com/aemkei/jsfuck">https://github.com/aemkei/jsfuck</a></p><p>完整字符对应列表：<a target="_blank" rel="noopener" href="https://github.com/aemkei/jsfuck/blob/master/jsfuck.js">https://github.com/aemkei/jsfuck/blob/master/jsfuck.js</a></p></blockquote><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>编码前：<code>alert(&#39;hi JSFuck&#39;)</code></p><p>编码后：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">!</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h2><ul><li>控制台运行，如果有报错直接查看 VM</li><li>如果不报错，在最后一个括号<code>)</code>前添加一个字符，如 <code>+&#39;a&#39;</code>，再运行，主动制造报错查看VM</li></ul><h1 id="AAEncode"><a href="#AAEncode" class="headerlink" title="AAEncode"></a>AAEncode</h1><blockquote><p>网址：</p><ul><li><a target="_blank" rel="noopener" href="https://utf-8.jp/public/aaencode.html">https://utf-8.jp/public/aaencode.html</a></li><li><a target="_blank" rel="noopener" href="http://www.atoolbox.net/Tool.php?Id=703">http://www.atoolbox.net/Tool.php?Id=703</a></li></ul></blockquote><h2 id="编码-1"><a href="#编码-1" class="headerlink" title="编码"></a>编码</h2><p>编码前：<code>alert(&#39;hi AAEncode&#39;)</code></p><p>编码后：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">ﾟωﾟﾉ<span class="token operator">=</span> <span class="token operator">/</span>｀ｍ´）ﾉ <span class="token operator">~</span>┻━┻   <span class="token comment">//*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+/*´∇｀*/(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o) +(o^_^o))+((o^_^o) - (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o) +(o^_^o))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(c^_^o)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(c^_^o)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(c^_^o)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+((o^_^o) +(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(o^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_');</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="解码-1"><a href="#解码-1" class="headerlink" title="解码"></a>解码</h2><p>控制台运行，删掉最后一个小笑脸<code>(&#39;_&#39;)</code></p><h1 id="JJEncode"><a href="#JJEncode" class="headerlink" title="JJEncode"></a>JJEncode</h1><blockquote><p>网址：</p><ul><li><a target="_blank" rel="noopener" href="https://utf-8.jp/public/jjencode.html">https://utf-8.jp/public/jjencode.html</a></li><li><a target="_blank" rel="noopener" href="http://www.atoolbox.net/Tool.php?Id=704nnnn">http://www.atoolbox.net/Tool.php?Id=704nnnn</a></li></ul></blockquote><h2 id="编码-2"><a href="#编码-2" class="headerlink" title="编码"></a>编码</h2><p>编码前：<code>alert(&#39;hi JJEncode&#39;)</code></p><p>编码后：</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">$<span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>$<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token literal-property property">___</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$$$$</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">__$</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$_$_</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">_$_</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$_$$</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">$$_$</span><span class="token operator">:</span><span class="token punctuation">(</span>$<span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">_$$</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$$$_</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">$__</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$_$</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$$__</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">$$_</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$$$</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$___</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">,</span><span class="token literal-property property">$__$</span><span class="token operator">:</span><span class="token operator">++</span>$<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span>$_<span class="token operator">=</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>$_<span class="token operator">=</span>$<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>$_$<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>_$<span class="token operator">=</span>$<span class="token punctuation">.</span>$_<span class="token punctuation">[</span>$<span class="token punctuation">.</span>__$<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>$$<span class="token operator">=</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>$<span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>__$<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>$<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>_$$<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>__<span class="token operator">=</span>$<span class="token punctuation">.</span>$_<span class="token punctuation">[</span>$<span class="token punctuation">.</span>$$_<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>$<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>__$<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>_<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>_$_<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>$<span class="token punctuation">.</span>$_<span class="token punctuation">[</span>$<span class="token punctuation">.</span>$_$<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__<span class="token operator">+</span>$<span class="token punctuation">.</span>_$<span class="token operator">+</span>$<span class="token punctuation">.</span>$<span class="token punctuation">;</span>$<span class="token punctuation">.</span>$$<span class="token operator">=</span>$<span class="token punctuation">.</span>$<span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>_$$<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__<span class="token operator">+</span>$<span class="token punctuation">.</span>_<span class="token operator">+</span>$<span class="token punctuation">.</span>$<span class="token operator">+</span>$<span class="token punctuation">.</span>$$<span class="token punctuation">;</span>$<span class="token punctuation">.</span>$<span class="token operator">=</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>___<span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>$_<span class="token punctuation">]</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>$_<span class="token punctuation">]</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>$$<span class="token operator">+</span><span class="token string">"\""</span><span class="token operator">+</span>$<span class="token punctuation">.</span>$_$_<span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">[</span>$<span class="token punctuation">.</span>_$_<span class="token punctuation">]</span><span class="token operator">+</span>$<span class="token punctuation">.</span>$$$_<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>$$_<span class="token operator">+</span>$<span class="token punctuation">.</span>_$_<span class="token operator">+</span>$<span class="token punctuation">.</span>__<span class="token operator">+</span><span class="token string">"('\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>$_$<span class="token operator">+</span>$<span class="token punctuation">.</span>___<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>$_$<span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>$__<span class="token operator">+</span>$<span class="token punctuation">.</span>___<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>_$_<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>_$_<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>___<span class="token operator">+</span>$<span class="token punctuation">.</span>$_$<span class="token operator">+</span><span class="token string">"\\"</span><span class="token operator">+</span>$<span class="token punctuation">.</span>__$<span class="token operator">+</span>$<span class="token punctuation">.</span>$_$<span class="token operator">+</span>$<span class="token punctuation">.</span>$$_<span class="token operator">+</span>$<span class="token punctuation">.</span>$$__<span class="token operator">+</span>$<span class="token punctuation">.</span>_$<span class="token operator">+</span>$<span class="token punctuation">.</span>$$_$<span class="token operator">+</span>$<span class="token punctuation">.</span>$$$_<span class="token operator">+</span><span class="token string">"')"</span><span class="token operator">+</span><span class="token string">"\""</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="解码-2"><a href="#解码-2" class="headerlink" title="解码"></a>解码</h2><p>控制台输入下面这段代码后再输入要解密的内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">__defineGetter__</span><span class="token punctuation">(</span><span class="token string">'constructor'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'decode :'</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">Function</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
      <tag>JSFuck</tag>
      
      <tag>AAEncode</tag>
      
      <tag>JJEncode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无限debugger</title>
    <link href="/652b91d8c3db/"/>
    <url>/652b91d8c3db/</url>
    
    <content type="html"><![CDATA[<h1 id="实现无限debugger"><a href="#实现无限debugger" class="headerlink" title="实现无限debugger"></a>实现无限debugger</h1><h2 id="直接使用关键字"><a href="#直接使用关键字" class="headerlink" title="直接使用关键字"></a>直接使用关键字</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">直接使用debugger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">debugger_test_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之前的输出'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">debugger</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">debugger_test_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="利用-eval"><a href="#利用-eval" class="headerlink" title="利用 eval()"></a>利用 eval()</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">利用 eval()<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">debugger_test_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之前的输出'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'debugger'</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出 未混淆 debugger 关键字'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token stringspan><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出 JSFuck混淆 debugger 关键字'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">debugger_test_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="利用-call、apply"><a href="#利用-call、apply" class="headerlink" title="利用 call、apply"></a>利用 call、apply</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">利用 call、apply<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">debugger_test_3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之前的输出'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Function</span><span class="token punctuation">(</span><span class="token string">'debugger'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出 Function call，apply效果相同'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">tmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    tmp<span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token string">'debugger;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出 某个方法的constructor call'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token string">'debugger'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之后的输出 匿名函数 call'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">debugger_test_3</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="利用定时器"><a href="#利用定时器" class="headerlink" title="利用定时器"></a>利用定时器</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">利用定时器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">debugger_test_4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'断点之前的输出'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">stop_debugger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">debugger</span>    <span class="token punctuation">&#125;</span>    <span class="token function">setInterval</span><span class="token punctuation">(</span>stop_debugger<span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'一直循环 定时器 3s 触发一次'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token function">debugger_test_4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token keyword">debugger</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="绕过无限debugger方法"><a href="#绕过无限debugger方法" class="headerlink" title="绕过无限debugger方法"></a>绕过无限debugger方法</h1><h2 id="停用断点"><a href="#停用断点" class="headerlink" title="停用断点"></a>停用断点</h2><p>停用所有断点功能（开发者工具右上角位置），快捷键 <code>Ctrl</code>+<code>F8</code></p><h2 id="Never-pause-here"><a href="#Never-pause-here" class="headerlink" title="Never pause here"></a>Never pause here</h2><p>定位到debugger的位置，右键选择<code>一律不在此处暂停</code>，该方法较为简单</p><h2 id="中间人拦截"><a href="#中间人拦截" class="headerlink" title="中间人拦截"></a>中间人拦截</h2><p>中间人拦截带有debugger的数据包，替换对应的文件。可利用类似 Fiddler 的 AutoResponder 的功能实现</p><h2 id="hook函数"><a href="#hook函数" class="headerlink" title="hook函数"></a>hook函数</h2><p>可以控制台hook，但刷新后失效。也可以利用油猴脚本实现</p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>Web逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web逆向</tag>
      
      <tag>无限debugger</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅸ.Re：Scrapy中间件</title>
    <link href="/b2f48fd84c6c/"/>
    <url>/b2f48fd84c6c/</url>
    
    <content type="html"><![CDATA[<h1 id="MiddlewareManager"><a href="#MiddlewareManager" class="headerlink" title="MiddlewareManager"></a>MiddlewareManager</h1><blockquote><p>Scrapy 中 <code>SpiderMiddlewareManager</code>、<code>DownloaderMiddlewareManager</code>、<code>ExtensionManager</code>和<code>ItemPipelineManager</code>继承了相同的基类<code>MiddlewareManager</code></p><p><code>SpiderMiddlewareManager</code>：可以理解成Scrapy针对Spider处理机制的钩子框架，可以自定义处理发送给Spider的响应、Spider产生的 Request 及 Item</p><p><code>DownloaderMiddlewareManager</code>：可以理解成Scrapy针对请求&#x2F;响应的钩子框架，可以增加对请求&#x2F;响应前后的处理</p><p><code>ExtensionManager</code>：扩展（只是普通的类）。提供一些辅助功能和状态统计</p><p><code>ItemPipelineManager</code>：持久化数据（需要自行实现）</p></blockquote><h2 id="scrapy-x2F-middleware-py-MiddlewareManager"><a href="#scrapy-x2F-middleware-py-MiddlewareManager" class="headerlink" title="scrapy&#x2F;middleware.py#MiddlewareManager"></a>scrapy&#x2F;middleware.py#MiddlewareManager</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MiddlewareManager</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Base class for implementing middleware managers"""</span>    component_name <span class="token operator">=</span> <span class="token string">'foo middleware'</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>middlewares<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>middlewares <span class="token operator">=</span> middlewares        <span class="token comment"># Optional because process_spider_output and process_spider_exception can be None</span>        <span class="token comment"># 用来存储各个中间件方法的队列</span>        self<span class="token punctuation">.</span>methods<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Deque<span class="token punctuation">[</span>Optional<span class="token punctuation">[</span>Callable<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span>deque<span class="token punctuation">)</span>        <span class="token keyword">for</span> mw <span class="token keyword">in</span> middlewares<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>_add_middleware<span class="token punctuation">(</span>mw<span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">_get_mwlist_from_settings</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> settings<span class="token punctuation">:</span> Settings<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">list</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> NotImplementedError    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">from_settings</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> settings<span class="token punctuation">:</span> Settings<span class="token punctuation">,</span> crawler<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 获取 settings.py 中的中间件设置</span>        mwlist <span class="token operator">=</span> cls<span class="token punctuation">.</span>_get_mwlist_from_settings<span class="token punctuation">(</span>settings<span class="token punctuation">)</span>        middlewares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        enabled <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> clspath <span class="token keyword">in</span> mwlist<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token comment"># 加载类路径</span>                mwcls <span class="token operator">=</span> load_object<span class="token punctuation">(</span>clspath<span class="token punctuation">)</span>                <span class="token comment"># 创建类实例</span>                mw <span class="token operator">=</span> create_instance<span class="token punctuation">(</span>mwcls<span class="token punctuation">,</span> settings<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span>                middlewares<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mw<span class="token punctuation">)</span>                enabled<span class="token punctuation">.</span>append<span class="token punctuation">(</span>clspath<span class="token punctuation">)</span>            <span class="token keyword">except</span> NotConfigured <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">if</span> e<span class="token punctuation">.</span>args<span class="token punctuation">:</span>                    clsname <span class="token operator">=</span> clspath<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                    logger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">"Disabled %(clsname)s: %(eargs)s"</span><span class="token punctuation">,</span>                                   <span class="token punctuation">&#123;</span><span class="token string">'clsname'</span><span class="token punctuation">:</span> clsname<span class="token punctuation">,</span> <span class="token string">'eargs'</span><span class="token punctuation">:</span> e<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                                   extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'crawler'</span><span class="token punctuation">:</span> crawler<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Enabled %(componentname)ss:\n%(enabledlist)s"</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#123;</span><span class="token string">'componentname'</span><span class="token punctuation">:</span> cls<span class="token punctuation">.</span>component_name<span class="token punctuation">,</span>                     <span class="token string">'enabledlist'</span><span class="token punctuation">:</span> pprint<span class="token punctuation">.</span>pformat<span class="token punctuation">(</span>enabled<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'crawler'</span><span class="token punctuation">:</span> crawler<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> cls<span class="token punctuation">(</span><span class="token operator">*</span>middlewares<span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">from_crawler</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>from_settings<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_add_middleware</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> mw<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>mw<span class="token punctuation">,</span> <span class="token string">'open_spider'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'open_spider'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>mw<span class="token punctuation">.</span>open_spider<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>mw<span class="token punctuation">,</span> <span class="token string">'close_spider'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'close_spider'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>appendleft<span class="token punctuation">(</span>mw<span class="token punctuation">.</span>close_spider<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_process_parallel</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> methodname<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>        methods <span class="token operator">=</span> cast<span class="token punctuation">(</span>Iterable<span class="token punctuation">[</span>Callable<span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span>methodname<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> process_parallel<span class="token punctuation">(</span>methods<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_process_chain</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> methodname<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>        methods <span class="token operator">=</span> cast<span class="token punctuation">(</span>Iterable<span class="token punctuation">[</span>Callable<span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span>methodname<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> process_chain<span class="token punctuation">(</span>methods<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_process_parallel<span class="token punctuation">(</span><span class="token string">'open_spider'</span><span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_process_parallel<span class="token punctuation">(</span><span class="token string">'close_spider'</span><span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="SpiderMiddlewareManager"><a href="#SpiderMiddlewareManager" class="headerlink" title="SpiderMiddlewareManager"></a>SpiderMiddlewareManager</h1><h2 id="默认中间件"><a href="#默认中间件" class="headerlink" title="默认中间件"></a>默认中间件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">SPIDER_MIDDLEWARES_BASE <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># Engine side</span>    <span class="token string">'scrapy.spidermiddlewares.httperror.HttpErrorMiddleware'</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.spidermiddlewares.offsite.OffsiteMiddleware'</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.spidermiddlewares.referer.RefererMiddleware'</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware'</span><span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.spidermiddlewares.depth.DepthMiddleware'</span><span class="token punctuation">:</span> <span class="token number">900</span><span class="token punctuation">,</span>    <span class="token comment"># Spider side</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="主要方法"><a href="#主要方法" class="headerlink" title="主要方法"></a>主要方法</h2><ul><li>process_spider_input(response, spider)<ul><li>返回 <code>None</code> 会继续执行其他中间件</li><li>引发一个异常（raise an exception）不会往下处理，会根据<code>errback</code>指定方法或进入process_spider_exception处理</li></ul></li><li>process_spider_output(response, result, spider)<ul><li>返回 <code>Request</code></li><li>返回 <code>Item</code></li></ul></li><li>process_spider_exception(response, exception, spider)<ul><li>返回 <code>None</code> 会继续给之后的 process_spider_exception 处理，直到 Engine 那里记录并丢弃</li><li>返回 <code>Request</code></li><li>返回 <code>Item</code></li></ul></li><li>process_start_requests(start_requests, spider)<ul><li>返回一个可迭代的 Request 对象</li></ul></li></ul><h1 id="DownloaderMiddlewareManager"><a href="#DownloaderMiddlewareManager" class="headerlink" title="DownloaderMiddlewareManager"></a>DownloaderMiddlewareManager</h1><h2 id="默认中间件-1"><a href="#默认中间件-1" class="headerlink" title="默认中间件"></a>默认中间件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">DOWNLOADER_MIDDLEWARES_BASE <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># Engine side</span>    <span class="token string">'scrapy.downloadermiddlewares.robotstxt.RobotsTxtMiddleware'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware'</span><span class="token punctuation">:</span> <span class="token number">350</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware'</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware'</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.retry.RetryMiddleware'</span><span class="token punctuation">:</span> <span class="token number">550</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.ajaxcrawl.AjaxCrawlMiddleware'</span><span class="token punctuation">:</span> <span class="token number">560</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware'</span><span class="token punctuation">:</span> <span class="token number">580</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware'</span><span class="token punctuation">:</span> <span class="token number">590</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.redirect.RedirectMiddleware'</span><span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.cookies.CookiesMiddleware'</span><span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware'</span><span class="token punctuation">:</span> <span class="token number">750</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.stats.DownloaderStats'</span><span class="token punctuation">:</span> <span class="token number">850</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.downloadermiddlewares.httpcache.HttpCacheMiddleware'</span><span class="token punctuation">:</span> <span class="token number">900</span><span class="token punctuation">,</span>    <span class="token comment"># Downloader side</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="主要方法-1"><a href="#主要方法-1" class="headerlink" title="主要方法"></a>主要方法</h2><ul><li>process_request(request, spider)<ul><li>返回 <code>None</code> 会执行其他中间件，直到被 Downloader 执行</li><li>返回 <code>Request</code> 会立即加入到下载队列中</li><li>返回 <code>Respense</code> 不会执行其他中间件，直接返回该响应</li><li>引发一个异常（IgnoreRequest） 会根据<code>errback</code>指定方法或进入process_exception处理。如果没有代码处理异常，它将会被忽略，且不被记录</li></ul></li><li>process_response(request, response, spider)<ul><li>返回 <code>Respense</code> 会执行其他中间件process_response的处理</li><li>引发一个异常（IgnoreRequest） 会根据<code>errback</code>指定方法或进入process_exception处理。如果没有代码处理异常，它将会被忽略，且不被记录</li></ul></li><li>process_exception(request, exception, spider)<ul><li>返回 <code>None</code> 会执行其他中间件继续处理异常</li><li>返回 <code>Request</code> 会立即加入到下载队列中</li><li>返回 <code>Respense</code> 不会执行其他中间件</li></ul></li></ul><h1 id="ExtensionManager"><a href="#ExtensionManager" class="headerlink" title="ExtensionManager"></a>ExtensionManager</h1><h2 id="默认中间件-2"><a href="#默认中间件-2" class="headerlink" title="默认中间件"></a>默认中间件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 因为通常不互相依赖影响，加载顺序无关紧要</span>EXTENSIONS_BASE <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'scrapy.extensions.corestats.CoreStats'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.telnet.TelnetConsole'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.memusage.MemoryUsage'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.memdebug.MemoryDebugger'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.closespider.CloseSpider'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.feedexport.FeedExporter'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.logstats.LogStats'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.spiderstate.SpiderState'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'scrapy.extensions.throttle.AutoThrottle'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="主要方法-2"><a href="#主要方法-2" class="headerlink" title="主要方法"></a>主要方法</h2><p>普通的类，如果<code>from_crawler</code>方法引发 <code>NotConfigured</code>异常，扩展将被禁用。否则，将启用扩展。</p><p>通常，扩展连接到 <code>Signals</code> 并执行由它们触发的任务。</p><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://docs.scrapy.org/en/latest/topics/signals.html#topics-signals">信号量 https://docs.scrapy.org/en/latest/topics/signals.html#topics-signals</a></p></blockquote><h1 id="ItemPipelineManager"><a href="#ItemPipelineManager" class="headerlink" title="ItemPipelineManager"></a>ItemPipelineManager</h1><h2 id="默认中间件-3"><a href="#默认中间件-3" class="headerlink" title="默认中间件"></a>默认中间件</h2><p>需要自己实现</p><h2 id="主要方法-3"><a href="#主要方法-3" class="headerlink" title="主要方法"></a>主要方法</h2><ul><li>process_item(self, item, spider)<ul><li>返回 <code>Item</code></li><li>返回 <code>Deferred</code></li><li>引发一个异常（<code>DropItem</code>）</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅷ.Re：Scrapy 之 Item Pipelines</title>
    <link href="/27decef6ec3e/"/>
    <url>/27decef6ec3e/</url>
    
    <content type="html"><![CDATA[<h1 id="Item-Pipeline"><a href="#Item-Pipeline" class="headerlink" title="Item Pipeline"></a>Item Pipeline</h1><blockquote><p>它负责将抓取到的数据可进行校验准确性、检测重复数据、持久化数据到数据库中。</p></blockquote><h1 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h1><h2 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-open-spider-self-spider-Spider-start-requests-Iterable-x3D-close-if-idle-bool-x3D-True"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-open-spider-self-spider-Spider-start-requests-Iterable-x3D-close-if-idle-bool-x3D-True" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  open_spider(self, spider: Spider, start_requests: Iterable &#x3D; (), close_if_idle: bool &#x3D; True)"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  open_spider(self, spider: Spider, start_requests: Iterable &#x3D; (), close_if_idle: bool &#x3D; True)</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">,</span> start_requests<span class="token punctuation">:</span> Iterable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> close_if_idle<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"No free spider slot when opening </span><span class="token interpolation"><span class="token punctuation">&#123;</span>spider<span class="token punctuation">.</span>name<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Spider opened"</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    nextcall <span class="token operator">=</span> CallLaterOnce<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_next_request<span class="token punctuation">)</span>    scheduler <span class="token operator">=</span> create_instance<span class="token punctuation">(</span>self<span class="token punctuation">.</span>scheduler_cls<span class="token punctuation">,</span> settings<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> crawler<span class="token operator">=</span>self<span class="token punctuation">.</span>crawler<span class="token punctuation">)</span>    start_requests <span class="token operator">=</span> <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>spidermw<span class="token punctuation">.</span>process_start_requests<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot <span class="token operator">=</span> Slot<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> close_if_idle<span class="token punctuation">,</span> nextcall<span class="token punctuation">,</span> scheduler<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>spider <span class="token operator">=</span> spider    <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">,</span> <span class="token string">"open"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> scheduler<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token comment"># 开启scraper</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>crawler<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log_deferred<span class="token punctuation">(</span>signals<span class="token punctuation">.</span>spider_opened<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="scrapy-x2F-core-x2F-scraper-py-Scraper-open-spider-self-spider-Spider"><a href="#scrapy-x2F-core-x2F-scraper-py-Scraper-open-spider-self-spider-Spider" class="headerlink" title="scrapy&#x2F;core&#x2F;scraper.py#Scraper  open_spider(self, spider: Spider)"></a>scrapy&#x2F;core&#x2F;scraper.py#Scraper  open_spider(self, spider: Spider)</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Open the given spider for scraping and allocate resources for it"""</span>    self<span class="token punctuation">.</span>slot <span class="token operator">=</span> Slot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>getint<span class="token punctuation">(</span><span class="token string">'SCRAPER_SLOT_MAX_ACTIVE_SIZE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 创建 ItemPipelineManager 默认 ITEM_PROCESSOR = 'scrapy.pipelines.ItemPipelineManager'</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>itemproc<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="scrapy-x2F-pipelines-x2F-init-py-ItemPipelineManager-MiddlewareManager"><a href="#scrapy-x2F-pipelines-x2F-init-py-ItemPipelineManager-MiddlewareManager" class="headerlink" title="scrapy&#x2F;pipelines&#x2F;init.py#ItemPipelineManager(MiddlewareManager)"></a>scrapy&#x2F;pipelines&#x2F;<strong>init</strong>.py#ItemPipelineManager(MiddlewareManager)</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ItemPipelineManager</span><span class="token punctuation">(</span>MiddlewareManager<span class="token punctuation">)</span><span class="token punctuation">:</span>    component_name <span class="token operator">=</span> <span class="token string">'item pipeline'</span>    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">_get_mwlist_from_settings</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> settings<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 默认 ITEM_PIPELINES = &#123;&#125; 约定需要自行在pipelines.py添加业务逻辑</span>        <span class="token keyword">return</span> build_component_list<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>getwithbase<span class="token punctuation">(</span><span class="token string">'ITEM_PIPELINES'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_add_middleware</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pipe<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>ItemPipelineManager<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>_add_middleware<span class="token punctuation">(</span>pipe<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>pipe<span class="token punctuation">,</span> <span class="token string">'process_item'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'process_item'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>deferred_f_from_coro_f<span class="token punctuation">(</span>pipe<span class="token punctuation">.</span>process_item<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_process_chain<span class="token punctuation">(</span><span class="token string">'process_item'</span><span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅶ.Re：Scrapy 之 Downloader</title>
    <link href="/d58e7a860216/"/>
    <url>/d58e7a860216/</url>
    
    <content type="html"><![CDATA[<h1 id="Downloader"><a href="#Downloader" class="headerlink" title="Downloader"></a>Downloader</h1><blockquote><p>Downloader 负责获取网页数据并交递响应给 Engine ，换言之，实际上是交给 Spiders</p></blockquote><h1 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h1><h2 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-download-self-request-Request-spider-Spider-gt-Deferred"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-download-self-request-Request-spider-Spider-gt-Deferred" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  _download(self, request: Request, spider: Spider) -&gt; Deferred"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  _download(self, request: Request, spider: Spider) -&gt; Deferred</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># open_spider(self, spider: Spider, start_requests: Iterable = (), close_if_idle: bool = True) --></span><span class="token comment"># _next_request(self) -> None --></span><span class="token comment"># _next_request_from_scheduler(self) -> Optional[Deferred] --></span><span class="token comment"># _download(self, request: Request, spider: Spider) -> Deferred</span><span class="token keyword">def</span> <span class="token function">_download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>add_request<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_on_success</span><span class="token punctuation">(</span>result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Incorrect type: expected Response or Request, got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> Response<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> result<span class="token punctuation">.</span>request <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>request <span class="token operator">=</span> request            logkws <span class="token operator">=</span> self<span class="token punctuation">.</span>logformatter<span class="token punctuation">.</span>crawled<span class="token punctuation">(</span>result<span class="token punctuation">.</span>request<span class="token punctuation">,</span> result<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>            <span class="token keyword">if</span> logkws <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                logger<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token operator">*</span>logformatter_adapter<span class="token punctuation">(</span>logkws<span class="token punctuation">)</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"spider"</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log<span class="token punctuation">(</span>                signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>response_received<span class="token punctuation">,</span>                response<span class="token operator">=</span>result<span class="token punctuation">,</span>                request<span class="token operator">=</span>result<span class="token punctuation">.</span>request<span class="token punctuation">,</span>                spider<span class="token operator">=</span>spider<span class="token punctuation">,</span>            <span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">_on_complete</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> _    <span class="token comment"># 默认使用 'scrapy.core.downloader.Downloader' 作为 Downloader</span>    dwld <span class="token operator">=</span> self<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span>request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    dwld<span class="token punctuation">.</span>addCallbacks<span class="token punctuation">(</span>_on_success<span class="token punctuation">)</span>    dwld<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_on_complete<span class="token punctuation">)</span>    <span class="token keyword">return</span> dwld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-fetch-self-request-spider"><a href="#scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-fetch-self-request-spider" class="headerlink" title="scrapy&#x2F;core&#x2F;downloader&#x2F;init.py#Downloader  fetch(self, request, spider)"></a>scrapy&#x2F;core&#x2F;downloader&#x2F;<strong>init</strong>.py#Downloader  fetch(self, request, spider)</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fetch</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">_deactivate</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>active<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        <span class="token keyword">return</span> response    <span class="token comment"># active 是 set集合，用于记录当前正在下载的 Request</span>    self<span class="token punctuation">.</span>active<span class="token punctuation">.</span>add<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token comment"># 执行 Downloader Middlewares 中的逻辑</span>    <span class="token comment"># _enqueue_request 请求队列</span>    dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>middleware<span class="token punctuation">.</span>download<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_enqueue_request<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token keyword">return</span> dfd<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_deactivate<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="scrapy-x2F-core-x2F-downloader-x2F-middleware-py-DownloaderMiddlewareManager-MiddlewareManager-download-self-download-func-Callable-request-Request-spider-Spider"><a href="#scrapy-x2F-core-x2F-downloader-x2F-middleware-py-DownloaderMiddlewareManager-MiddlewareManager-download-self-download-func-Callable-request-Request-spider-Spider" class="headerlink" title="scrapy&#x2F;core&#x2F;downloader&#x2F;middleware.py#DownloaderMiddlewareManager(MiddlewareManager)  download(self, download_func: Callable, request: Request, spider: Spider)"></a>scrapy&#x2F;core&#x2F;downloader&#x2F;middleware.py#DownloaderMiddlewareManager(MiddlewareManager)  download(self, download_func: Callable, request: Request, spider: Spider)</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 实现下载逻辑，返回deferred对象</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> download_func<span class="token punctuation">:</span> Callable<span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span>    <span class="token keyword">def</span> <span class="token function">process_request</span><span class="token punctuation">(</span>request<span class="token punctuation">:</span> Request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> method <span class="token keyword">in</span> self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'process_request'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            method <span class="token operator">=</span> cast<span class="token punctuation">(</span>Callable<span class="token punctuation">,</span> method<span class="token punctuation">)</span>            response <span class="token operator">=</span> <span class="token keyword">yield</span> deferred_from_coro<span class="token punctuation">(</span>method<span class="token punctuation">(</span>request<span class="token operator">=</span>request<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> response <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> _InvalidOutput<span class="token punctuation">(</span>                    <span class="token string-interpolation"><span class="token string">f"Middleware </span><span class="token interpolation"><span class="token punctuation">&#123;</span>method<span class="token punctuation">.</span>__qualname__<span class="token punctuation">&#125;</span></span><span class="token string"> must return None, Response or "</span></span>                    <span class="token string-interpolation"><span class="token string">f"Request, got </span><span class="token interpolation"><span class="token punctuation">&#123;</span>response<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                <span class="token punctuation">)</span>            <span class="token keyword">if</span> response<span class="token punctuation">:</span>                <span class="token keyword">return</span> response        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">yield</span> download_func<span class="token punctuation">(</span>request<span class="token operator">=</span>request<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span>    <span class="token keyword">def</span> <span class="token function">process_response</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> response <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string">"Received None in process_response"</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> response        <span class="token keyword">for</span> method <span class="token keyword">in</span> self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'process_response'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            method <span class="token operator">=</span> cast<span class="token punctuation">(</span>Callable<span class="token punctuation">,</span> method<span class="token punctuation">)</span>            response <span class="token operator">=</span> <span class="token keyword">yield</span> deferred_from_coro<span class="token punctuation">(</span>method<span class="token punctuation">(</span>request<span class="token operator">=</span>request<span class="token punctuation">,</span> response<span class="token operator">=</span>response<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> _InvalidOutput<span class="token punctuation">(</span>                    <span class="token string-interpolation"><span class="token string">f"Middleware </span><span class="token interpolation"><span class="token punctuation">&#123;</span>method<span class="token punctuation">.</span>__qualname__<span class="token punctuation">&#125;</span></span><span class="token string"> must return Response or Request, "</span></span>                    <span class="token string-interpolation"><span class="token string">f"got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                <span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> response        <span class="token keyword">return</span> response    <span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span>    <span class="token keyword">def</span> <span class="token function">process_exception</span><span class="token punctuation">(</span>failure<span class="token punctuation">:</span> Failure<span class="token punctuation">)</span><span class="token punctuation">:</span>        exception <span class="token operator">=</span> failure<span class="token punctuation">.</span>value        <span class="token keyword">for</span> method <span class="token keyword">in</span> self<span class="token punctuation">.</span>methods<span class="token punctuation">[</span><span class="token string">'process_exception'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            method <span class="token operator">=</span> cast<span class="token punctuation">(</span>Callable<span class="token punctuation">,</span> method<span class="token punctuation">)</span>            response <span class="token operator">=</span> <span class="token keyword">yield</span> deferred_from_coro<span class="token punctuation">(</span>method<span class="token punctuation">(</span>request<span class="token operator">=</span>request<span class="token punctuation">,</span> exception<span class="token operator">=</span>exception<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> response <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> _InvalidOutput<span class="token punctuation">(</span>                    <span class="token string-interpolation"><span class="token string">f"Middleware </span><span class="token interpolation"><span class="token punctuation">&#123;</span>method<span class="token punctuation">.</span>__qualname__<span class="token punctuation">&#125;</span></span><span class="token string"> must return None, Response or "</span></span>                    <span class="token string-interpolation"><span class="token string">f"Request, got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>                <span class="token punctuation">)</span>            <span class="token keyword">if</span> response<span class="token punctuation">:</span>                <span class="token keyword">return</span> response        <span class="token keyword">return</span> failure    deferred <span class="token operator">=</span> mustbe_deferred<span class="token punctuation">(</span>process_request<span class="token punctuation">,</span> request<span class="token punctuation">)</span>    deferred<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>process_exception<span class="token punctuation">)</span>    deferred<span class="token punctuation">.</span>addCallback<span class="token punctuation">(</span>process_response<span class="token punctuation">)</span>    <span class="token keyword">return</span> deferred<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-enqueue-request-self-request-spider"><a href="#scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-enqueue-request-self-request-spider" class="headerlink" title="scrapy&#x2F;core&#x2F;downloader&#x2F;init.py#Downloader  _enqueue_request(self, request, spider)"></a>scrapy&#x2F;core&#x2F;downloader&#x2F;<strong>init</strong>.py#Downloader  _enqueue_request(self, request, spider)</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_enqueue_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    key<span class="token punctuation">,</span> slot <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_slot<span class="token punctuation">(</span>request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    request<span class="token punctuation">.</span>meta<span class="token punctuation">[</span>self<span class="token punctuation">.</span>DOWNLOAD_SLOT<span class="token punctuation">]</span> <span class="token operator">=</span> key    <span class="token keyword">def</span> <span class="token function">_deactivate</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>        slot<span class="token punctuation">.</span>active<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        <span class="token keyword">return</span> response    slot<span class="token punctuation">.</span>active<span class="token punctuation">.</span>add<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log<span class="token punctuation">(</span>signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>request_reached_downloader<span class="token punctuation">,</span>                                request<span class="token operator">=</span>request<span class="token punctuation">,</span>                                spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>    deferred <span class="token operator">=</span> defer<span class="token punctuation">.</span>Deferred<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_deactivate<span class="token punctuation">)</span>    slot<span class="token punctuation">.</span>queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> deferred<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 根据 slot的策略 处理队列中的请求</span>    self<span class="token punctuation">.</span>_process_queue<span class="token punctuation">(</span>spider<span class="token punctuation">,</span> slot<span class="token punctuation">)</span>    <span class="token keyword">return</span> deferred<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-process-queue-self-spider-slot"><a href="#scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-process-queue-self-spider-slot" class="headerlink" title="scrapy&#x2F;core&#x2F;downloader&#x2F;init.py#Downloader  _process_queue(self, spider, slot)"></a>scrapy&#x2F;core&#x2F;downloader&#x2F;<strong>init</strong>.py#Downloader  _process_queue(self, spider, slot)</h4><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_process_queue</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">,</span> slot<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">from</span> twisted<span class="token punctuation">.</span>internet <span class="token keyword">import</span> reactor    <span class="token keyword">if</span> slot<span class="token punctuation">.</span>latercall <span class="token keyword">and</span> slot<span class="token punctuation">.</span>latercall<span class="token punctuation">.</span>active<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    <span class="token comment"># Delay queue processing if a download_delay is configured</span>    now <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span>    delay <span class="token operator">=</span> slot<span class="token punctuation">.</span>download_delay<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> delay<span class="token punctuation">:</span>        penalty <span class="token operator">=</span> delay <span class="token operator">-</span> now <span class="token operator">+</span> slot<span class="token punctuation">.</span>lastseen        <span class="token keyword">if</span> penalty <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            slot<span class="token punctuation">.</span>latercall <span class="token operator">=</span> reactor<span class="token punctuation">.</span>callLater<span class="token punctuation">(</span>penalty<span class="token punctuation">,</span> self<span class="token punctuation">.</span>_process_queue<span class="token punctuation">,</span> spider<span class="token punctuation">,</span> slot<span class="token punctuation">)</span>            <span class="token keyword">return</span>    <span class="token comment"># Process enqueued requests if there are free slots to transfer for this slot</span>    <span class="token keyword">while</span> slot<span class="token punctuation">.</span>queue <span class="token keyword">and</span> slot<span class="token punctuation">.</span>free_transfer_slots<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        slot<span class="token punctuation">.</span>lastseen <span class="token operator">=</span> now        request<span class="token punctuation">,</span> deferred <span class="token operator">=</span> slot<span class="token punctuation">.</span>queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 下载实现</span>        dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>_download<span class="token punctuation">(</span>slot<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>        dfd<span class="token punctuation">.</span>chainDeferred<span class="token punctuation">(</span>deferred<span class="token punctuation">)</span>        <span class="token comment"># prevent burst if inter-request delays were configured</span>        <span class="token keyword">if</span> delay<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>_process_queue<span class="token punctuation">(</span>spider<span class="token punctuation">,</span> slot<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h5 id="scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-download-self-slot-request-spider"><a href="#scrapy-x2F-core-x2F-downloader-x2F-init-py-Downloader-download-self-slot-request-spider" class="headerlink" title="scrapy&#x2F;core&#x2F;downloader&#x2F;init.py#Downloader  _download(self, slot, request, spider)"></a>scrapy&#x2F;core&#x2F;downloader&#x2F;<strong>init</strong>.py#Downloader  _download(self, slot, request, spider)</h5><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> slot<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># The order is very important for the following deferreds. Do not change!</span>    <span class="token comment"># 1. Create the download deferred</span>    <span class="token comment"># 通过执行 self.handlers.download_request 实现具体下载逻辑</span>    dfd <span class="token operator">=</span> mustbe_deferred<span class="token punctuation">(</span>self<span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>download_request<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token comment"># 2. Notify response_downloaded listeners about the recent download</span>    <span class="token comment"># before querying queue for next request</span>    <span class="token keyword">def</span> <span class="token function">_downloaded</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log<span class="token punctuation">(</span>signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>response_downloaded<span class="token punctuation">,</span>                                    response<span class="token operator">=</span>response<span class="token punctuation">,</span>                                    request<span class="token operator">=</span>request<span class="token punctuation">,</span>                                    spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>        <span class="token keyword">return</span> response    dfd<span class="token punctuation">.</span>addCallback<span class="token punctuation">(</span>_downloaded<span class="token punctuation">)</span>    <span class="token comment"># 3. After response arrives, remove the request from transferring</span>    <span class="token comment"># state to free up the transferring slot so it can be used by the</span>    <span class="token comment"># following requests (perhaps those which came from the downloader</span>    <span class="token comment"># middleware itself)</span>    slot<span class="token punctuation">.</span>transferring<span class="token punctuation">.</span>add<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">finish_transferring</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span>        slot<span class="token punctuation">.</span>transferring<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_process_queue<span class="token punctuation">(</span>spider<span class="token punctuation">,</span> slot<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log<span class="token punctuation">(</span>signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>request_left_downloader<span class="token punctuation">,</span>                                    request<span class="token operator">=</span>request<span class="token punctuation">,</span>                                    spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>        <span class="token keyword">return</span> _    <span class="token keyword">return</span> dfd<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>finish_transferring<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h5 id="Download-Handlers-支持"><a href="#Download-Handlers-支持" class="headerlink" title="Download Handlers 支持"></a>Download Handlers 支持</h5><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 默认支持的 Download Handlers</span>DOWNLOAD_HANDLERS_BASE <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.datauri.DataURIDownloadHandler'</span><span class="token punctuation">,</span>    <span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.file.FileDownloadHandler'</span><span class="token punctuation">,</span>    <span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.http.HTTPDownloadHandler'</span><span class="token punctuation">,</span>    <span class="token string">'https'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.http.HTTPDownloadHandler'</span><span class="token punctuation">,</span>    <span class="token string">'s3'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.s3.S3DownloadHandler'</span><span class="token punctuation">,</span>    <span class="token string">'ftp'</span><span class="token punctuation">:</span> <span class="token string">'scrapy.core.downloader.handlers.ftp.FTPDownloadHandler'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅵ.Re：Scrapy 之 Scheduler</title>
    <link href="/ba134d557b8d/"/>
    <url>/ba134d557b8d/</url>
    
    <content type="html"><![CDATA[<h1 id="Scheduler"><a href="#Scheduler" class="headerlink" title="Scheduler"></a>Scheduler</h1><blockquote><p>Scheduler 组件会接收来自 Engine 的请求，它负责将请求存储到 持久化或非持久化的数据结构中。</p><p>它还可以获取这些请求，并在 Engine 要求下载下一个请求时，将其返回给 Engine。</p></blockquote><h1 id="默认-Scheduler"><a href="#默认-Scheduler" class="headerlink" title="默认 Scheduler"></a>默认 Scheduler</h1><h2 id="from-crawler"><a href="#from-crawler" class="headerlink" title="from_crawler"></a>from_crawler</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@classmethod</span><span class="token keyword">def</span> <span class="token function">from_crawler</span><span class="token punctuation">(</span>cls<span class="token punctuation">:</span> Type<span class="token punctuation">[</span>SchedulerTV<span class="token punctuation">]</span><span class="token punctuation">,</span> crawler<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> SchedulerTV<span class="token punctuation">:</span>    dupefilter_cls <span class="token operator">=</span> load_object<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">'DUPEFILTER_CLASS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> cls<span class="token punctuation">(</span>        <span class="token comment"># 创建去重过滤器实例：scrapy.dupefilters.RFPDupeFilter</span>        dupefilter<span class="token operator">=</span>create_instance<span class="token punctuation">(</span>dupefilter_cls<span class="token punctuation">,</span> crawler<span class="token punctuation">.</span>settings<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># jobdir 用于持久化爬行状态的目录</span>        jobdir<span class="token operator">=</span>job_dir<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># 持久化请求队列使用的类（文件）：scrapy.squeues.PickleLifoDiskQueue</span>        dqclass<span class="token operator">=</span>load_object<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">'SCHEDULER_DISK_QUEUE'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># 非持久化请求队列使用的类（内存）：scrapy.squeues.LifoMemoryQueue</span>        mqclass<span class="token operator">=</span>load_object<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">'SCHEDULER_MEMORY_QUEUE'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># 是否开启 Scheduler 的 Debug 模式</span>        logunser<span class="token operator">=</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>getbool<span class="token punctuation">(</span><span class="token string">'SCHEDULER_DEBUG'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment"># 爬虫统计收集器</span>        stats<span class="token operator">=</span>crawler<span class="token punctuation">.</span>stats<span class="token punctuation">,</span>        <span class="token comment"># 请求优先级队列使用的类：scrapy.pqueues.ScrapyPriorityQueue</span>        pqclass<span class="token operator">=</span>load_object<span class="token punctuation">(</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">'SCHEDULER_PRIORITY_QUEUE'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        crawler<span class="token operator">=</span>crawler<span class="token punctuation">,</span>    <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Scrapy-默认已实现的-Queue"><a href="#Scrapy-默认已实现的-Queue" class="headerlink" title="Scrapy 默认已实现的 Queue"></a>Scrapy 默认已实现的 Queue</h3><p>持久&#x2F;非持久化队列：</p><ul><li><code>PickleFifoDiskQueue</code> ：pickle 实现的存储磁盘文件的 <strong>先进先出</strong> 队列</li><li><code>PickleLifoDiskQueue</code> ：pickle 实现的存储磁盘文件的 <strong>后进先出</strong> 队列</li><li><code>MarshalFifoDiskQueue</code> ：marshal 实现的存储磁盘文件的 <strong>先进先出</strong> 队列</li><li><code>MarshalLifoDiskQueue</code> ：marshal 实现的存储磁盘文件的 <strong>后进先出</strong> 队列</li><li><code>FifoMemoryQueue</code> ：基于内存的 <strong>先进先出</strong> 队列</li><li><code>LifoMemoryQueue</code> ：基于内存的 <strong>后进先出</strong> 队列</li></ul><p>请求优先级队列：</p><ul><li><code>ScrapyPriorityQueue</code> ：默认请求优先级队列</li><li><code>DownloaderAwarePriorityQueue</code> ：并行抓不同的域时，这个效果好。但不能与<code>CONCURRENT_REQUESTS_PER_IP</code>同时使用</li></ul><h2 id="enqueue-request"><a href="#enqueue-request" class="headerlink" title="enqueue_request"></a>enqueue_request</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">enqueue_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>    <span class="token comment"># 没有dont_filter标识，再让dupefilter过滤掉的话，返回False</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> request<span class="token punctuation">.</span>dont_filter <span class="token keyword">and</span> self<span class="token punctuation">.</span>df<span class="token punctuation">.</span>request_seen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>df<span class="token punctuation">.</span>log<span class="token punctuation">(</span>request<span class="token punctuation">,</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>        <span class="token comment"># 如果是False，引擎将发出require_dropped信号，并且不会在以后的时间里继续尝试调度该请求。</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token comment"># 尝试推入磁盘队列</span>    dqok <span class="token operator">=</span> self<span class="token punctuation">.</span>_dqpush<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token keyword">if</span> dqok<span class="token punctuation">:</span>        self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/enqueued/disk'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># 没推入磁盘队列成功，则推入内存队列</span>        self<span class="token punctuation">.</span>_mqpush<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/enqueued/memory'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/enqueued'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="has-pending-requests"><a href="#has-pending-requests" class="headerlink" title="has_pending_requests"></a>has_pending_requests</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">has_pending_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>    <span class="token comment"># 如果 Scheduler 有排队的请求，则为真，否则为假。</span>    <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="next-request"><a href="#next-request" class="headerlink" title="next_request"></a>next_request</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">next_request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Optional<span class="token punctuation">[</span>Request<span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token comment"># 先从内存队列取 request，若为空，则从磁盘队列取 request。直至 has_pending_requests 为 False</span>    request <span class="token operator">=</span> self<span class="token punctuation">.</span>mqs<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/dequeued/memory'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        request <span class="token operator">=</span> self<span class="token punctuation">.</span>_dqpop<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> request <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/dequeued/disk'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token keyword">if</span> request <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>inc_value<span class="token punctuation">(</span><span class="token string">'scheduler/dequeued'</span><span class="token punctuation">,</span> spider<span class="token operator">=</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token keyword">return</span> request<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="重写-Scheduler"><a href="#重写-Scheduler" class="headerlink" title="重写 Scheduler"></a>重写 Scheduler</h1><ol><li><p>继承<code>BaseScheduler</code></p></li><li><p>至少要实现 <code>enqueue_request</code>、<code>has_pending_requests</code> 和 <code>next_request</code> 三个方法</p></li><li><p>Scheduler 负责存储来自 Engine 的 Request，并调度 Request 反馈 Request 给 Engine。</p><p>Request 的来源，可以是：</p><ul><li>Spider：<code>start_requests</code>方法，<code>start_urls</code>列表中生成的 request ，request callbacks</li><li>Spider 中间件：<code>process_spider_output</code> 和<code>process_spider_exception</code> 方法</li><li>Downloader 中间件： <code>process_request</code>, <code>process_response</code> 和<code>process_exception</code> 方法</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅴ.Re：Scrapy 之 Engine</title>
    <link href="/8a9571d79baf/"/>
    <url>/8a9571d79baf/</url>
    
    <content type="html"><![CDATA[<h1 id="ExecutionEngine"><a href="#ExecutionEngine" class="headerlink" title="ExecutionEngine"></a>ExecutionEngine</h1><blockquote><p>这个 Engine 负责的是系统中所有组件之间的数据流转与交互。</p><p><code>ExecutionEngine</code>是<code>Engine</code>的实例，它会初始化<code>Schedule</code>、<code>Slot</code>、<code>Downloader</code>（<code>Downloader Middlewares</code>）、<code>Scraper</code>(<code>Spider Middlewares</code>、<code>itempipline</code>)、<code>Stats</code>等，并对其进行管理、控制。</p></blockquote><h1 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h1><h2 id="scrapy-x2F-crawler-py-Crawler-crawl-self-args-kwargs"><a href="#scrapy-x2F-crawler-py-Crawler-crawl-self-args-kwargs" class="headerlink" title="scrapy&#x2F;crawler.py#Crawler  crawl(self, *args, **kwargs)"></a>scrapy&#x2F;crawler.py#Crawler  crawl(self, *args, **kwargs)</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># crawl(self, crawler_or_spidercls, *args, **kwargs) --> </span><span class="token comment"># _crawl(self, crawler, *args, **kwargs) --> </span><span class="token comment"># crawl(self, *args, **kwargs)</span><span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>crawling<span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Crawling already taking place"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>crawling <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>spider <span class="token operator">=</span> self<span class="token punctuation">.</span>_create_spider<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>engine <span class="token operator">=</span> self<span class="token punctuation">.</span>_create_engine<span class="token punctuation">(</span><span class="token punctuation">)</span>        start_requests <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">.</span>start_requests<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 开启Engine</span>        <span class="token keyword">yield</span> self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">,</span> start_requests<span class="token punctuation">)</span>        <span class="token keyword">yield</span> defer<span class="token punctuation">.</span>maybeDeferred<span class="token punctuation">(</span>self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>start<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>        self<span class="token punctuation">.</span>crawling <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>engine <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">yield</span> self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">raise</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-open-spider-self-spider-Spider-start-requests-Iterable-x3D-close-if-idle-bool-x3D-True"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-open-spider-self-spider-Spider-start-requests-Iterable-x3D-close-if-idle-bool-x3D-True" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  open_spider(self, spider: Spider, start_requests: Iterable &#x3D; (), close_if_idle: bool &#x3D; True)"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  open_spider(self, spider: Spider, start_requests: Iterable &#x3D; (), close_if_idle: bool &#x3D; True)</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 具体可以参考 Ⅲ.Re：Scrapy架构概述</span><span class="token decorator annotation punctuation">@inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">,</span> start_requests<span class="token punctuation">:</span> Iterable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> close_if_idle<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"No free spider slot when opening </span><span class="token interpolation"><span class="token punctuation">&#123;</span>spider<span class="token punctuation">.</span>name<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Spider opened"</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    nextcall <span class="token operator">=</span> CallLaterOnce<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_next_request<span class="token punctuation">)</span>    scheduler <span class="token operator">=</span> create_instance<span class="token punctuation">(</span>self<span class="token punctuation">.</span>scheduler_cls<span class="token punctuation">,</span> settings<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> crawler<span class="token operator">=</span>self<span class="token punctuation">.</span>crawler<span class="token punctuation">)</span>    start_requests <span class="token operator">=</span> <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>spidermw<span class="token punctuation">.</span>process_start_requests<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot <span class="token operator">=</span> Slot<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> close_if_idle<span class="token punctuation">,</span> nextcall<span class="token punctuation">,</span> scheduler<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>spider <span class="token operator">=</span> spider    <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">,</span> <span class="token string">"open"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> scheduler<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>crawler<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log_deferred<span class="token punctuation">(</span>signals<span class="token punctuation">.</span>spider_opened<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-start-self-gt-Deferred"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-start-self-gt-Deferred" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  start(self) -&gt; Deferred"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  start(self) -&gt; Deferred</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 记录启动时间，创建Deferred()对象，在其结束时优雅的关闭crawler</span><span class="token decorator annotation punctuation">@inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>running<span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Engine already running"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>start_time <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log_deferred<span class="token punctuation">(</span>signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>engine_started<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>running <span class="token operator">=</span> <span class="token boolean">True</span>    self<span class="token punctuation">.</span>_closewait <span class="token operator">=</span> Deferred<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>_closewait<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-close-self-gt-Deferred"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-close-self-gt-Deferred" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  close(self) -&gt; Deferred"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  close(self) -&gt; Deferred</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">close</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Gracefully close the execution engine.    If it has already been started, stop it. In all cases, close the spider and the downloader.    """</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>running<span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># will also close spider and downloader</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>spider <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>close_spider<span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">,</span> reason<span class="token operator">=</span><span class="token string">"shutdown"</span><span class="token punctuation">)</span>  <span class="token comment"># will also close downloader</span>    <span class="token keyword">return</span> succeed<span class="token punctuation">(</span>self<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="scrapy-x2F-core-x2F-engine-py-ExecutionEngine-stop-self-gt-Deferred"><a href="#scrapy-x2F-core-x2F-engine-py-ExecutionEngine-stop-self-gt-Deferred" class="headerlink" title="scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  stop(self) -&gt; Deferred"></a>scrapy&#x2F;core&#x2F;engine.py#ExecutionEngine  stop(self) -&gt; Deferred</h4><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stop</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Gracefully stop the execution engine"""</span>    <span class="token decorator annotation punctuation">@inlineCallbacks</span>    <span class="token keyword">def</span> <span class="token function">_finish_stopping_engine</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>        <span class="token keyword">yield</span> self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log_deferred<span class="token punctuation">(</span>signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>engine_stopped<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_closewait<span class="token punctuation">.</span>callback<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>running<span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Engine not running"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>running <span class="token operator">=</span> <span class="token boolean">False</span>    dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>close_spider<span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">,</span> reason<span class="token operator">=</span><span class="token string">"shutdown"</span><span class="token punctuation">)</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>spider <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">else</span> succeed<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> dfd<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_finish_stopping_engine<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅳ.Re：Scrapy 之 Spider</title>
    <link href="/9a7df02c40f9/"/>
    <url>/9a7df02c40f9/</url>
    
    <content type="html"><![CDATA[<h1 id="Spiders"><a href="#Spiders" class="headerlink" title="Spiders"></a>Spiders</h1><blockquote><p>Spiders 是定义如何抓取某个网站（或一组网站）的类。</p><p>包括如何进行抓取（即跟随链接）以及如何从其页面中提取结构化数据（即抓取项目）。</p><p>换句话说，Spiders 是你定义业务逻辑的地方，用于抓取和解析特定网站（或在某些情况下，一组网站）的页面。</p></blockquote><h2 id="name"><a href="#name" class="headerlink" title="name"></a>name</h2><blockquote><p>必要，自定义爬虫名称，爬虫的唯一标识</p></blockquote><h2 id="allowed-domains"><a href="#allowed-domains" class="headerlink" title="allowed_domains"></a>allowed_domains</h2><blockquote><p>可选，规定爬虫爬行范围。实现代码<code>scrapy.spidermiddlewares.offsite.OffsiteMiddleware</code>的<code>get_host_regex</code></p></blockquote><h2 id="start-urls"><a href="#start-urls" class="headerlink" title="start_urls"></a>start_urls</h2><blockquote><p>可选，种子URL列表，一般放入可GET请求的URL，POST请求可重写<code>start_requests()</code>方法实现</p></blockquote><h2 id="start-requests"><a href="#start-requests" class="headerlink" title="start_requests()"></a>start_requests()</h2><blockquote><p>可选，默认从<code>start_urls</code>中获取 URL 且<code>dont_filter=True</code>，重写需要返回可迭代的抓取请求。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/spiders/__init__.py#Spider  start_requests(self)</span><span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>start_urls <span class="token keyword">and</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'start_url'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> AttributeError<span class="token punctuation">(</span>            <span class="token string">"Crawling could not start: 'start_urls' not found "</span>            <span class="token string">"or empty (but found 'start_url' attribute instead, "</span>            <span class="token string">"did you miss an 's'?)"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>start_urls<span class="token punctuation">:</span>        <span class="token keyword">yield</span> Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> dont_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="parse-self-response-kwargs"><a href="#parse-self-response-kwargs" class="headerlink" title="parse(self, response, **kwargs)"></a>parse(self, response, **kwargs)</h2><blockquote><p>必要，没有进行<code>callback</code>指定是，处理下载响应的默认回调，必须返回一个<code>Request</code>或<code>Items对象</code></p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p><a target="_blank" rel="noopener" href="https://docs.scrapy.org/en/latest/topics/spiders.html">详见 👉 https://docs.scrapy.org/en/latest/topics/spiders.html</a></p></blockquote><h1 id="通用-Spiders-模板"><a href="#通用-Spiders-模板" class="headerlink" title="通用 Spiders 模板"></a>通用 Spiders 模板</h1><blockquote><p>Scrapy 提供了四套通用模板：<code>CrawlSpider</code>、<code>SitemapSpider</code>、<code>XMLFeedSpider</code>、<code>CSVFeedSpider</code></p><p><code>SitemapSpider</code>、<code>XMLFeedSpider</code>、<code>CSVFeedSpider</code>适用性较低，暂不展开</p></blockquote><h2 id="CrawlSpider"><a href="#CrawlSpider" class="headerlink" title="CrawlSpider"></a>CrawlSpider</h2><blockquote><p>适用于常规网站</p><p><code>start_urls </code> 依然是 种子URL列表</p><p><code>rules</code> 序列化一组或多组<code>Rule</code></p></blockquote><h3 id="Rule"><a href="#Rule" class="headerlink" title="Rule"></a>Rule</h3><blockquote><p><strong>scrapy.spiders.Rule</strong>(link_extractor&#x3D;None, callback&#x3D;None, cb_kwargs&#x3D;None, follow&#x3D;None, process_links&#x3D;None, process_request&#x3D;None, errback&#x3D;None)</p></blockquote><ul><li><code>link_extractor</code> 是链接提取器对象，可以从页面中提取链接。常用参数如下：<ul><li>allow (str or list) ：保留符合正则的链接。例：<code>allow=(r&#39;catalogue/page-\d+.html&#39;,)</code></li><li>deny (str or list) ：排除符合正则的链接。</li><li>restrict_xpaths (str or list) ：用XPath来限定提取某些区域中的链接。</li><li>其他参数，详见👉<a target="_blank" rel="noopener" href="https://docs.scrapy.org/en/latest/topics/link-extractors.html#module-scrapy.linkextractors.lxmlhtml">https://docs.scrapy.org/en/latest/topics/link-extractors.html#module-scrapy.linkextractors.lxmlhtml</a></li></ul></li><li><code>callback</code> 回调到对应接收方法中</li><li><code>follow</code> 若<code>callback</code>为空，默认为<code>True</code>；否则为 <code>False</code></li><li>其他参数，详见👉<a target="_blank" rel="noopener" href="https://docs.scrapy.org/en/latest/topics/spiders.html#crawling-rules">https://docs.scrapy.org/en/latest/topics/spiders.html#crawling-rules</a></li></ul><h3 id="CRAWLSPIDER-FOLLOW-LINKS"><a href="#CRAWLSPIDER-FOLLOW-LINKS" class="headerlink" title="CRAWLSPIDER_FOLLOW_LINKS"></a>CRAWLSPIDER_FOLLOW_LINKS</h3><blockquote><p>根据源码得知，settings 文件中 <code>CRAWLSPIDER_FOLLOW_LINKS</code> 值的真假，会影响是否继续解析下层链接</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/spiders/crawl.py#CrawlSpider  from_crawler(cls, crawler, *args, **kwargs)</span><span class="token decorator annotation punctuation">@classmethod</span><span class="token keyword">def</span> <span class="token function">from_crawler</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> crawler<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    spider <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>from_crawler<span class="token punctuation">(</span>crawler<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>_follow_links <span class="token operator">=</span> crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>getbool<span class="token punctuation">(</span><span class="token string">'CRAWLSPIDER_FOLLOW_LINKS'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> spider<span class="token comment"># scrapy/spiders/crawl.py#CrawlSpider  _parse_response(self, response, callback, cb_kwargs, follow=True)</span><span class="token keyword">def</span> <span class="token function">_parse_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> cb_kwargs<span class="token punctuation">,</span> follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> callback<span class="token punctuation">:</span>        cb_res <span class="token operator">=</span> callback<span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token operator">**</span>cb_kwargs<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>        cb_res <span class="token operator">=</span> self<span class="token punctuation">.</span>process_results<span class="token punctuation">(</span>response<span class="token punctuation">,</span> cb_res<span class="token punctuation">)</span>        <span class="token keyword">for</span> request_or_item <span class="token keyword">in</span> iterate_spider_output<span class="token punctuation">(</span>cb_res<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">yield</span> request_or_item    <span class="token keyword">if</span> follow <span class="token keyword">and</span> self<span class="token punctuation">.</span>_follow_links<span class="token punctuation">:</span>        <span class="token keyword">for</span> request_or_item <span class="token keyword">in</span> self<span class="token punctuation">.</span>_requests_to_follow<span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">yield</span> request_or_item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅲ.Re：Scrapy架构概述</title>
    <link href="/c31a9553cda1/"/>
    <url>/c31a9553cda1/</url>
    
    <content type="html"><![CDATA[<h1 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a>架构图</h1><p><img src="https://docs.scrapy.org/en/latest/_images/scrapy_architecture_02.png" alt="Scrapy 架构图"></p><h1 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h1><ol><li><p><code>ENGINE</code>从<code>SPIDERS</code>中（<code>start_urls</code>或<code>start_requests</code>方法）获取种子链接</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/crawler.py#CrawlerRunner</span><span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> crawler_or_spidercls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>crawler_or_spidercls<span class="token punctuation">,</span> Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span>            <span class="token string">'The crawler_or_spidercls argument cannot be a spider object, '</span>            <span class="token string">'it must be a spider class (or a Crawler object)'</span><span class="token punctuation">)</span>    <span class="token comment"># 启动创建crawler，从crawler_or_spidercls获取spider的name或类名</span>    crawler <span class="token operator">=</span> self<span class="token punctuation">.</span>create_crawler<span class="token punctuation">(</span>crawler_or_spidercls<span class="token punctuation">)</span>    <span class="token keyword">return</span> self<span class="token punctuation">.</span>_crawl<span class="token punctuation">(</span>crawler<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">_crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> crawler<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>crawlers<span class="token punctuation">.</span>add<span class="token punctuation">(</span>crawler<span class="token punctuation">)</span>    <span class="token comment"># 加载抓取任务</span>    d <span class="token operator">=</span> crawler<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>_active<span class="token punctuation">.</span>add<span class="token punctuation">(</span>d<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_done</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>crawlers<span class="token punctuation">.</span>discard<span class="token punctuation">(</span>crawler<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_active<span class="token punctuation">.</span>discard<span class="token punctuation">(</span>d<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bootstrap_failed <span class="token operator">|</span><span class="token operator">=</span> <span class="token keyword">not</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>crawler<span class="token punctuation">,</span> <span class="token string">'spider'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">return</span> d<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_done<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><code>P.S.</code> 概念：<code>crawler</code>是抓取任务、<code>spider</code>是编写的爬虫逻辑模块</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/crawler.py#Crawler</span><span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>crawling<span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Crawling already taking place"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>crawling <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 创建spider、engine</span>        self<span class="token punctuation">.</span>spider <span class="token operator">=</span> self<span class="token punctuation">.</span>_create_spider<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>engine <span class="token operator">=</span> self<span class="token punctuation">.</span>_create_engine<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 迭代 spider 的 start_requests() 获取链接</span>        start_requests <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">.</span>start_requests<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># engine 获取 start_requests 进行调度</span>        <span class="token keyword">yield</span> self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>self<span class="token punctuation">.</span>spider<span class="token punctuation">,</span> start_requests<span class="token punctuation">)</span>        <span class="token keyword">yield</span> defer<span class="token punctuation">.</span>maybeDeferred<span class="token punctuation">(</span>self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>start<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>        self<span class="token punctuation">.</span>crawling <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>engine <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">yield</span> self<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">raise</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p><code>ENGINE</code>在 <code>SCHEDULER</code>中调度 Requests，并获取将要抓取的 Requests</p></li><li><p><code>SCHEDULER</code>把 Requests 返回给<code>ENGINE</code></p></li><li><p><code>ENGINE</code>把 Requests 经过<code>DOWNLOADER_MIDDLEWARES</code>（process_request）的层层处理，交递给<code>DOWNLOADER</code></p></li><li><p><code>DOWNLOADER</code>将 Requests 请求后，会得到的 Response ，再经由<code>DOWNLOADER_MIDDLEWARES</code>（process_response）的层层处理，返回到<code>ENGINE</code></p></li><li><p><code>ENGINE</code>将得到的 Response  经过<code>SPIDER_MIDDLEWARES</code>（process_spider_input），发送给<code>SPIDERS</code>处理</p></li><li><p><code>SPIDERS</code>根据编写的业务逻辑将 Items 或新的 Requests，通过<code>SPIDER_MIDDLEWARES</code>（process_spider_output）交由<code>ENGINE</code></p></li><li><p><code>ENGINE</code>会根据 Items 或 Requests 的不同，发往<code>ITEM PIPELNES</code>或<code>SCHEDULER</code></p></li><li><p>从步骤3之后，程序会循环执行，直到<code>ENGINE</code>里没有可供调度的 Requests 结束</p></li></ol><h1 id="核心类"><a href="#核心类" class="headerlink" title="核心类"></a>核心类</h1><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/engine.py#ExecutionEngine</span><span class="token decorator annotation punctuation">@inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">,</span> start_requests<span class="token punctuation">:</span> Iterable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> close_if_idle<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"No free spider slot when opening </span><span class="token interpolation"><span class="token punctuation">&#123;</span>spider<span class="token punctuation">.</span>name<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Spider opened"</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment"># 即将要进行调度的方法，这里是准备请求的request</span>    nextcall <span class="token operator">=</span> CallLaterOnce<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_next_request<span class="token punctuation">)</span>    <span class="token comment"># 创建scheduler</span>    scheduler <span class="token operator">=</span> create_instance<span class="token punctuation">(</span>self<span class="token punctuation">.</span>scheduler_cls<span class="token punctuation">,</span> settings<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> crawler<span class="token operator">=</span>self<span class="token punctuation">.</span>crawler<span class="token punctuation">)</span>    <span class="token comment"># 流经spider中间件process_start_requests方法后的start_requests</span>    start_requests <span class="token operator">=</span> <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>spidermw<span class="token punctuation">.</span>process_start_requests<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token comment"># 根据scheduler为nextcall创建Slot，Slot可以看做是requests的生命周期，用来管理engine的运行状态和正在请求的request</span>    self<span class="token punctuation">.</span>slot <span class="token operator">=</span> Slot<span class="token punctuation">(</span>start_requests<span class="token punctuation">,</span> close_if_idle<span class="token punctuation">,</span> nextcall<span class="token punctuation">,</span> scheduler<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>spider <span class="token operator">=</span> spider    <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">,</span> <span class="token string">"open"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 开启scheduler</span>        <span class="token keyword">yield</span> scheduler<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token comment"># 开启scraper</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token comment"># 开启stats（状态收集器）</span>    self<span class="token punctuation">.</span>crawler<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>open_spider<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token comment"># 记录spider_opened日志</span>    <span class="token keyword">yield</span> self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log_deferred<span class="token punctuation">(</span>signals<span class="token punctuation">.</span>spider_opened<span class="token punctuation">,</span> spider<span class="token operator">=</span>spider<span class="token punctuation">)</span>    <span class="token comment"># 调度nextcall</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 调度间隔，now的默认值为True，会立即执行</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="next-request"><a href="#next-request" class="headerlink" title="_next_request"></a>_next_request</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/engine.py#ExecutionEngine  _next_request(self)</span><span class="token keyword">def</span> <span class="token function">_next_request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>spider <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>paused<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token comment"># _next_request_from_scheduler：从调度器中获取下个request交给引擎</span>    <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_needs_backout<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> self<span class="token punctuation">.</span>_next_request_from_scheduler<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>start_requests <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_needs_backout<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            request <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>start_requests<span class="token punctuation">)</span>        <span class="token keyword">except</span> StopIteration<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>start_requests <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>start_requests <span class="token operator">=</span> <span class="token boolean">None</span>            logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">'Error while obtaining start requests'</span><span class="token punctuation">,</span> exc_info<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>spider_is_idle<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>close_if_idle<span class="token punctuation">:</span>        self<span class="token punctuation">.</span>_spider_idle<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/engine.py#ExecutionEngine  _next_request_from_scheduler(self)</span><span class="token keyword">def</span> <span class="token function">_next_request_from_scheduler</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Optional<span class="token punctuation">[</span>Deferred<span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>spider <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    request <span class="token operator">=</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>scheduler<span class="token punctuation">.</span>next_request<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token comment"># _download：下载requeset</span>    d <span class="token operator">=</span> self<span class="token punctuation">.</span>_download<span class="token punctuation">(</span>request<span class="token punctuation">,</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    <span class="token comment"># _handle_downloader_output：下载器输出</span>    d<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_handle_downloader_output<span class="token punctuation">,</span> request<span class="token punctuation">)</span>    d<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span><span class="token keyword">lambda</span> f<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'Error while handling downloader output'</span><span class="token punctuation">,</span>                                       exc_info<span class="token operator">=</span>failure_to_exc_info<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                                       extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    d<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token keyword">_</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>remove_request<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>    d<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span><span class="token keyword">lambda</span> f<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'Error while removing request from slot'</span><span class="token punctuation">,</span>                                       exc_info<span class="token operator">=</span>failure_to_exc_info<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                                       extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    slot <span class="token operator">=</span> self<span class="token punctuation">.</span>slot    d<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token keyword">_</span><span class="token punctuation">:</span> slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    d<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span><span class="token keyword">lambda</span> f<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'Error while scheduling new request'</span><span class="token punctuation">,</span>                                       exc_info<span class="token operator">=</span>failure_to_exc_info<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                                       extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="download"><a href="#download" class="headerlink" title="_download"></a>_download</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/engine.py#ExecutionEngine  _download(self, request, spider)</span><span class="token keyword">def</span> <span class="token function">_download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>add_request<span class="token punctuation">(</span>request<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_on_success</span><span class="token punctuation">(</span>result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span>f"Incorrect <span class="token builtin">type</span><span class="token punctuation">:</span> expected Response <span class="token keyword">or</span> Request<span class="token punctuation">,</span> got <span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>res        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> Response<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> result<span class="token punctuation">.</span>request <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>request <span class="token operator">=</span> request            logkws <span class="token operator">=</span> self<span class="token punctuation">.</span>logformatter<span class="token punctuation">.</span>crawled<span class="token punctuation">(</span>result<span class="token punctuation">.</span>request<span class="token punctuation">,</span> result<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>            <span class="token keyword">if</span> logkws <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                logger<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token operator">*</span>logformatter_adapter<span class="token punctuation">(</span>logkws<span class="token punctuation">)</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"spider"</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>signals<span class="token punctuation">.</span>send_catch_log<span class="token punctuation">(</span>                signal<span class="token operator">=</span>signals<span class="token punctuation">.</span>response_received<span class="token punctuation">,</span>                response<span class="token operator">=</span>result<span class="token punctuation">,</span>                request<span class="token operator">=</span>result<span class="token punctuation">.</span>request<span class="token punctuation">,</span>                spider<span class="token operator">=</span>spider<span class="token punctuation">,</span>            <span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">_on_complete</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>nextcall<span class="token punctuation">.</span>schedule<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> _    <span class="token comment"># 调用 settings.py 里的下载器：DOWNLOADER = 'scrapy.core.downloader.Downloader'</span>    dwld <span class="token operator">=</span> self<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span>request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    dwld<span class="token punctuation">.</span>addCallbacks<span class="token punctuation">(</span>_on_success<span class="token punctuation">)</span>    dwld<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>_on_complete<span class="token punctuation">)</span>    <span class="token keyword">return</span> dwld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="handle-downloader-output"><a href="#handle-downloader-output" class="headerlink" title="_handle_downloader_output"></a>_handle_downloader_output</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/engine.py#ExecutionEngine  _handle_downloader_output(self, result, request)</span><span class="token keyword">def</span> <span class="token function">_handle_downloader_output</span><span class="token punctuation">(</span>    self<span class="token punctuation">,</span> result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Request<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> Failure<span class="token punctuation">]</span><span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Optional<span class="token punctuation">[</span>Deferred<span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>spider <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">(</span>Request<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> Failure<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Incorrect type: expected Request, Response or Failure, got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token comment"># downloader middleware can return requests (for example, redirects)</span>    <span class="token comment"># 是Request的情况，继续抓取</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> Request<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token comment"># enqueue_scrape</span>    d <span class="token operator">=</span> self<span class="token punctuation">.</span>scraper<span class="token punctuation">.</span>enqueue_scrape<span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">,</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">)</span>    d<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>        <span class="token keyword">lambda</span> f<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span>            <span class="token string">"Error while enqueuing downloader output"</span><span class="token punctuation">,</span>            exc_info<span class="token operator">=</span>failure_to_exc_info<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>            extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>spider<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token keyword">return</span> d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/scraper.py#Scraper  enqueue_scrape(self, result, request, spider)</span><span class="token keyword">def</span> <span class="token function">enqueue_scrape</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Failure<span class="token punctuation">]</span><span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">"Scraper slot not assigned"</span><span class="token punctuation">)</span>    dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>add_response_request<span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">finish_scraping</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>finish_response<span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_check_if_closing<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_scrape_next<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>        <span class="token keyword">return</span> _    dfd<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>finish_scraping<span class="token punctuation">)</span>    dfd<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>        <span class="token keyword">lambda</span> f<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">'Scraper bug processing %(request)s'</span><span class="token punctuation">,</span>                               <span class="token punctuation">&#123;</span><span class="token string">'request'</span><span class="token punctuation">:</span> request<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                               exc_info<span class="token operator">=</span>failure_to_exc_info<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                               extra<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'spider'</span><span class="token punctuation">:</span> spider<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># _scrape_next</span>    self<span class="token punctuation">.</span>_scrape_next<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>    <span class="token keyword">return</span> dfd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/scraper.py#Scraper  _scrape_next(self, result, request, spider)</span><span class="token keyword">def</span> <span class="token function">_scrape_next</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> self<span class="token punctuation">.</span>slot <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span>  <span class="token comment"># typing</span>    <span class="token keyword">while</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>queue<span class="token punctuation">:</span>        response<span class="token punctuation">,</span> request<span class="token punctuation">,</span> deferred <span class="token operator">=</span> self<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>next_response_request_deferred<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># _scrape</span>        self<span class="token punctuation">.</span>_scrape<span class="token punctuation">(</span>response<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">.</span>chainDeferred<span class="token punctuation">(</span>deferred<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/scraper.py#Scraper  _scrape(self, result, request, spider)</span><span class="token keyword">def</span> <span class="token function">_scrape</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Failure<span class="token punctuation">]</span><span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Handle the downloaded response or failure through the spider callback/errback    """</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">(</span>Response<span class="token punctuation">,</span> Failure<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Incorrect type: expected Response or Failure, got </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>result<span class="token conversion-option punctuation">!r</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token comment"># _scrape2</span>    dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>_scrape2<span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>  <span class="token comment"># returns spider's processed output</span>    dfd<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>self<span class="token punctuation">.</span>handle_spider_error<span class="token punctuation">,</span> request<span class="token punctuation">,</span> result<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    dfd<span class="token punctuation">.</span>addCallback<span class="token punctuation">(</span>self<span class="token punctuation">.</span>handle_spider_output<span class="token punctuation">,</span> request<span class="token punctuation">,</span> result<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token keyword">return</span> dfd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/scraper.py#Scraper  _scrape2(self, result, request, spider)</span><span class="token keyword">def</span> <span class="token function">_scrape2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Failure<span class="token punctuation">]</span><span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Handle the different cases of request's result been a Response or a Failure    """</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> Response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># scrape_response：spider中间件process_spider_input、process_spider_output的处理</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>spidermw<span class="token punctuation">.</span>scrape_response<span class="token punctuation">(</span>self<span class="token punctuation">.</span>call_spider<span class="token punctuation">,</span> result<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># result is a Failure</span>        <span class="token comment"># call_spider：失败回调</span>        dfd <span class="token operator">=</span> self<span class="token punctuation">.</span>call_spider<span class="token punctuation">(</span>result<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>        <span class="token keyword">return</span> dfd<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_log_download_errors<span class="token punctuation">,</span> result<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="scrape-response"><a href="#scrape-response" class="headerlink" title="scrape_response"></a>scrape_response</h4><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/spidermw.py#SpiderMiddlewareManager  scrape_response(self, scrape_func, response, request, spider)</span><span class="token keyword">def</span> <span class="token function">scrape_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> scrape_func<span class="token punctuation">:</span> ScrapeFunc<span class="token punctuation">,</span> response<span class="token punctuation">:</span> Response<span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span>                    spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_callback_output</span><span class="token punctuation">(</span>result<span class="token punctuation">:</span> Iterable<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> MutableChain<span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_process_callback_output<span class="token punctuation">(</span>response<span class="token punctuation">,</span> spider<span class="token punctuation">,</span> result<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">process_spider_exception</span><span class="token punctuation">(</span>_failure<span class="token punctuation">:</span> Failure<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Union<span class="token punctuation">[</span>Failure<span class="token punctuation">,</span> MutableChain<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_process_spider_exception<span class="token punctuation">(</span>response<span class="token punctuation">,</span> spider<span class="token punctuation">,</span> _failure<span class="token punctuation">)</span>    dfd <span class="token operator">=</span> mustbe_deferred<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_process_spider_input<span class="token punctuation">,</span> scrape_func<span class="token punctuation">,</span> response<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span>    dfd<span class="token punctuation">.</span>addCallbacks<span class="token punctuation">(</span>callback<span class="token operator">=</span>process_callback_output<span class="token punctuation">,</span> errback<span class="token operator">=</span>process_spider_exception<span class="token punctuation">)</span>    <span class="token keyword">return</span> dfd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="call-spider"><a href="#call-spider" class="headerlink" title="call_spider"></a>call_spider</h4><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/core/scraper.py#Scraper  call_spider(self, result, request, spider)</span><span class="token keyword">def</span> <span class="token function">call_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>Response<span class="token punctuation">,</span> Failure<span class="token punctuation">]</span><span class="token punctuation">,</span> request<span class="token punctuation">:</span> Request<span class="token punctuation">,</span> spider<span class="token punctuation">:</span> Spider<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Deferred<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> Response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">"request"</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>request <span class="token operator">=</span> request        <span class="token comment"># 回调自定义的callback或默认的继承 Spider 的 parse(self, response, **kwargs)</span>        callback <span class="token operator">=</span> result<span class="token punctuation">.</span>request<span class="token punctuation">.</span>callback <span class="token keyword">or</span> spider<span class="token punctuation">.</span>_parse        warn_on_generator_with_return_value<span class="token punctuation">(</span>spider<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>        dfd <span class="token operator">=</span> defer_succeed<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        dfd<span class="token punctuation">.</span>addCallbacks<span class="token punctuation">(</span>callback<span class="token operator">=</span>callback<span class="token punctuation">,</span> callbackKeywords<span class="token operator">=</span>result<span class="token punctuation">.</span>request<span class="token punctuation">.</span>cb_kwargs<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># result is a Failure</span>        result<span class="token punctuation">.</span>request <span class="token operator">=</span> request        <span class="token comment"># 失败情况的回调</span>        warn_on_generator_with_return_value<span class="token punctuation">(</span>spider<span class="token punctuation">,</span> request<span class="token punctuation">.</span>errback<span class="token punctuation">)</span>        dfd <span class="token operator">=</span> defer_fail<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        dfd<span class="token punctuation">.</span>addErrback<span class="token punctuation">(</span>request<span class="token punctuation">.</span>errback<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅱ.Re：Scrapy启动与调试</title>
    <link href="/fd2edbb72b97/"/>
    <url>/fd2edbb72b97/</url>
    
    <content type="html"><![CDATA[<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><h2 id="命令启动"><a href="#命令启动" class="headerlink" title="命令启动"></a>命令启动</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 运行爬虫程序，不需要项目</span><span class="token comment"># scrapy runspider spider_demo.py</span>scrapy runspider <span class="token operator">&lt;</span>spider_file.py<span class="token operator">></span><span class="token comment"># 在项目中运行爬虫程序</span><span class="token comment"># scrapy crawl spider_demo</span>scrapy crawl <span class="token operator">&lt;</span>spider<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="脚本启动"><a href="#脚本启动" class="headerlink" title="脚本启动"></a>脚本启动</h2><h3 id="CrawlerProcess-方式"><a href="#CrawlerProcess-方式" class="headerlink" title="CrawlerProcess 方式"></a>CrawlerProcess 方式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>crawler <span class="token keyword">import</span> CrawlerProcess<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>project <span class="token keyword">import</span> get_project_settings<span class="token keyword">class</span> <span class="token class-name">MySpider1</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 省略爬虫逻辑</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    settings <span class="token operator">=</span> get_project_settings<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment"># 获取项目设置</span>    process <span class="token operator">=</span> CrawlerProcess<span class="token punctuation">(</span>settings<span class="token punctuation">)</span>  <span class="token comment"># 加载设置</span>    process<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>MySpider1<span class="token punctuation">)</span>            <span class="token comment"># 启动爬虫</span>    <span class="token comment"># process.crawl(MySpider2)          # 同一进程中运行多个爬虫</span>    process<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>                     <span class="token comment"># 完成最后一次抓取回调后，会在这里阻塞</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="CrawlerRunner-方式"><a href="#CrawlerRunner-方式" class="headerlink" title="CrawlerRunner 方式"></a>CrawlerRunner 方式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 详见 → https://docs.scrapy.org/en/latest/topics/practices.html?highlight=CrawlerProcess#running-multiple-spiders-in-the-same-process</span><span class="token keyword">from</span> twisted<span class="token punctuation">.</span>internet <span class="token keyword">import</span> reactor<span class="token punctuation">,</span> defer<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>crawler <span class="token keyword">import</span> CrawlerRunner<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>log <span class="token keyword">import</span> configure_logging<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>project <span class="token keyword">import</span> get_project_settings<span class="token keyword">class</span> <span class="token class-name">MySpider1</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Your first spider definition</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token class-name">MySpider2</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Your second spider definition</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>configure_logging<span class="token punctuation">(</span><span class="token punctuation">)</span>settings <span class="token operator">=</span> get_project_settings<span class="token punctuation">(</span><span class="token punctuation">)</span>runner <span class="token operator">=</span> CrawlerRunner<span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@defer<span class="token punctuation">.</span>inlineCallbacks</span><span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">yield</span> runner<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>MySpider1<span class="token punctuation">)</span>    <span class="token keyword">yield</span> runner<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>MySpider2<span class="token punctuation">)</span>    reactor<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>crawl<span class="token punctuation">(</span><span class="token punctuation">)</span>reactor<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the script will block here until the last crawl call is finished</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><ul><li><code>scrapy shell</code>的方式简单调试</li><li><code>IDE</code> 打断点，用脚本启动程序即可</li></ul><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># scrapy/crawler.py#CrawlerProcess</span><span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stop_after_crawl<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> install_signal_handlers<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 不在最顶层的模块内引入reactor是避免安装默认reactor</span>    <span class="token keyword">from</span> twisted<span class="token punctuation">.</span>internet <span class="token keyword">import</span> reactor    <span class="token comment"># reactor是twisted的单例，是事件管理器，用于注册、注销事件，运行事件循环，当事件发生时调用回调函数处理</span>    <span class="token keyword">if</span> stop_after_crawl<span class="token punctuation">:</span>        d <span class="token operator">=</span> self<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># Don't start the reactor if the deferreds are already fired</span>        <span class="token keyword">if</span> d<span class="token punctuation">.</span>called<span class="token punctuation">:</span>            <span class="token keyword">return</span>        <span class="token comment"># stop_after_crawl：所有爬虫完成后是否停止reactor</span>        d<span class="token punctuation">.</span>addBoth<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_stop_reactor<span class="token punctuation">)</span>    <span class="token keyword">if</span> install_signal_handlers<span class="token punctuation">:</span>        install_shutdown_handlers<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_signal_shutdown<span class="token punctuation">)</span>    resolver_class <span class="token operator">=</span> load_object<span class="token punctuation">(</span>self<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">"DNS_RESOLVER"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    resolver <span class="token operator">=</span> create_instance<span class="token punctuation">(</span>resolver_class<span class="token punctuation">,</span> self<span class="token punctuation">.</span>settings<span class="token punctuation">,</span> self<span class="token punctuation">,</span> reactor<span class="token operator">=</span>reactor<span class="token punctuation">)</span>    resolver<span class="token punctuation">.</span>install_on_reactor<span class="token punctuation">(</span><span class="token punctuation">)</span>    tp <span class="token operator">=</span> reactor<span class="token punctuation">.</span>getThreadPool<span class="token punctuation">(</span><span class="token punctuation">)</span>    tp<span class="token punctuation">.</span>adjustPoolsize<span class="token punctuation">(</span>maxthreads<span class="token operator">=</span>self<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>getint<span class="token punctuation">(</span><span class="token string">'REACTOR_THREADPOOL_MAXSIZE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    reactor<span class="token punctuation">.</span>addSystemEventTrigger<span class="token punctuation">(</span><span class="token string">'before'</span><span class="token punctuation">,</span> <span class="token string">'shutdown'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>stop<span class="token punctuation">)</span>    <span class="token comment"># 运行事件循环</span>    reactor<span class="token punctuation">.</span>run<span class="token punctuation">(</span>installSignalHandlers<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># blocking call</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="Twisted"><a href="#Twisted" class="headerlink" title="Twisted"></a>Twisted</h1><blockquote><p><a target="_blank" rel="noopener" href="https://krondo.com/an-introduction-to-asynchronous-programming-and-twisted/">Twisted Introduction</a></p></blockquote><ol><li>Twisted的reactor只有通过调用reactor.run()来启动</li><li>reactor循环是在其开始的进程中运行，也就是运行在主进程中</li><li>一旦启动，就会一直运行下去，reactor就会在程序的控制下（或者具体在一个启动它的线程的控制下）</li><li>reactor循环并不会消耗任何CPU的资源</li><li>并不需要显式的创建reactor，只需要引入就OK了</li></ol>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ⅰ.Re：Scrapy自定义模板</title>
    <link href="/40dd86514b92/"/>
    <url>/40dd86514b92/</url>
    
    <content type="html"><![CDATA[<h1 id="创建默认模板"><a href="#创建默认模板" class="headerlink" title="创建默认模板"></a>创建默认模板</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Scrapy 版本 2.6.2 </span><span class="token comment"># 创建项目</span><span class="token comment"># scrapy startproject [配置参数（可选）] &lt;项目名称（字母开头，只运行数字字母下划线）> [项目输出路径（可选）]</span>scrapy startproject scarpy_demo <span class="token string">"d:\爬虫 - 项目"</span><span class="token comment"># 创建爬虫</span><span class="token builtin class-name">cd</span> d:<span class="token punctuation">\</span>爬虫 - 项目<span class="token comment"># scrapy genspider [配置参数（可选）] &lt;爬虫名称> &lt;抓取目标的域名或URL></span>scrapy genspider spider_demo toscrape.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 参考帮助</span>scrapy startproject <span class="token parameter variable">-h</span>scrapy genspider <span class="token parameter variable">-h</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="全局命令"><a href="#全局命令" class="headerlink" title="全局命令"></a>全局命令</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># startproject</span>scrapy startproject <span class="token operator">&lt;</span>project_name<span class="token operator">></span> <span class="token punctuation">[</span>project_dir<span class="token punctuation">]</span><span class="token comment"># genspider </span><span class="token comment"># -t 参数添加的模板为框架自带的模板（..\site-packages\scrapy\templates\spiders），用 scrapy genspider -l 命令查看</span>scrapy genspider <span class="token punctuation">[</span>-t template<span class="token punctuation">]</span> <span class="token operator">&lt;</span>name<span class="token operator">></span> <span class="token operator">&lt;</span>domain or URL<span class="token operator">></span><span class="token comment"># settings</span><span class="token comment"># 查看爬虫设置的值，scrapy settings --get DOWNLOAD_DELAY</span>scrapy settings <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token comment"># runspider</span><span class="token comment"># 可以运行脱离项目的爬虫</span>scrapy runspider <span class="token operator">&lt;</span>spider_file.py<span class="token operator">></span><span class="token comment"># shell</span><span class="token comment"># scrapy shell http://quotes.toscrape.com/</span>scrapy shell <span class="token punctuation">[</span>url<span class="token punctuation">]</span><span class="token comment">## 可以保存网页本地调试</span>scrapy shell <span class="token string">'./Quotes to Scrape.html'</span><span class="token comment">## --spider 指定爬虫</span>scrapy shell http://quotes.toscrape.com/ <span class="token parameter variable">--spider</span><span class="token operator">=</span>spider_demo<span class="token comment">## -c code 评估代码，打印并退出</span>scrapy shell http://quotes.toscrape.com/ <span class="token parameter variable">-c</span> <span class="token string">'(view(response) , response.status, response.url)'</span><span class="token comment">## --no-redirect 不要重定向；--nolog 不要运行日志</span>scrapy shell --no-redirect <span class="token parameter variable">--nolog</span> http://httpbin.org/redirect-to?url<span class="token operator">=</span>http%3A%2F%2Fexample.com%2F <span class="token parameter variable">-c</span> <span class="token string">'(response.status, response.url)'</span><span class="token comment"># fetch</span><span class="token comment"># --spider=SPIDER 指定爬虫；--headers 打印响应头；--no-redirect 不要重定向</span><span class="token comment"># scrapy fetch --nolog http://httpbin.org/get</span>scrapy fetch <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token comment"># view</span><span class="token comment"># 浏览器显示页面，scrapy view http://quotes.toscrape.com/</span>scrapy view <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token comment"># version</span><span class="token comment"># 输出 Python、Twisted 和平台信息，这对于错误报告很有用，scrapy version -v</span>scrapy version <span class="token punctuation">[</span>-v<span class="token punctuation">]</span><span class="token comment"># bench</span><span class="token comment"># 一个简单的基准测试套件</span>scrapy bench<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="项目命令"><a href="#项目命令" class="headerlink" title="项目命令"></a>项目命令</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># crawl</span><span class="token comment"># scrapy crawl spider_demo</span>scrapy crawl <span class="token operator">&lt;</span>spider<span class="token operator">></span><span class="token comment"># check</span>scrapy check <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token operator">&lt;</span>spider<span class="token operator">></span><span class="token comment"># list</span>scrapy list<span class="token comment"># edit</span>scrapy edit <span class="token operator">&lt;</span>spider<span class="token operator">></span><span class="token comment"># parse</span>scrapy parse <span class="token operator">&lt;</span>url<span class="token operator">></span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="创建自定义模板"><a href="#创建自定义模板" class="headerlink" title="创建自定义模板"></a>创建自定义模板</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 假设有一套自己做的模板，目录名叫 ‘templates’</span><span class="token comment"># 创建项目</span>scrapy startproject <span class="token parameter variable">-s</span> <span class="token assign-left variable">TEMPLATES_DIR</span><span class="token operator">=</span>templates scarpy_demo<span class="token comment"># 创建爬虫</span><span class="token builtin class-name">cd</span> scarpy_demoscrapy genspider <span class="token parameter variable">-s</span> <span class="token assign-left variable">TEMPLATES_DIR</span><span class="token operator">=</span><span class="token string">"../templates"</span> spider_demo toscrape.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h2><ul><li><p>startproject.py</p><ul><li><p>渲染文件明细</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">TEMPLATES_TO_RENDER <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token string">'scrapy.cfg'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'$&#123;project_name&#125;'</span><span class="token punctuation">,</span> <span class="token string">'settings.py.tmpl'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'$&#123;project_name&#125;'</span><span class="token punctuation">,</span> <span class="token string">'items.py.tmpl'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'$&#123;project_name&#125;'</span><span class="token punctuation">,</span> <span class="token string">'pipelines.py.tmpl'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'$&#123;project_name&#125;'</span><span class="token punctuation">,</span> <span class="token string">'middlewares.py.tmpl'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p><code>class Command(ScrapyCommand)</code></p>  <figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""Command 类中 run 函数 主要是对参数的校验、模板文件拷贝及渲染自定义模板的核心在于 templates_dir 这个类变量"""</span>  <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> args<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> UsageError<span class="token punctuation">(</span><span class="token punctuation">)</span>        project_name <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        project_dir <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>            project_dir <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> exists<span class="token punctuation">(</span>join<span class="token punctuation">(</span>project_dir<span class="token punctuation">,</span> <span class="token string">'scrapy.cfg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>exitcode <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Error: scrapy.cfg already exists in </span><span class="token interpolation"><span class="token punctuation">&#123;</span>abspath<span class="token punctuation">(</span>project_dir<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_is_valid_name<span class="token punctuation">(</span>project_name<span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>exitcode <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">return</span>        self<span class="token punctuation">.</span>_copytree<span class="token punctuation">(</span>self<span class="token punctuation">.</span>templates_dir<span class="token punctuation">,</span> abspath<span class="token punctuation">(</span>project_dir<span class="token punctuation">)</span><span class="token punctuation">)</span>        move<span class="token punctuation">(</span>join<span class="token punctuation">(</span>project_dir<span class="token punctuation">,</span> <span class="token string">'module'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> join<span class="token punctuation">(</span>project_dir<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> paths <span class="token keyword">in</span> TEMPLATES_TO_RENDER<span class="token punctuation">:</span>            path <span class="token operator">=</span> join<span class="token punctuation">(</span><span class="token operator">*</span>paths<span class="token punctuation">)</span>            tplfile <span class="token operator">=</span> join<span class="token punctuation">(</span>project_dir<span class="token punctuation">,</span> string<span class="token punctuation">.</span>Template<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>substitute<span class="token punctuation">(</span>project_name<span class="token operator">=</span>project_name<span class="token punctuation">)</span><span class="token punctuation">)</span>            render_templatefile<span class="token punctuation">(</span>tplfile<span class="token punctuation">,</span> project_name<span class="token operator">=</span>project_name<span class="token punctuation">,</span> ProjectName<span class="token operator">=</span>string_camelcase<span class="token punctuation">(</span>project_name<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"New Scrapy project '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>project_name<span class="token punctuation">&#125;</span></span><span class="token string">', using template directory "</span></span>              <span class="token string-interpolation"><span class="token string">f"'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>templates_dir<span class="token punctuation">&#125;</span></span><span class="token string">', created in:"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"    </span><span class="token interpolation"><span class="token punctuation">&#123;</span>abspath<span class="token punctuation">(</span>project_dir<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">\n"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"You can start your first spider with:"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"    cd </span><span class="token interpolation"><span class="token punctuation">&#123;</span>project_dir<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"    scrapy genspider example example.com"</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''类属性 templates_dir 中如果没有传 TEMPLATES_DIR 这个参数的话就会按默认的逻辑处理所以自定义模板需要多设置一个settings参数。-s TEMPLATES_DIR=templatestemplates 为模板文件夹'''</span>  <span class="token decorator annotation punctuation">@property</span>    <span class="token keyword">def</span> <span class="token function">templates_dir</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> join<span class="token punctuation">(</span>            self<span class="token punctuation">.</span>settings<span class="token punctuation">[</span><span class="token string">'TEMPLATES_DIR'</span><span class="token punctuation">]</span> <span class="token keyword">or</span> join<span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>__path__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'templates'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'project'</span>        <span class="token punctuation">)</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul></li><li><p>genspider.py</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''genspider 命令和 startproject 大同小异sanitize_module_name 对爬虫名称的处理extract_domain 对域名参数传url地址的处理，有个https的已知问题，无伤大雅'''</span><span class="token keyword">def</span> <span class="token function">sanitize_module_name</span><span class="token punctuation">(</span>module_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Sanitize the given module name, by replacing dashes and points    with underscores and prefixing it with a letter if it doesn't start    with one    """</span>    module_name <span class="token operator">=</span> module_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> module_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">:</span>        module_name <span class="token operator">=</span> <span class="token string">"a"</span> <span class="token operator">+</span> module_name    <span class="token keyword">return</span> module_name<span class="token keyword">def</span> <span class="token function">extract_domain</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Extract domain name from URL string"""</span>    o <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span> o<span class="token punctuation">.</span>scheme <span class="token operator">==</span> <span class="token string">''</span> <span class="token keyword">and</span> o<span class="token punctuation">.</span>netloc <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        o <span class="token operator">=</span> urlparse<span class="token punctuation">(</span><span class="token string">"//"</span> <span class="token operator">+</span> url<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> o<span class="token punctuation">.</span>netloc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>自带 templates 模板结构</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">templates    ├─project    │  │  scrapy.cfg    │  │    │  └─module    │      │  items.py.tmpl    │      │  middlewares.py.tmpl    │      │  pipelines.py.tmpl    │      │  settings.py.tmpl    │      │  __init__.py    │      │    │      └─spiders    │            __init__.py    │    └─spiders            basic.tmpl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h2 id="使用-scrapy-template-plus-及其-builder-生成项目"><a href="#使用-scrapy-template-plus-及其-builder-生成项目" class="headerlink" title="使用 scrapy-template-plus 及其 builder 生成项目"></a>使用 scrapy-template-plus 及其 builder 生成项目</h2><blockquote><p>项目地址：<a target="_blank" rel="noopener" href="https://github.com/yuanqimanong/scrapy-template-plus">https://github.com/yuanqimanong/scrapy-template-plus</a></p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><blockquote><ol><li>先安装 <code>requirements.txt</code> 环境</li><li>再运行 <code>builder-run.py</code> 按操作提示</li><li>用 IDE 加载项目，并设置对应的根目录</li></ol></blockquote><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><blockquote><p>生成项目：继承 <code>startproject.Command</code> ，加载<code>settings</code>，重写<code>TEMPLATES_TO_RENDER</code>和<code>run</code>方法</p><p>生成爬虫：继承 <code>genspider.Command</code>，重写 <code>run</code>方法</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Scrapy</tag>
      
      <tag>爬虫框架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>YOLOv8</title>
    <link href="/30114bcb7401/"/>
    <url>/30114bcb7401/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>GitHub：<a target="_blank" rel="noopener" href="https://github.com/ultralytics/ultralytics">https://github.com/ultralytics/ultralytics</a></p><p>Notebook：<a target="_blank" rel="noopener" href="https://github.com/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb">https://github.com/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb</a></p><p>文档：<a target="_blank" rel="noopener" href="https://docs.ultralytics.com/">https://docs.ultralytics.com/</a></p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="PIP安装"><a href="#PIP安装" class="headerlink" title="PIP安装"></a>PIP安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 推荐</span>pip <span class="token function">install</span> ultralytics<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h3><blockquote><p>依赖环境：<a target="_blank" rel="noopener" href="https://github.com/ultralytics/ultralytics/blob/main/requirements.txt">https://github.com/ultralytics/ultralytics/blob/main/requirements.txt</a></p></blockquote><h2 id="Clone-Git"><a href="#Clone-Git" class="headerlink" title="Clone Git"></a>Clone Git</h2><blockquote><p>针对开发这个项目本身才会使用的方式，一般情况推荐 pip安装</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/ultralytics/ultralyticspip <span class="token function">install</span> <span class="token parameter variable">-qe</span> ultralytics<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="检测YOLOv8版本、环境及硬件支持"><a href="#检测YOLOv8版本、环境及硬件支持" class="headerlink" title="检测YOLOv8版本、环境及硬件支持"></a>检测YOLOv8版本、环境及硬件支持</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> ultralytics<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    ultralytics<span class="token punctuation">.</span>checks<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 输出结果</span>Ultralytics YOLOv8.0.13  Python-3.8.13 torch-1.11.0 CUDA:0 <span class="token punctuation">(</span>NVIDIA GeForce GTX <span class="token number">1070</span> Ti, 8192MiB<span class="token punctuation">)</span>Setup complete  <span class="token punctuation">(</span><span class="token number">16</span> CPUs, <span class="token number">31.9</span> GB RAM, <span class="token number">2715.9</span>/3023.4 GB disk<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在命令行下运行</span>yolo <span class="token assign-left variable">task</span><span class="token operator">=</span>detect <span class="token assign-left variable">mode</span><span class="token operator">=</span>predict <span class="token assign-left variable">model</span><span class="token operator">=</span>yolov8n.pt <span class="token assign-left variable">conf</span><span class="token operator">=</span><span class="token number">0.25</span> <span class="token assign-left variable">source</span><span class="token operator">=</span><span class="token string">'bus.jpg'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 若提示 export failure 导出失败，需要设置 opset=11</span>yolo <span class="token assign-left variable">mode</span><span class="token operator">=</span>export <span class="token assign-left variable">model</span><span class="token operator">=</span>yolov8n.pt <span class="token assign-left variable">format</span><span class="token operator">=</span>onnx <span class="token assign-left variable">opset</span><span class="token operator">=</span><span class="token number">11</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><blockquote><p>这里使用 coco128 数据集 做演示 <a target="_blank" rel="noopener" href="https://www.kaggle.com/datasets/ultralytics/coco128">https://www.kaggle.com/datasets/ultralytics/coco128</a></p></blockquote><h3 id="转换数据"><a href="#转换数据" class="headerlink" title="转换数据"></a>转换数据</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># coco128 的数据集结构如下</span>└─coco128   ├─ images   │      └─ train2017   └─ labels          └─ train2017          <span class="token comment"># 需要转换成如下结构</span>└─datasets    └─coco128        ├─test    <span class="token comment"># 测试</span>        │  ├─images        │  └─labels        ├─train   <span class="token comment"># 训练</span>        │  ├─images        │  └─labels        └─valid   <span class="token comment"># 校验</span>            ├─images            └─labels<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><blockquote><p>这里提供一个脚本，同类结构可以快速转换</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">CWD <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">move_file</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s not exist!"</span> <span class="token operator">%</span> src<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        fpath<span class="token punctuation">,</span> fname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>dest<span class="token punctuation">)</span>  <span class="token comment"># 分离文件名和路径</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span>  <span class="token comment"># 创建路径</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>  <span class="token comment"># 移动文件</span>        <span class="token comment"># print("move %s -> %s" % (src, dest))</span><span class="token keyword">def</span> <span class="token function">copy_file</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s not exist!"</span> <span class="token operator">%</span> src<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        fpath<span class="token punctuation">,</span> fname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>dest<span class="token punctuation">)</span>  <span class="token comment"># 分离文件名和路径</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span>  <span class="token comment"># 创建路径</span>        shutil<span class="token punctuation">.</span>copyfile<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span>  <span class="token comment"># 复制文件</span>        <span class="token comment"># print("copy %s -> %s" % (src, dest))</span><span class="token keyword">def</span> <span class="token function">get_valid_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    valid_data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> image_name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>image_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        image_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>image_dir<span class="token punctuation">,</span> image_name<span class="token punctuation">)</span>        label_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>image_name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.txt'</span>        label_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>label_dir<span class="token punctuation">,</span> label_name<span class="token punctuation">)</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>label_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            valid_data_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>image_path<span class="token punctuation">,</span> label_path<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> valid_data_list<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 获取当前路径</span>    CWD <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 指定数据集 images 路径</span>    image_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>CWD<span class="token punctuation">&#125;</span></span><span class="token string">/coco128/images/train2017'</span></span>    <span class="token comment"># 指定数据集 labels 路径</span>    label_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>CWD<span class="token punctuation">&#125;</span></span><span class="token string">/coco128/labels/train2017'</span></span>    <span class="token comment"># 指定数据集存储路径</span>    out_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>CWD<span class="token punctuation">&#125;</span></span><span class="token string">/coco128-datasets'</span></span>    <span class="token comment"># 存入有效标注数据</span>    valid_data <span class="token operator">=</span> get_valid_data<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 按 train：valid：test = 7:2:1 比例随机选取数据 移动到输出目录</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>valid_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        dest_dir <span class="token operator">=</span> <span class="token string">''</span>        r <span class="token operator">=</span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> r <span class="token operator">&lt;=</span> <span class="token number">0.1</span><span class="token punctuation">:</span>            <span class="token comment"># 移动到 test 文件夹</span>            dest_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>out_dir<span class="token punctuation">&#125;</span></span><span class="token string">/test"</span></span>        <span class="token keyword">elif</span> r <span class="token operator">></span> <span class="token number">0.2</span><span class="token punctuation">:</span>            <span class="token comment"># 移动到 train 文件夹</span>            dest_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>out_dir<span class="token punctuation">&#125;</span></span><span class="token string">/train"</span></span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment"># 移动到 valid 文件夹</span>            dest_dir <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">F"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>out_dir<span class="token punctuation">&#125;</span></span><span class="token string">/valid"</span></span>        move_file<span class="token punctuation">(</span>valid_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dest_dir<span class="token punctuation">,</span> <span class="token string">'images'</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>valid_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        move_file<span class="token punctuation">(</span>valid_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dest_dir<span class="token punctuation">,</span> <span class="token string">'labels'</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>valid_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'生成完毕！'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="开始训练"><a href="#开始训练" class="headerlink" title="开始训练"></a>开始训练</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 若出现 OSError: [WinError 1455] 页面文件太小，无法完成操作。需要 workers=0</span>yolo <span class="token assign-left variable">task</span><span class="token operator">=</span>detect <span class="token assign-left variable">mode</span><span class="token operator">=</span>train <span class="token assign-left variable">model</span><span class="token operator">=</span>yolov8n.yaml <span class="token assign-left variable">data</span><span class="token operator">=</span>coco128.yaml <span class="token assign-left variable">epochs</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">imgsz</span><span class="token operator">=</span><span class="token number">640</span> <span class="token assign-left variable">resume</span><span class="token operator">=</span>True <span class="token assign-left variable">workers</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment"># 训练完成后 一般选用 best.pt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>Chobits</category>
      
      <category>OCR</category>
      
    </categories>
    
    
    <tags>
      
      <tag>YOLOv8</tag>
      
      <tag>OCR</tag>
      
      <tag>验证码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ddddocr使用与模型训练</title>
    <link href="/b61b33d893ac/"/>
    <url>/b61b33d893ac/</url>
    
    <content type="html"><![CDATA[<h1 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h1><blockquote><p>ddddocr（带带弟弟OCR）：是一个很好用的ocr识别库</p><p><code>ddddocr</code> GitHub：<a target="_blank" rel="noopener" href="https://github.com/sml2h3/ddddocr">https://github.com/sml2h3/ddddocr</a></p><p>dddd_trainer 是 ddddocr 的训练工具</p><p><code>dddd_trainer</code> GitHub：<a target="_blank" rel="noopener" href="https://github.com/sml2h3/dddd_trainer">https://github.com/sml2h3/dddd_trainer</a></p></blockquote><h2 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h2><p><img src="/b61b33d893ac/test_pic.png" alt="计算题"></p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> ddddocr<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    test_pic_path <span class="token operator">=</span> <span class="token string">r'test_pic.png'</span>    ocr <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>test_pic_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        image_bytes <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    result <span class="token operator">=</span> ocr<span class="token punctuation">.</span>classification<span class="token punctuation">(</span>image_bytes<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="识别结果"><a href="#识别结果" class="headerlink" title="识别结果"></a>识别结果</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">欢迎使用ddddocr，本项目专注带动行业内卷，个人博客:wenanzhe.com训练数据支持来源于:http://146.56.204.113:19199/preview爬虫框架feapder可快速一键接入，快速开启爬虫之旅：https://github.com/Boris-code/feapder谷歌reCaptcha验证码 / hCaptcha验证码 / funCaptcha验证码商业级识别接口：https://yescaptcha.com/i/NSwk7i<span class="token assign-left variable">798</span><span class="token operator">=</span><span class="token number">9</span>进程已结束，退出代码为 <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>识别的结果（<code>798=9</code>）实际结果还是有些差异，那么就需要自己训练一下模型。</p><h1 id="训练方法"><a href="#训练方法" class="headerlink" title="训练方法"></a>训练方法</h1><h2 id="步骤1-标注训练数据"><a href="#步骤1-标注训练数据" class="headerlink" title="步骤1 标注训练数据"></a>步骤1 标注训练数据</h2><blockquote><p>数据集支持两种格式：</p><ol><li>从文件名导入</li><li>从文件中导入</li></ol></blockquote><h3 id="从文件名导入格式"><a href="#从文件名导入格式" class="headerlink" title="从文件名导入格式"></a>从文件名导入格式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/root/images_set/<span class="token operator">|</span>---- abcde_随机hash值.jpg<span class="token operator">|</span>---- sdae_随机hash值.jpg<span class="token operator">|</span>---- 酱闷肘子_随机hash值.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="从文件中导入格式"><a href="#从文件中导入格式" class="headerlink" title="从文件中导入格式"></a>从文件中导入格式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/root/images_set/<span class="token operator">|</span>---- labels.txt<span class="token operator">|</span>---- images      <span class="token operator">|</span>---- 随机hash值.jpg      <span class="token operator">|</span>---- 随机hash值.jpg      <span class="token operator">|</span>---- 酱闷肘子_随机hash值.jpglabels.txt文件内容为（其中<span class="token punctuation">\</span>t制表符为每行文件名与label的分隔符）随机hash值.jpg<span class="token punctuation">\</span>tabcd随机hash值.jpg<span class="token punctuation">\</span>tsdae酱闷肘子_随机hash值.jpg<span class="token punctuation">\</span>t酱闷肘子<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>本文中，由于是计算题，其中有<code>?</code>，但文件名中不能包含<code>?</code>，故使用第二种导入方法</p><p>训练的数据集，如下</p><p><img src="/b61b33d893ac/image-20221002104647640.png" alt="image-20221002104647640"></p><p><img src="/b61b33d893ac/image-20221002104738494.png" alt="image-20221002104738494"></p><h2 id="步骤2-创建训练项目"><a href="#步骤2-创建训练项目" class="headerlink" title="步骤2 创建训练项目"></a>步骤2 创建训练项目</h2><ul><li>克隆项目 <code>git clone https://github.com/sml2h3/dddd_trainer.git</code></li><li>安装依赖 <code>pip install -r requirements.txt -i https://pypi.douban.com/simple</code></li><li>创建项目 <code>python app.py create &#123;project_name&#125;</code></li></ul><h2 id="步骤3-缓存数据及训练"><a href="#步骤3-缓存数据及训练" class="headerlink" title="步骤3 缓存数据及训练"></a>步骤3 缓存数据及训练</h2><h3 id="缓存数据"><a href="#缓存数据" class="headerlink" title="缓存数据"></a>缓存数据</h3><p><code>python app.py cache &#123;project_name&#125; /root/images_set/</code></p><p>如果是从labels.txt里面读取数据</p><p><code>python app.py cache &#123;project_name&#125; /root/images_set/ file</code></p><h3 id="开始训练"><a href="#开始训练" class="headerlink" title="开始训练"></a>开始训练</h3><p><code>python app.py train &#123;project_name&#125;</code></p><blockquote><p>训练好的模型在<code>&#123;project_name&#125;\models</code> 下</p></blockquote><blockquote><p>如果 ‘export_onnx’ 报错 可以看看这个Issues 👉 <a target="_blank" rel="noopener" href="https://github.com/sml2h3/dddd_trainer/issues/12">https://github.com/sml2h3/dddd_trainer&#x2F;issues&#x2F;12</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 我是直接修改源码删掉这个参数</span><span class="token comment"># def export_onnx(self, net, dummy_input, graph_path, input_names, output_names, dynamic_ax):</span><span class="token comment">#     torch.onnx.export(net, dummy_input, graph_path, export_params=True, verbose=False,</span><span class="token comment">#                       input_names=input_names, output_names=output_names, dynamic_axes=dynamic_ax,</span><span class="token comment">#                       opset_version=12, do_constant_folding=True, _retain_param_name=False)</span><span class="token keyword">def</span> <span class="token function">export_onnx</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> net<span class="token punctuation">,</span> dummy_input<span class="token punctuation">,</span> graph_path<span class="token punctuation">,</span> input_names<span class="token punctuation">,</span> output_names<span class="token punctuation">,</span> dynamic_ax<span class="token punctuation">)</span><span class="token punctuation">:</span>    torch<span class="token punctuation">.</span>onnx<span class="token punctuation">.</span>export<span class="token punctuation">(</span>net<span class="token punctuation">,</span> dummy_input<span class="token punctuation">,</span> graph_path<span class="token punctuation">,</span> export_params<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>                      input_names<span class="token operator">=</span>input_names<span class="token punctuation">,</span> output_names<span class="token operator">=</span>output_names<span class="token punctuation">,</span> dynamic_axes<span class="token operator">=</span>dynamic_ax<span class="token punctuation">,</span>                      opset_version<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> do_constant_folding<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>拷贝训练好的模型（<code>onnx</code>文件和<code>charsets.json</code>）</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> ddddocr<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    test_pic_path <span class="token operator">=</span> <span class="token string">r'test_pic.png'</span>    <span class="token comment"># 加载自己训练的模型</span>    ocr <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span>charsets_path<span class="token operator">=</span><span class="token string">r'charsets.json'</span><span class="token punctuation">,</span>                          import_onnx_path<span class="token operator">=</span><span class="token string">r'test_project_1.0_33_1000_2022-09-17-22-01-09.onnx'</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>test_pic_path<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        image_bytes <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    result <span class="token operator">=</span> ocr<span class="token punctuation">.</span>classification<span class="token punctuation">(</span>image_bytes<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>训练结果如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">7</span>-8<span class="token operator">=</span>?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>Chobits</category>
      
      <category>OCR</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OCR</tag>
      
      <tag>验证码</tag>
      
      <tag>ddddocr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片去噪提升识别率</title>
    <link href="/5730be389e85/"/>
    <url>/5730be389e85/</url>
    
    <content type="html"><![CDATA[<h1 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h1><h2 id="测试图片"><a href="#测试图片" class="headerlink" title="测试图片"></a>测试图片</h2><p><img src="/5730be389e85/Test2.png" alt="Test2"></p><h2 id="测试网址"><a href="#测试网址" class="headerlink" title="测试网址"></a>测试网址</h2><blockquote><p>飞桨PaddlePaddle框架测试地址：<a target="_blank" rel="noopener" href="https://www.paddlepaddle.org.cn/hub/scene/ocr">https://www.paddlepaddle.org.cn/hub/scene/ocr</a></p></blockquote><h2 id="识别结果"><a href="#识别结果" class="headerlink" title="识别结果"></a>识别结果</h2><p>无法识别</p><p><img src="/5730be389e85/image-20230201190350043.png" alt="image-20230201190350043"></p><h1 id="去除干扰线和噪点"><a href="#去除干扰线和噪点" class="headerlink" title="去除干扰线和噪点"></a>去除干扰线和噪点</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 读取图片</span>    image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'../pic/Test.png'</span><span class="token punctuation">)</span>    <span class="token comment"># 查看图片信息</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>mode<span class="token punctuation">)</span>    <span class="token comment"># 灰度图像</span>    bgr2gray_img <span class="token operator">=</span> image<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span>    <span class="token comment"># bgr2gray_img.show()</span>    <span class="token comment"># 二值化</span>    <span class="token comment"># binarization_img = bgr2gray_img.convert('1')</span>    <span class="token comment"># binarization_img.show()</span>    <span class="token comment"># 灰度阈值</span>    threshold <span class="token operator">=</span> <span class="token number">50</span>    array_img <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>bgr2gray_img<span class="token punctuation">)</span>    array_img <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>array_img <span class="token operator">&lt;</span> threshold<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> array_img<span class="token punctuation">)</span>    result <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>array_img<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'uint8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    result<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'result.png'</span><span class="token punctuation">,</span> <span class="token string">'png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h2><p><img src="/5730be389e85/result.png" alt="result"></p><h2 id="识别结果-1"><a href="#识别结果-1" class="headerlink" title="识别结果"></a>识别结果</h2><p><img src="/5730be389e85/image-20230201190615191.png" alt="image-20230201190615191"></p><p>注意：第三个字识别错误，需要进一步训练模型。</p>]]></content>
    
    
    <categories>
      
      <category>Chobits</category>
      
      <category>OCR</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OCR</tag>
      
      <tag>验证码</tag>
      
      <tag>图片去噪</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pip search 报错</title>
    <link href="/ac1b7d334b57/"/>
    <url>/ac1b7d334b57/</url>
    
    <content type="html"><![CDATA[<h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ERROR: XMLRPC request failed <span class="token punctuation">[</span>code: -32500<span class="token punctuation">]</span>RuntimeError: PyPI no longer supports <span class="token string">'pip search'</span> <span class="token punctuation">(</span>or XML-RPC search<span class="token punctuation">)</span>. Please use https://pypi.org/search <span class="token punctuation">(</span>via a browser<span class="token punctuation">)</span> instead. See https://warehouse.pypa.io/api-reference/xml-rpc.html<span class="token comment">#deprecated-methods for more information.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h1><blockquote><p>PyPI XMLRPC Search Disabled</p><p>Update - We are now at 100 days since the decision to disable the XMLRPC search endpoint.</p><p>Traffic to the endpoint has not subsided in any substantial way and we have not heard from any of the parties who continue to issue hundreds of thousands of search calls per hour.</p><p>As such, XMLRPC search will be permanently disabled.</p><p>Mar 24, 14:22 UTC</p></blockquote><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol><li>在 <a target="_blank" rel="noopener" href="https://pypi.org/search/">https://pypi.org/search/</a> 中搜索</li><li>安装 pip_search (<code>pip install pip_search</code>)，使用 <code>pip_search newspaper</code> 搜索</li></ol>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot2.7.X整合MyBatis-Plus及逆向生成CRUD代码</title>
    <link href="/417a23402eb8/"/>
    <url>/417a23402eb8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这里使用的 <code>SpringBoot 2.7.3</code> 的版本，在创建项目及数据库表后，完成后需要进行以下操作</p><p>数据库表结构中需要增加注释</p></blockquote><h1 id="添加POM"><a href="#添加POM" class="headerlink" title="添加POM"></a>添加POM</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.velocity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>velocity-engine-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="添加YML"><a href="#添加YML" class="headerlink" title="添加YML"></a>添加YML</h1><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># application.yml</span><span class="token comment"># DataSource设置</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//主机<span class="token punctuation">:</span>端口/数据库<span class="token punctuation">?</span>serverTimezone=GMT%2B8<span class="token important">&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;zeroDateTimeBehavior=CONVERT_TO_NULL</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> 用户名    <span class="token key atrule">password</span><span class="token punctuation">:</span> 密码<span class="token comment">#mybatis日志</span><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>    <span class="token key atrule">log-impl</span><span class="token punctuation">:</span> org.apache.ibatis.logging.stdout.StdOutImpl  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>com/<span class="token punctuation">...</span>/包名/mapper/xml/<span class="token important">*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="逆向生成代码"><a href="#逆向生成代码" class="headerlink" title="逆向生成代码"></a>逆向生成代码</h1><ol><li>根据情况增加 <code>BaseEntity</code> 基类</li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@EqualsAndHashCode</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">"ID"</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">ASSIGN_ID</span><span class="token punctuation">)</span>  <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>  <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">"创建时间"</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"create_time"</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span>  <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> create_time<span class="token punctuation">;</span>  <span class="token comment">//  @ApiModelProperty("创建时间")</span>  <span class="token comment">//  @TableField(value = "gmt_create", fill = FieldFill.INSERT)</span>  <span class="token comment">//  private LocalDateTime gmtCreate;</span>  <span class="token comment">//  @ApiModelProperty("更新时间")</span>  <span class="token comment">//  @OrderBy(asc = false)</span>  <span class="token comment">//  @TableField(value = "gmt_modified", fill = FieldFill.INSERT_UPDATE)</span>  <span class="token comment">//  private LocalDateTime gmtModified;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ol start="2"><li>在 <code>test</code> 包下创建 <code>CodeGenerator</code> 类</li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">CodeGenerator</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;spring.datasource.url&#125;"</span><span class="token punctuation">)</span>  <span class="token class-name">String</span> <span class="token constant">URL</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;spring.datasource.username&#125;"</span><span class="token punctuation">)</span>  <span class="token class-name">String</span> <span class="token constant">USERNAME</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;spring.datasource.password&#125;"</span><span class="token punctuation">)</span>  <span class="token class-name">String</span> <span class="token constant">PASSWORD</span><span class="token punctuation">;</span>  <span class="token annotation punctuation">@Test</span>  <span class="token keyword">void</span> <span class="token function">generateCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 包路径</span>    <span class="token class-name">String</span> pkgPath <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/src/main/java"</span><span class="token punctuation">;</span>    <span class="token comment">/* 父包名 */</span>    <span class="token class-name">String</span> parentPath <span class="token operator">=</span> <span class="token string">"包名"</span><span class="token punctuation">;</span>    <span class="token comment">/* 模块名 */</span>    <span class="token class-name">String</span> modulePath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token class-name">FastAutoGenerator</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">,</span> <span class="token constant">USERNAME</span><span class="token punctuation">,</span> <span class="token constant">PASSWORD</span><span class="token punctuation">)</span>        <span class="token comment">/*        全局配置        */</span>        <span class="token punctuation">.</span><span class="token function">globalConfig</span><span class="token punctuation">(</span>            builder <span class="token operator">-></span>                builder                    <span class="token comment">// 作者名</span>                    <span class="token punctuation">.</span><span class="token function">author</span><span class="token punctuation">(</span><span class="token string">"作者"</span><span class="token punctuation">)</span>                    <span class="token comment">// 注释日期</span>                    <span class="token punctuation">.</span><span class="token function">commentDate</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span>                    <span class="token comment">// 时间策略</span>                    <span class="token comment">// .dateType(DateType.TIME_PACK)</span>                    <span class="token comment">// 开启swagger2</span>                    <span class="token punctuation">.</span><span class="token function">enableSwagger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 覆盖已生成文件</span>                    <span class="token comment">// .fileOverride()</span>                    <span class="token comment">// 指定输出路径</span>                    <span class="token punctuation">.</span><span class="token function">outputDir</span><span class="token punctuation">(</span>pkgPath<span class="token punctuation">)</span>                    <span class="token comment">// 禁止打开输出目录</span>                    <span class="token punctuation">.</span><span class="token function">disableOpenDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">/*        包配置        */</span>        <span class="token punctuation">.</span><span class="token function">packageConfig</span><span class="token punctuation">(</span>            builder <span class="token operator">-></span>                builder                    <span class="token comment">// 父包名</span>                    <span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span>parentPath<span class="token punctuation">)</span>                    <span class="token comment">// 父包模块名</span>                    <span class="token punctuation">.</span><span class="token function">moduleName</span><span class="token punctuation">(</span>modulePath<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">/*        策略配置        */</span>        <span class="token punctuation">.</span><span class="token function">strategyConfig</span><span class="token punctuation">(</span>            builder <span class="token operator">-></span>                builder                    <span class="token comment">/*                    Entity 策略配置                    */</span>                    <span class="token punctuation">.</span><span class="token function">entityBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 开启 lombok 模型</span>                    <span class="token punctuation">.</span><span class="token function">enableLombok</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 禁用生成 serialVersionUID</span>                    <span class="token comment">// .disableSerialVersionUID()</span>                    <span class="token comment">// 开启生成字段常量</span>                    <span class="token comment">// .enableColumnConstant()</span>                    <span class="token comment">// 开启链式模型</span>                    <span class="token punctuation">.</span><span class="token function">enableChainModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 设置父类</span>                    <span class="token comment">// .superClass(parentPath + ".common.model.BaseEntity")</span>                    <span class="token punctuation">.</span><span class="token function">superClass</span><span class="token punctuation">(</span><span class="token class-name">BaseEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>                    <span class="token comment">// 添加父类公共字段</span>                    <span class="token comment">// .addSuperEntityColumns("gmt_create", "gmt_modified")</span>                    <span class="token punctuation">.</span><span class="token function">addSuperEntityColumns</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">)</span>                    <span class="token comment">// 全局主键类型</span>                    <span class="token punctuation">.</span><span class="token function">idType</span><span class="token punctuation">(</span><span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">ASSIGN_ID</span><span class="token punctuation">)</span>                    <span class="token comment">// .addTableFills(</span>                    <span class="token comment">//    new Column("gmt_create", FieldFill.INSERT),</span>                    <span class="token comment">//    new Column("gmt_modified", FieldFill.INSERT_UPDATE))</span>                    <span class="token punctuation">.</span><span class="token function">addTableFills</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Column</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token comment">// 开启 Boolean 类型字段移除 is 前缀</span>                    <span class="token punctuation">.</span><span class="token function">enableRemoveIsPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 乐观锁字段名(数据库)</span>                    <span class="token comment">// .versionColumnName("version")</span>                    <span class="token comment">// 乐观锁属性名(实体)</span>                    <span class="token comment">// .versionPropertyName("version")</span>                    <span class="token comment">// 逻辑删除字段名(数据库)</span>                    <span class="token comment">// .logicDeleteColumnName("is_deleted")</span>                    <span class="token comment">// 逻辑删除属性名(实体)</span>                    <span class="token comment">// .logicDeletePropertyName("deleteFlag")</span>                    <span class="token comment">// 开启生成实体时生成字段注解</span>                    <span class="token punctuation">.</span><span class="token function">enableTableFieldAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 格式化文件名称</span>                    <span class="token punctuation">.</span><span class="token function">formatFileName</span><span class="token punctuation">(</span><span class="token string">"%sEntity"</span><span class="token punctuation">)</span>                    <span class="token comment">/*                    Controller 策略配置                    */</span>                    <span class="token punctuation">.</span><span class="token function">controllerBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 开启驼峰转连字符</span>                    <span class="token punctuation">.</span><span class="token function">enableHyphenStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 开启生成@RestController 控制器</span>                    <span class="token punctuation">.</span><span class="token function">enableRestStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">/*                    Service 策略配置                    */</span>                    <span class="token punctuation">.</span><span class="token function">serviceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment">// 格式化 service 接口文件名称</span>                    <span class="token punctuation">.</span><span class="token function">formatServiceFileName</span><span class="token punctuation">(</span><span class="token string">"%sService"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ol start="3"><li>若有公共字段，需要重写 <code>MetaObjectHandler</code></li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictInsertFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">"createTime"</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// this.strictInsertFill(metaObject, "gmtModified", LocalDateTime::now, LocalDateTime.class);</span>  <span class="token punctuation">&#125;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// this.strictUpdateFill(metaObject, "gmtModified", LocalDateTime::now, LocalDateTime.class);</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="添加MybatisPlus配置类"><a href="#添加MybatisPlus配置类" class="headerlink" title="添加MybatisPlus配置类"></a>添加MybatisPlus配置类</h1><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"包名.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusConfig</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/** 分页插件 */</span>  <span class="token annotation punctuation">@Bean</span>  <span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">MYSQL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BlockAttackInnerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="添加Mybatis-Plus日志"><a href="#添加Mybatis-Plus日志" class="headerlink" title="添加Mybatis-Plus日志"></a>添加Mybatis-Plus日志</h1><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># application.yml</span><span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>    <span class="token key atrule">log-impl</span><span class="token punctuation">:</span> org.apache.ibatis.logging.stdout.StdOutImpl  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>com/ex/bianque/mapper/xml/<span class="token important">*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="测试Mybatis-Plus整合效果"><a href="#测试Mybatis-Plus整合效果" class="headerlink" title="测试Mybatis-Plus整合效果"></a>测试Mybatis-Plus整合效果</h1><p>在 <code>test</code> 包下创建 <code>MyBatisPlusTest</code> 类</p><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisPlusTest</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Autowired</span> <span class="token keyword">private</span> <span class="token class-name">RecordService</span> recordService<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"----- MybatisPlus测试 ------"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxxEntity</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> xxxdService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxxEntity</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token string">" limit 1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><blockquote><p><a target="_blank" rel="noopener" href="https://baomidou.com/pages/49cc81/#service-crud-%E6%8E%A5%E5%8F%A3">CRUD 接口：https://baomidou.com/pages/49cc81/#service-crud-接口</a></p><p><a target="_blank" rel="noopener" href="https://baomidou.com/pages/a61e1b/">多数据源：https://baomidou.com/pages/a61e1b/</a></p><p><a target="_blank" rel="noopener" href="https://baomidou.com/pages/779a6e/">代码生成器：https://baomidou.com/pages/779a6e/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>MyBatis-Plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot2.7.X整合Swagger3</title>
    <link href="/317856722e5e/"/>
    <url>/317856722e5e/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这里使用的 <code>SpringBoot 2.7.3</code> 的版本，在创建项目完成后需要进行以下操作</p></blockquote><h1 id="添加POM"><a href="#添加POM" class="headerlink" title="添加POM"></a>添加POM</h1><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="添加YML"><a href="#添加YML" class="headerlink" title="添加YML"></a>添加YML</h1><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># SpringBoot 2.6以后的版本，默认使用 PathPatternMatcher；Springfox使用的是 AntPathMatcher</span><span class="token comment"># 不修改为 ant_path_matcher 会报出异常：</span><span class="token comment"># org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">mvc</span><span class="token punctuation">:</span>    <span class="token key atrule">pathmatch</span><span class="token punctuation">:</span>      <span class="token key atrule">matching-strategy</span><span class="token punctuation">:</span> ant_path_matcher<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="增加-Swagger3Config-配置类"><a href="#增加-Swagger3Config-配置类" class="headerlink" title="增加 Swagger3Config 配置类"></a>增加 Swagger3Config 配置类</h1><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>v3<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>tags<span class="token punctuation">.</span></span><span class="token class-name">Tag</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Environment</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Profiles</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">ApiInfoBuilder</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">PathSelectors</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">RequestHandlerSelectors</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ApiInfo</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">Contact</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spi<span class="token punctuation">.</span></span><span class="token class-name">DocumentationType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">springfox<span class="token punctuation">.</span>documentation<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>web<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span></span><span class="token class-name">Docket</span></span><span class="token punctuation">;</span><span class="token comment">/** * Swagger3 配置 * * &lt;p>http://localhost/swagger-ui/index.html */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Swagger3Config</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"什么系统的 接口文档"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"接口文档描述"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token string">"作者名字"</span><span class="token punctuation">,</span> <span class="token string">"作者主页"</span><span class="token punctuation">,</span> <span class="token string">"作者邮箱"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"版本号"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token annotation punctuation">@Bean</span>  <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">initDocket</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> env<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 设置要暴漏接口文档的配置环境</span>    <span class="token comment">// spring.profiles.active为 dev 或 test启用swagger</span>    <span class="token class-name">Profiles</span> profile <span class="token operator">=</span> <span class="token class-name">Profiles</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> flag <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>profile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">OAS_30</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">groupName</span><span class="token punctuation">(</span><span class="token string">"分组名字"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withClassAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Tag</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h1><p>（注意主机和端口号设置）：<a target="_blank" rel="noopener" href="http://localhost/swagger-ui/index.html">http://localhost/swagger-ui/index.html</a></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 在Swagger的配置中</span><span class="token comment">// 按Tag注解</span><span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withClassAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Tag</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 匹配所有</span><span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 对应Controller</span><span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"index-controller"</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">"主页测试"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">"主页"</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">"测试"</span><span class="token punctuation">)</span>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/index"</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"成功"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 按包名</span><span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.ex.bianque"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 在配置文件中设置，按正则匹配路径</span><span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">"/user/.*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>Swagger3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot2.7.X整合logback</title>
    <link href="/c0e1cb6f5e8a/"/>
    <url>/c0e1cb6f5e8a/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这里使用的 <code>SpringBoot 2.7.3</code> 的版本</p></blockquote><h1 id="logback-spring-xml"><a href="#logback-spring-xml" class="headerlink" title="logback-spring.xml"></a><code>logback-spring.xml</code></h1><blockquote><p>增加 <code>logback-spring.xml</code> 在 <code>resources</code> 目录下</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span> <span class="token attr-name">scan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">scanPeriod</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10 seconds<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>contextName</span><span class="token punctuation">></span></span>logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>contextName</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>log.path<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./etimesheet-log<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--控制台日志格式：彩色日志--></span>    <span class="token comment">&lt;!-- magenta:洋红 --></span>    <span class="token comment">&lt;!-- boldMagenta:粗红--></span>    <span class="token comment">&lt;!-- cyan:青色 --></span>    <span class="token comment">&lt;!-- white:白色 --></span>    <span class="token comment">&lt;!-- magenta:洋红 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CONSOLE_LOG_PATTERN<span class="token punctuation">"</span></span>              <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%yellow(%date&#123;yyyy-MM-dd HH:mm:ss&#125;) |%highlight(%-5level) |%blue(%thread) |%blue(%file:%line) |%green(%logger) |%cyan(%msg%n)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--文件日志格式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>FILE_LOG_PATTERN<span class="token punctuation">"</span></span>              <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>%date&#123;yyyy-MM-dd HH:mm:ss&#125; |%-5level |%thread |%file:%line |%logger |%msg%n<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--编码--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ENCODING<span class="token punctuation">"</span></span>              <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--输出到控制台--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CONSOLE<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.filter.ThresholdFilter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志级别--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">></span></span>DEBUG<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志格式--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pattern</span><span class="token punctuation">></span></span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pattern</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志字符集--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">></span></span>$&#123;ENCODING&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--输出到文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO_FILE<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--日志过滤器：此日志文件只记录INFO级别的--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.filter.LevelFilter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">></span></span>INFO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMatch</span><span class="token punctuation">></span></span>ACCEPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMatch</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMismatch</span><span class="token punctuation">></span></span>DENY<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMismatch</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 正在记录的日志文件的路径及文件名 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/log_info.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>$&#123;FILE_LOG_PATTERN&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">></span></span>$&#123;ENCODING&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 每天日志归档路径以及格式 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/info/log-info-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeBasedFileNamingAndTriggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">></span></span>500MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeBasedFileNamingAndTriggeringPolicy</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志文件保留天数--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">></span></span>50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>WARN_FILE<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志过滤器：此日志文件只记录WARN级别的 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.filter.LevelFilter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">></span></span>WARN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMatch</span><span class="token punctuation">></span></span>ACCEPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMatch</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMismatch</span><span class="token punctuation">></span></span>DENY<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMismatch</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 正在记录的日志文件的路径及文件名 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/log_warn.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>$&#123;FILE_LOG_PATTERN&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">></span></span>$&#123;ENCODING&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 此处设置字符集 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/warn/log-warn-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeBasedFileNamingAndTriggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">></span></span>100MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeBasedFileNamingAndTriggeringPolicy</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志文件保留天数--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">></span></span>50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ERROR_FILE<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志过滤器：此日志文件只记录ERROR级别的 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.classic.filter.LevelFilter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">></span></span>ERROR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMatch</span><span class="token punctuation">></span></span>ACCEPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMatch</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMismatch</span><span class="token punctuation">></span></span>DENY<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMismatch</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 正在记录的日志文件的路径及文件名 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/log_error.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>$&#123;FILE_LOG_PATTERN&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">></span></span>$&#123;ENCODING&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 此处设置字符集 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">></span></span>$&#123;log.path&#125;/error/log-error-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>timeBasedFileNamingAndTriggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">></span></span>100MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>timeBasedFileNamingAndTriggeringPolicy</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--日志文件保留天数--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">></span></span>50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--开发环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--可以灵活设置此处，从而控制日志的输出--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CONSOLE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO_FILE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>WARN_FILE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ERROR_FILE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--生产环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pro<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ERROR_FILE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>logback</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ASCII对照表</title>
    <link href="/e2cd03a508f2/"/>
    <url>/e2cd03a508f2/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="left">十进制值</th><th align="left">字符</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=0">0</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=0">NUT</a> (null)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=0">空字符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=1">1</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=1">SOH</a> (start of headline)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=1">标题开始</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=2">2</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=2">STX</a> (start of text)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=2">正文开始</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=3">3</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=3">ETX</a> (end of text)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=3">正文结束</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=4">4</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=4">EOT</a> (end of transmission)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=4">传输结束</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=5">5</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=5">ENQ</a> (enquiry)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=5">请求</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=6">6</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=6">ACK</a> (acknowledge)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=6">收到通知</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=7">7</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=7">BEL</a> (bell)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=7">响铃</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=8">8</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=8">BS</a> (backspace)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=8">退格</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=9">9</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=9">HT</a> (horizontal tab)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=9">水平制表符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=10">10</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=10">LF</a> (NL line feed, new line)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=10">换行键</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=11">11</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=11">VT</a> (vertical tab)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=11">垂直制表符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=12">12</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=12">FF</a> (NP form feed, new page)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=12">换页键</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=13">13</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=13">CR</a> (carriage return)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=13">回车键</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=14">14</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=14">SO</a> (shift out)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=14">不用切换</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=15">15</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=15">SI</a> (shift in)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=15">启用切换</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=16">16</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=16">DLE</a> (data link escape)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=16">数据链路转义</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=17">17</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=17">DC1</a> (device control 1)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=17">设备控制1</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=18">18</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=18">DC2</a> (device control 2)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=18">设备控制2</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=19">19</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=19">DC3</a> (device control 3)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=19">设备控制3</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=20">20</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=20">DC4</a> (device control 4)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=20">设备控制4</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=21">21</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=21">NAK</a> (negative acknowledge)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=21">拒绝接收</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=22">22</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=22">SYN</a> (synchronous idle)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=22">同步空闲</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=23">23</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=23">ETB</a> (end of trans. block)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=23">结束传输块</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=24">24</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=24">CAN</a> (cancel)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=24">取消</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=25">25</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=25">EM</a> (end of medium)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=25">媒介结束</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=26">26</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=26">SUB</a> (substitute)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=26">代替</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=27">27</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=27">ESC</a> (escape)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=27">换码(溢出)</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=28">28</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=28">FS</a> (file separator)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=28">文件分隔符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=29">29</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=29">GS</a> (group separator)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=29">分组符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=30">30</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=30">RS</a> (record separator)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=30">记录分隔符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=31">31</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=31">US</a> (unit separator)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=31">单元分隔符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=32">32</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=32">(space)</a> (space)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=32">空格</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=33">33</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=33">!</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=33">叹号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=34">34</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=34">“</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=34">双引号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=35">35</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=35">#</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=35">井号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=36">36</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=36">$</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=36">美元符号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=37">37</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=37">%</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=37">百分号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=38">38</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=38">&amp;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=38">和号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=39">39</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=39">‘</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=39">闭单引号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=40">40</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=40">(</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=40">开括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=41">41</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=41">)</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=41">闭括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=42">42</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=42">*</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=42">星号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=43">43</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=43">+</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=43">加号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=44">44</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=44">,</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=44">逗号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=45">45</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=45">-</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=45">减号&#x2F;破折号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=46">46</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=46">.</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=46">句号&#x2F;点</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=47">47</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=47">&#x2F;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=47">斜杠</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=48">48</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=48">0</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=48">数字0</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=49">49</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=49">1</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=49">数字1</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=50">50</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=50">2</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=50">数字2</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=51">51</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=51">3</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=51">数字3</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=52">52</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=52">4</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=52">数字4</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=53">53</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=53">5</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=53">数字5</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=54">54</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=54">6</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=54">数字6</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=55">55</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=55">7</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=55">数字7</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=56">56</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=56">8</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=56">数字8</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=57">57</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=57">9</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=57">数字9</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=58">58</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=58">:</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=58">冒号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=59">59</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=59">;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=59">分号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=60">60</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=60">&lt;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=60">小于</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=61">61</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=61">&#x3D;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=61">等号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=62">62</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=62">&gt;</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=62">大于</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=63">63</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=63">?</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=63">问号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=64">64</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=64">@</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=64">电子邮件符号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=65">65</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=65">A</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=65">大写字母A</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=66">66</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=66">B</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=66">大写字母B</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=67">67</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=67">C</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=67">大写字母C</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=68">68</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=68">D</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=68">大写字母D</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=69">69</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=69">E</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=69">大写字母E</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=70">70</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=70">F</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=70">大写字母F</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=71">71</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=71">G</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=71">大写字母G</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=72">72</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=72">H</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=72">大写字母H</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=73">73</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=73">I</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=73">大写字母I</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=74">74</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=74">J</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=74">大写字母J</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=75">75</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=75">K</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=75">大写字母K</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=76">76</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=76">L</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=76">大写字母L</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=77">77</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=77">M</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=77">大写字母M</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=78">78</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=78">N</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=78">大写字母N</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=79">79</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=79">O</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=79">大写字母O</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=80">80</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=80">P</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=80">大写字母P</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=81">81</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=81">Q</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=81">大写字母Q</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=82">82</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=82">R</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=82">大写字母R</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=83">83</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=83">S</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=83">大写字母S</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=84">84</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=84">T</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=84">大写字母T</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=85">85</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=85">U</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=85">大写字母U</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=86">86</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=86">V</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=86">大写字母V</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=87">87</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=87">W</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=87">大写字母W</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=88">88</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=88">X</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=88">大写字母X</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=89">89</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=89">Y</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=89">大写字母Y</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=90">90</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=90">Z</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=90">大写字母Z</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=91">91</a></td><td align="left">[</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=91">开方括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=92">92</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=92">\</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=92">反斜杠</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=93">93</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=93">]</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=93">闭方括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=94">94</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=94">^</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=94">脱字符</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=95">95</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=95">_</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=95">下划线</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=96">96</a></td><td align="left">[&#96;](<a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=96">https://ascii.diqibu.com/?c=96</a>)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=96">开单引号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=97">97</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=97">a</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=97">小写字母a</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=98">98</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=98">b</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=98">小写字母b</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=99">99</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=99">c</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=99">小写字母c</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=100">100</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=100">d</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=100">小写字母d</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=101">101</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=101">e</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=101">小写字母e</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=102">102</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=102">f</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=102">小写字母f</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=103">103</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=103">g</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=103">小写字母g</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=104">104</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=104">h</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=104">小写字母h</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=105">105</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=105">i</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=105">小写字母i</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=106">106</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=106">j</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=106">小写字母j</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=107">107</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=107">k</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=107">小写字母k</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=108">108</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=108">l</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=108">小写字母l</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=109">109</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=109">m</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=109">小写字母m</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=110">110</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=110">n</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=110">小写字母n</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=111">111</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=111">o</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=111">小写字母o</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=112">112</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=112">p</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=112">小写字母p</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=113">113</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=113">q</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=113">小写字母q</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=114">114</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=114">r</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=114">小写字母r</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=115">115</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=115">s</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=115">小写字母s</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=116">116</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=116">t</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=116">小写字母t</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=117">117</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=117">u</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=117">小写字母u</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=118">118</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=118">v</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=118">小写字母v</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=119">119</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=119">w</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=119">小写字母w</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=120">120</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=120">x</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=120">小写字母x</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=121">121</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=121">y</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=121">小写字母y</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=122">122</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=122">z</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=122">小写字母z</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=123">123</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=123">{</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=123">开花括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=124">124</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=124">|</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=124">垂线</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=125">125</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=125">}</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=125">闭花括号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=126">126</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=126">~</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=126">波浪号</a></td></tr><tr><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?a=127">127</a></td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=127">DEL</a> (delete)</td><td align="left"><a target="_blank" rel="noopener" href="https://ascii.diqibu.com/?c=127">删除</a></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ASCII对照表</tag>
      
      <tag>速查笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github速查笔记</title>
    <link href="/3c3471b0e1e0/"/>
    <url>/3c3471b0e1e0/</url>
    
    <content type="html"><![CDATA[<h1 id="Github注册配置"><a href="#Github注册配置" class="headerlink" title="Github注册配置"></a>Github注册配置</h1><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><blockquote><p>按网站操作提示进行，<a target="_blank" rel="noopener" href="https://github.com/signup">https://github.com/signup</a></p></blockquote><h2 id="配置SSH登录"><a href="#配置SSH登录" class="headerlink" title="配置SSH登录"></a>配置SSH登录</h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># yuanqimanong 替换自己的名字</span>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> yuanqimanong<span class="token comment"># 一路回车 记住密钥保存的位置</span><span class="token comment"># C:\Users\Administrator\.ssh</span><span class="token comment"># id_rsa      私钥</span><span class="token comment"># id_rsa.pub  公钥</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="添加公钥到Github"><a href="#添加公钥到Github" class="headerlink" title="添加公钥到Github"></a>添加公钥到Github</h3><blockquote><p>登录Github，在<code>Settings</code>→<code>SSH and GpG keys</code>中添加<code>id_rsa.pub</code>的内容到<code>SSH keys</code>中</p></blockquote><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="Git-Bash设置"><a href="#Git-Bash设置" class="headerlink" title="Git Bash设置"></a>Git Bash设置</h2><p>在<code>%USERPROFILE%</code>下增加<code>.profile</code>文件，写入如下内容</p><p><code>GIT_SSH</code>为本机实际地址，这个代码主要目的是启动GitBash后自启动ssh agent服务</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">SSH_ENV</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/.ssh/environment"</span><span class="token assign-left variable">GIT_SSH</span><span class="token operator">=</span><span class="token string">"D:\Program Files\Git\usr<span class="token entity" title="\b">\b</span>in\ssh.exe"</span><span class="token keyword">function</span> <span class="token function-name function">start_agent</span> <span class="token punctuation">&#123;</span><span class="token builtin class-name">echo</span> <span class="token string">"Initializing new SSH agent..."</span>/usr/bin/ssh-agent <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/^echo/#echo/'</span> <span class="token operator">></span> <span class="token string">"<span class="token variable">$&#123;SSH_ENV&#125;</span>"</span><span class="token builtin class-name">echo</span> succeeded<span class="token function">chmod</span> <span class="token number">600</span> <span class="token string">"<span class="token variable">$&#123;SSH_ENV&#125;</span>"</span><span class="token builtin class-name">.</span> <span class="token string">"<span class="token variable">$&#123;SSH_ENV&#125;</span>"</span> <span class="token operator">></span> /dev/null/usr/bin/ssh-add<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment"># Source SSH settings, if applicable</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$&#123;SSH_ENV&#125;</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><span class="token builtin class-name">.</span> <span class="token string">"<span class="token variable">$&#123;SSH_ENV&#125;</span>"</span> <span class="token operator">></span> /dev/null<span class="token comment">#ps $&#123;SSH_AGENT_PID&#125; doesn't work under cygwin</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token variable">$&#123;SSH_AGENT_PID&#125;</span> <span class="token operator">|</span> <span class="token function">grep</span> ssh-agent$ <span class="token operator">></span> /dev/null <span class="token operator">||</span> <span class="token punctuation">&#123;</span>start_agent<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span>start_agent<span class="token punctuation">;</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="TortoiseGit设置"><a href="#TortoiseGit设置" class="headerlink" title="TortoiseGit设置"></a>TortoiseGit设置</h2><blockquote><p>软件设置 → 网络 →  SSH客户端 →  选定<code>Git\usr\bin\ssh.exe</code>会自动选定</p></blockquote><h2 id="IDEA设置"><a href="#IDEA设置" class="headerlink" title="IDEA设置"></a>IDEA设置</h2><blockquote><ol><li>在设置里搜索 github,GitHub登录,IDEA会自动处理；使用 ssh 克隆 Git 仓库</li><li>Subversion → SSH→ 设置私钥</li></ol></blockquote><h1 id="Github使用"><a href="#Github使用" class="headerlink" title="Github使用"></a>Github使用</h1><h2 id="基本认知"><a href="#基本认知" class="headerlink" title="基本认知"></a>基本认知</h2><blockquote><ul><li><code>github</code>分为3个部分：<code>Remote</code>、<code>Local</code>和<code>Disk</code>。</li><li><code>Remote</code>：为远程仓库，<code>main</code>（主分支）为<code>master</code>。</li><li><code>Local</code>：为本地仓库。</li><li><code>Disk</code>：为本地磁盘。</li></ul></blockquote><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置签名</span><span class="token comment">## 项目级别 保存在 .git/config中</span><span class="token function">git</span> config user.name xxx1<span class="token function">git</span> config user.email xxx1@xx.com<span class="token comment">## 全局用户级别</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name xxx2<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email xxx2@xx.com<span class="token comment"># 初始化</span><span class="token function">git</span> init<span class="token comment"># 添加提交文件</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>changed_files<span class="token operator">></span><span class="token comment"># 添加提交信息</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"msg"</span><span class="token comment"># 查看历史记录</span><span class="token function">git</span> log<span class="token comment"># 检出最后一次提交的文件</span><span class="token function">git</span> checkout HEAD <span class="token operator">&lt;</span>changed_files<span class="token operator">></span><span class="token comment"># 查看config</span><span class="token comment">## 系统级别</span><span class="token function">git</span> config <span class="token parameter variable">--system</span> <span class="token parameter variable">--list</span><span class="token comment">## 全局用户级别</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--list</span><span class="token comment">## 项目级别</span><span class="token function">git</span> config <span class="token parameter variable">--local</span> <span class="token parameter variable">--list</span><span class="token comment"># 设置和取消代理（解决 Failed to connect to github.com port 443:connection timed out）</span><span class="token comment">## 设置代理（端口号自行修改）</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy http://127.0.0.1:7890<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy http://127.0.0.1:7890<span class="token comment">## 取消代理</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.proxy<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>###克隆远程仓库到本地</p><blockquote><p>首次<code>clone</code>，<code>Remote</code>、<code>Local</code> 和 <code>Disk</code> 全都保持一致。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/example/example/git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><blockquote><p>准备修改代码前，要先建立一个新的 <code>feature branch</code> 。目的是保证主分支的代码安全。</p><p><code>Remote</code>：</p><ul><li><code>main(master)</code>：未改变</li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code> ：未改变</li><li><code>new-feature</code> ：未改变</li></ul><p><code>Disk</code>：</p><ul><li>当前为将要修改的 <code>new-feature</code> 分支</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> new-feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h3><blockquote><p>修改代码后，需要查看本次修改。<strong>确认好要修改的文件</strong>。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><blockquote><p>添加本次修改的代码到 <code>暂存区</code>。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>changed_files<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="推送代码到本地仓库"><a href="#推送代码到本地仓库" class="headerlink" title="推送代码到本地仓库"></a>推送代码到本地仓库</h3><blockquote><p>将 <code>暂存区</code> 的代码，提交到 <code>Local</code> 中。</p><p><code>Remote</code>：</p><ul><li><code>main(master)</code>：未改变</li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：未改变</li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：执行提交命令，将 <code>new-commit</code> 提交到 <code>Local</code>。</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="推送代码到远程仓库"><a href="#推送代码到远程仓库" class="headerlink" title="推送代码到远程仓库"></a>推送代码到远程仓库</h3><blockquote><p>将 <code>new-commit</code> 提交到<code>Remote</code>中。</p><p><code>Remote</code>：</p><ul><li><code>main(master)</code>：未改变</li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：未改变</li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：存在 <code>new-commit</code> 。</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin new-feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="若当主分支与其他分支代码冲突时"><a href="#若当主分支与其他分支代码冲突时" class="headerlink" title="若当主分支与其他分支代码冲突时"></a>若当主分支与其他分支代码冲突时</h4><ol><li>发现远程和本地仓库代码存在版本冲突</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>：改变了，存在 <code>other-commit</code></li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：未改变</li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：存在 <code>new-commit</code> 。</li></ul></blockquote><p> <code>other-commit</code> 和 <code>new-commit</code> 存在代码差异。为了保证代码依然有效，需要切换到主分支验证下。</p><ol start="2"><li>切换本地仓库主分支</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>：存在 <code>other-commit</code></li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：未改变</li><li><code>new-feature</code>：存在 <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>main(master)</code> 分支：为 <code>Local</code> 下，未改变的  <code>main(master)</code>。</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ol start="3"><li>同步远程仓库代码</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>： <code>other-commit</code></li><li><code>new-feature</code>： <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：<code>other-commit</code></li><li><code>new-feature</code>： <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>main(master)</code> 分支：为 <code>Local</code> 下，已同步的  <code>main(master)</code>。</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ol start="4"><li>切回 <code>new-feature</code> 分支</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>： <code>other-commit</code></li><li><code>new-feature</code>： <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：<code>other-commit</code></li><li><code>new-feature</code>： <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：<code>new-commit</code></li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout new-feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ol start="5"><li>尝试在 <code>main</code> 分支上 合并代码</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>： <code>other-commit</code></li><li><code>new-feature</code>： <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：<code>other-commit</code></li><li><code>new-feature</code>：<code>other-commit</code> → <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：在<code>other-commit</code> 基础上尝试合并<code>new-commit</code>提交</li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> rebase main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><blockquote><p>如果出现了<code>rebase conflict</code> 就需要人工干预，测试代码是否可以合并。</p><p>成功的话，则会将代码正常合并到  <code>Local</code> 中。</p></blockquote><ol start="6"><li>推送本地的 <code>new-feature  </code>到远程的 <code>new-feature</code>分支中</li></ol><blockquote><p><code>Remote</code>：</p><ul><li><code>main(master)</code>： <code>other-commit</code></li><li><code>new-feature</code>： <code>other-commit</code> → <code>new-commit</code></li></ul><p><code>Local</code>：</p><ul><li><code>main(master)</code>：<code>other-commit</code></li><li><code>new-feature</code>：<code>other-commit</code> → <code>new-commit</code></li></ul><p><code>Disk</code>：</p><ul><li>当前为 <code>new-feature</code> 分支：<code>other-commit</code> → <code>new-commit</code></li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push <span class="token parameter variable">-f</span> origin new-feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ol start="7"><li>New pull request</li></ol><blockquote><p>发起一个<code>pull request</code> 给主分支</p></blockquote><h3 id="远程仓库合并分支"><a href="#远程仓库合并分支" class="headerlink" title="远程仓库合并分支"></a>远程仓库合并分支</h3><blockquote><p><code>Squash and merge</code>：将某个分支上的所有改变合并成一个，并提交到主分支。</p></blockquote><h3 id="删除合并后的分支"><a href="#删除合并后的分支" class="headerlink" title="删除合并后的分支"></a>删除合并后的分支</h3><blockquote><ol><li><p>远程仓库合并主分支完毕后，<code>delete branch</code> 删除其 <code>new-feature</code> 分支。</p></li><li><p>切换 <code>Local</code> 的 <code>main(master)</code>。删除 <code>new-feature</code> 分支</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 切换main分支</span><span class="token function">git</span> checkout main<span class="token comment"># 删除new-feature分支</span><span class="token function">git</span> branch <span class="token parameter variable">-D</span> new-feature<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>同步远端仓库代码</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>远程仓库同步到本地</p></li></ol><hr><p>   <code>Remote</code>：</p><ul><li><code>main(master)</code>： <code>update-commit</code></li></ul><p>   <code>Local</code>：</p><ul><li><code>main(master)</code>：<code>update-commit</code></li></ul><p>   <code>Disk</code>：</p><ul><li>当前为 <code>main(master)</code> 分支：<code>update-commit</code></li></ul></blockquote>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mitmproxy</title>
    <link href="/68d0d2711878/"/>
    <url>/68d0d2711878/</url>
    
    <content type="html"><![CDATA[<h2 id="mitmproxy安装"><a href="#mitmproxy安装" class="headerlink" title="mitmproxy安装"></a>mitmproxy安装</h2><h3 id="Windows安装"><a href="#Windows安装" class="headerlink" title="Windows安装"></a>Windows安装</h3><blockquote><p><a target="_blank" rel="noopener" href="https://mitmproxy.org/">下载安装地址 : https://mitmproxy.org/</a></p></blockquote><h3 id="证书安装"><a href="#证书安装" class="headerlink" title="证书安装"></a>证书安装</h3><blockquote><p>步骤一： 命令行输入 <code>mitmproxy</code> 启动程序。挂上8080的代理后访问 <a target="_blank" rel="noopener" href="http://mitm.it/">http://mitm.it/</a></p><p>步骤二：不设密码，一路安装到 <code>受信任的根证书颁发机构</code> 中</p></blockquote><h2 id="mitmweb使用"><a href="#mitmweb使用" class="headerlink" title="mitmweb使用"></a>mitmweb使用</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mitmweb <span class="token parameter variable">-p</span> <span class="token number">2333</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">anticache</span><span class="token operator">=</span>true  --web-host <span class="token number">192.168</span>.1.XX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="mitmproxy使用"><a href="#mitmproxy使用" class="headerlink" title="mitmproxy使用"></a>mitmproxy使用</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动</span>mitmproxy <span class="token parameter variable">-p</span> <span class="token number">2333</span> <span class="token parameter variable">--set</span> <span class="token assign-left variable">anticache</span><span class="token operator">=</span>true<span class="token comment"># 上下移动选择文件</span><span class="token comment"># 回车是进入某个数据包</span><span class="token comment"># Tab是切换 request 、response 和 detail</span><span class="token comment"># 返回是 q  清屏是 z</span><span class="token comment"># 过滤数据包 按f 在根据需要 输入表达式，更多表达式语法详见 </span><span class="token comment"># https://docs.mitmproxy.org/stable/concepts-filters/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><p><a target="_blank" rel="noopener" href="https://github.com/lixi5338619/weixin-spider">https://github.com/lixi5338619/weixin-spider</a></p><p><a target="_blank" rel="noopener" href="https://blog.51cto.com/lixi/3020482">https://blog.51cto.com/lixi/3020482</a></p><p><a target="_blank" rel="noopener" href="https://docs.mitmproxy.org/stable/concepts-options/">https://docs.mitmproxy.org/stable/concepts-options/</a></p><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/Durant0420/p/14525370.html">https://www.cnblogs.com/Durant0420/p/14525370.html</a></p><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/H4ck3R-XiX/p/12624072.html">https://www.cnblogs.com/H4ck3R-XiX/p/12624072.html</a></p><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/shifengboy/article/details/114067212">https://blog.csdn.net/shifengboy/article/details/114067212</a></p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抓包</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抓包</tag>
      
      <tag>mitmproxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓抓包方案</title>
    <link href="/68c2d9659e91/"/>
    <url>/68c2d9659e91/</url>
    
    <content type="html"><![CDATA[<h1 id="抓包环境搭建"><a href="#抓包环境搭建" class="headerlink" title="抓包环境搭建"></a>抓包环境搭建</h1><blockquote><p>详见 👉 <a href="http://元气码农少女酱.我爱你/?post=49">http://xn--z4q5h38stwcs83anlqrw4b.xn--6qq986b3xl/?post=49 # 抓包环境搭建</a></p></blockquote><h1 id="正向防抓包方案"><a href="#正向防抓包方案" class="headerlink" title="正向防抓包方案"></a>正向防抓包方案</h1><h1 id="对抗方案"><a href="#对抗方案" class="headerlink" title="对抗方案"></a>对抗方案</h1><blockquote><p>APP中常用HTTP请求库 <code>HttpUrlConnection</code>、<code>Volley</code>、<code>OkHttp</code>、<code>Retrofit</code>等，<a href="http://元气码农少女酱.我爱你/?post=13">HTTP协议是TCP协议的应用层服务</a>，所以先分析一下TCP部分的调用链</p></blockquote><h2 id="分析TCP调用流程"><a href="#分析TCP调用流程" class="headerlink" title="分析TCP调用流程"></a>分析TCP调用流程</h2><h3 id="TCP-Java层"><a href="#TCP-Java层" class="headerlink" title="TCP Java层"></a>TCP Java层</h3><ol><li>获取Socket的 <code>InputStream</code>、<code>OutputStream</code>的类</li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 获取Socket的InputStream、OutputStream的类</span><span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Socket</span><span class="token punctuation">(</span><span class="token string">"192.168.1.99"</span><span class="token punctuation">,</span> <span class="token number">5100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"InputStream class:"</span> <span class="token operator">+</span> inputStream<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"OutputStream class:"</span> <span class="token operator">+</span> outputStream<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ol start="2"><li>运行结果为</li></ol><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">InputStream class:class java.net.SocketInputStreamOutputStream class:class java.net.SocketOutputStream<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><ol start="3"><li><p>跟踪代码</p><ul><li><code>SocketInputStream.class</code></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 1.调用 read(byte[] b)</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 2.调用 this.read</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> off<span class="token punctuation">,</span> length<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 3.调用 read(byte[] b, int off, int length, int timeout)</span><span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">,</span> <span class="token keyword">int</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eof<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">isConnectionReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SocketException</span><span class="token punctuation">(</span><span class="token string">"Connection reset"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> off <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&lt;=</span> b<span class="token punctuation">.</span>length <span class="token operator">-</span> off<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FileDescriptor</span> fd <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">acquireFD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label99<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> var7<span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// socketRead</span>                <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">socketRead</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> b<span class="token punctuation">,</span> off<span class="token punctuation">,</span> length<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span> label99<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                var7 <span class="token operator">=</span> n<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ConnectionResetException</span> var11<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">setConnectionReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span> label99<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">releaseFD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> var7<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">isClosedOrPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SocketException</span><span class="token punctuation">(</span><span class="token string">"Socket closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">isConnectionReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SocketException</span><span class="token punctuation">(</span><span class="token string">"Connection reset"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>eof <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ArrayIndexOutOfBoundsException</span><span class="token punctuation">(</span><span class="token string">"length == "</span> <span class="token operator">+</span> length <span class="token operator">+</span> <span class="token string">" off == "</span> <span class="token operator">+</span> off <span class="token operator">+</span> <span class="token string">" buffer length == "</span> <span class="token operator">+</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 4.调用 socketRead(FileDescriptor fd, byte[] b, int off, int len, int timeout)</span><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">socketRead</span><span class="token punctuation">(</span><span class="token class-name">FileDescriptor</span> fd<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">socketRead0</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> b<span class="token punctuation">,</span> off<span class="token punctuation">,</span> len<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// native socketRead0(FileDescriptor var1, byte[] var2, int var3, int var4, int var5)</span><span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">socketRead0</span><span class="token punctuation">(</span><span class="token class-name">FileDescriptor</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var3<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">,</span> <span class="token keyword">int</span> var5<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li><code>SocketOutputStream</code></li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 1.调用 write(byte[] b)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">socketWrite</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 2.调用 socketWrite(byte[] b, int off, int len)</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">socketWrite</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> off <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> len <span class="token operator">&lt;=</span> b<span class="token punctuation">.</span>length <span class="token operator">-</span> off<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FileDescriptor</span> fd <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">acquireFD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// socketWrite0</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">socketWrite0</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> b<span class="token punctuation">,</span> off<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SocketException</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">isClosedOrPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SocketException</span><span class="token punctuation">(</span><span class="token string">"Socket closed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">throw</span> var9<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>impl<span class="token punctuation">.</span><span class="token function">releaseFD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ArrayIndexOutOfBoundsException</span><span class="token punctuation">(</span><span class="token string">"len == "</span> <span class="token operator">+</span> len <span class="token operator">+</span> <span class="token string">" off == "</span> <span class="token operator">+</span> off <span class="token operator">+</span> <span class="token string">" buffer length == "</span> <span class="token operator">+</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// native socketWrite0(FileDescriptor var1, byte[] var2, int var3, int var4)</span><span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">socketWrite0</span><span class="token punctuation">(</span><span class="token class-name">FileDescriptor</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var3<span class="token punctuation">,</span> <span class="token keyword">int</span> var4<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>TCP Java层native代码为</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">SocketInputStream：socketRead0<span class="token punctuation">(</span>FileDescriptor var1, byte<span class="token punctuation">[</span><span class="token punctuation">]</span> var2, int var3, int var4, int var5<span class="token punctuation">)</span>SocketOutputStream：socketWrite0<span class="token punctuation">(</span>FileDescriptor var1, byte<span class="token punctuation">[</span><span class="token punctuation">]</span> var2, int var3, int var4<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ol><h3 id="TCP-Native层"><a href="#TCP-Native层" class="headerlink" title="TCP Native层"></a>TCP Native层</h3><ul><li><code>socketRead0</code> → <code>recvfrom</code></li></ul><blockquote><p>代码地址 <a target="_blank" rel="noopener" href="http://androidxref.com/8.1.0_r33/search?q=&defs=&refs=SocketInputStream_socketRead0&path=&hist=&project=libcore">http://androidxref.com/8.1.0_r33&#x2F;search?q&#x3D;&amp;defs&#x3D;&amp;refs&#x3D;SocketInputStream_socketRead0&amp;path&#x3D;&amp;hist&#x3D;&amp;project&#x3D;libcore</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c">nread <span class="token operator">=</span> <span class="token function">NET_Read</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> bufP<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><blockquote><p>代码地址 <a target="_blank" rel="noopener" href="http://androidxref.com/8.1.0_r33/xref/bionic/libc/bionic/recv.cpp#32">http://androidxref.com/8.1.0_r33&#x2F;xref&#x2F;bionic&#x2F;libc&#x2F;bionic&#x2F;recv.cpp#32</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">ssize_t</span> <span class="token function">recv</span><span class="token punctuation">(</span><span class="token keyword">int</span> socket<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">recvfrom</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> len<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><ul><li><code>socketWrite0</code> → <code>sendto</code></li></ul><blockquote><p>代码地址 <a target="_blank" rel="noopener" href="http://androidxref.com/8.1.0_r33/search?q=&defs=&refs=SocketOutputStream_socketWrite0&path=&hist=&project=libcore">http://androidxref.com/8.1.0_r33&#x2F;search?q&#x3D;&amp;defs&#x3D;&amp;refs&#x3D;SocketOutputStream_socketWrite0&amp;path&#x3D;&amp;hist&#x3D;&amp;project&#x3D;libcore</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 调用 NET_Send</span><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token function">NET_Send</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> bufP <span class="token operator">+</span> loff<span class="token punctuation">,</span> llen<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><blockquote><p>代码地址 <a target="_blank" rel="noopener" href="http://androidxref.com/8.1.0_r33/xref/bionic/libc/bionic/send.cpp#31">http://androidxref.com/8.1.0_r33&#x2F;xref&#x2F;bionic&#x2F;libc&#x2F;bionic&#x2F;send.cpp#31</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">ssize_t</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">int</span> socket<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span> __overloadable <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sendto</span><span class="token punctuation">(</span>socket<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> len<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="分析SSL调用流程"><a href="#分析SSL调用流程" class="headerlink" title="分析SSL调用流程"></a>分析SSL调用流程</h2>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抓包</category>
      
    </categories>
    
    
    <tags>
      
      <tag>抓包</tag>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS选择器</title>
    <link href="/f1368cc224d2/"/>
    <url>/f1368cc224d2/</url>
    
    <content type="html"><![CDATA[<h2 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标签标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文章标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub_title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文章副标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>关键词er<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>摘要内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p_text bg-blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p_text bg-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是第二个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>klematis.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>klematis flower<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>113<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_flwr.gif<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flowers<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>224<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>162<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>landscape.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>landscape<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p_text bg-green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是第三个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p_text bg-grey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是第四个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>copyright<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>版权信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en-us<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hi!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en-gb<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Ello!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><blockquote><ul><li>浏览器的控制台，document.querySelector(“【表达式】”)</li><li>用Python执行测试</li></ul></blockquote><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><blockquote><p>详见 👇</p><ul><li><a target="_blank" rel="noopener" href="https://www.runoob.com/cssref/css-selectors.html">https://www.runoob.com/cssref/css-selectors.html</a></li><li><a target="_blank" rel="noopener" href="https://www.w3school.com.cn/cssref/css_selectors.asp">https://www.w3school.com.cn/cssref/css_selectors.asp</a></li></ul></blockquote><table><thead><tr><th align="left">常用选取器</th><th align="left">样例</th><th align="left">表达式</th></tr></thead><tbody><tr><td align="left"><code>::text</code></td><td align="left">提取选取器中的文本</td><td align="left"><code>.title::text</code></td></tr><tr><td align="left"><code>.class</code></td><td align="left">选取 class 为 title 的节点</td><td align="left"><code>.title</code></td></tr><tr><td align="left"><code>#id</code></td><td align="left">选取 id 为 copyright 的节点</td><td align="left"><code>#copyright</code></td></tr><tr><td align="left"><code>*</code></td><td align="left">选取所有节点</td><td align="left"><code>*</code></td></tr><tr><td align="left"><code>element</code></td><td align="left">选取所有 img 节点</td><td align="left"><code>img</code></td></tr><tr><td align="left"><code>element,element</code></td><td align="left">选取所有 p 节点和 img 节点</td><td align="left"><code>p,img</code></td></tr><tr><td align="left"><code>element element</code></td><td align="left">选取 div 节点内的所有 p 节点</td><td align="left"><code>div p</code></td></tr><tr><td align="left"><code>element&gt;element</code></td><td align="left">选取所有父级是  div 节点的  p  节点</td><td align="left"><code>div&gt;p</code></td></tr><tr><td align="left"><code>element+element</code></td><td align="left">选取所有紧跟在  div  节点之后的第一个 p  节点</td><td align="left"><code>div+p</code></td></tr><tr><td align="left"><code>[attribute]</code></td><td align="left">选取所有带有id属性节点</td><td align="left"><code>[id]</code></td></tr><tr><td align="left"><code>[attribute=value]</code></td><td align="left">选取所有使用class&#x3D;”sub_title”的节点</td><td align="left"><code>[class=&quot;sub_title&quot;]</code></td></tr><tr><td align="left"><code>[attribute~=value]</code></td><td align="left">选取标题属性包含单词”flower”的所有节点</td><td align="left"><code>[title~=flower]</code></td></tr><tr><td align="left">&#96;[attribute</td><td align="left">&#x3D;language]&#96;</td><td align="left">选取 src属性等于 en，或者以 en- 为开头的所有节点</td></tr><tr><td align="left"><code>[attribute^=value]</code></td><td align="left">选取每一个src属性的值以”img_”开头的 img 节点</td><td align="left"><code>img[src^=img_]</code></td></tr><tr><td align="left"><code>[attribute$=value]</code></td><td align="left">选取每一个src属性的值以”.gif”结尾的节点</td><td align="left"><code>[src$=&quot;.gif&quot;]</code></td></tr><tr><td align="left"><code>[attribute*=value]</code></td><td align="left">选取每一个class属性的值包含子字符串”bg-“的 p 节点</td><td align="left"><code>p[class*=&quot;bg-&quot;]</code></td></tr><tr><td align="left"><code>:nth-child(n)</code></td><td align="left">选取每个p节点是其父级的第2个子节点</td><td align="left"><code>p:nth-child(2)</code></td></tr></tbody></table><h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>selector <span class="token keyword">import</span> Selectortext <span class="token operator">=</span> <span class="token triple-quoted-string string">'''&lt;!DOCTYPE html>&lt;html>&lt;head>&lt;meta charset="utf-8"> &lt;title>标签标题&lt;/title> &lt;/head>&lt;body>&lt;h1 class="title">文章标题&lt;/h1>&lt;div>&lt;h2 class="sub_title">文章副标题&lt;/h2>&lt;p class="keywords">关键词er&lt;/p>&lt;/div>&lt;div>&lt;span>&lt;p>摘要内容&lt;/p>&lt;/span>&lt;p class="p_text bg-blue">这是第一个段落。&lt;/p>&lt;p class="p_text bg-black">这是第二个段落。&lt;/p>&lt;img src="klematis.jpg" title="klematis flower" width="150" height="113" />&lt;img src="img_flwr.gif" title="flowers" width="224" height="162" />&lt;img src="landscape.jpg" title="landscape" width="160" height="120" />&lt;p class="p_text bg-green">这是第三个段落。&lt;/p>&lt;p class="p_text bg-grey">这是第四个段落。&lt;/p>&lt;/div>&lt;p id="copyright">版权信息&lt;/p>&lt;p lang="en">Hello!&lt;/p>&lt;p lang="en-us">Hi!&lt;/p>&lt;p lang="en-gb">Ello!&lt;/p>&lt;/body>&lt;/html>'''</span><span class="token comment"># result = Selector(text=text).css('.title::text').getall()</span><span class="token comment"># result = Selector(text=text).css('#copyright::text').getall()</span><span class="token comment"># result = Selector(text=text).css('img').getall()</span><span class="token comment"># result = Selector(text=text).css('p , img').getall()</span><span class="token comment"># result = Selector(text=text).css('div p').getall()</span><span class="token comment"># result = Selector(text=text).css('div > p').getall()</span><span class="token comment"># result = Selector(text=text).css('div + p').getall()</span><span class="token comment"># result = Selector(text=text).css('[class="sub_title"]').getall()</span><span class="token comment"># result = Selector(text=text).css('[title~=flower]').getall()</span><span class="token comment"># result = Selector(text=text).css('[src$=".gif"]').getall()</span><span class="token comment"># result = Selector(text=text).css('p[class*="bg-"]').getall()</span>result <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">'p:nth-child(2)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS抽取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JSONPath选择器</title>
    <link href="/15719ba6dae8/"/>
    <url>/15719ba6dae8/</url>
    
    <content type="html"><![CDATA[<h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://www.json.org/json-zh.html">https://www.json.org/json-zh.html</a></p></blockquote><h2 id="JSONPath"><a href="#JSONPath" class="headerlink" title="JSONPath"></a>JSONPath</h2><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://goessner.net/articles/JsonPath/">https://goessner.net/articles/JsonPath/</a></p></blockquote><h3 id="JavaScript-实现"><a href="#JavaScript-实现" class="headerlink" title="JavaScript 实现"></a>JavaScript 实现</h3><blockquote><p>详见 👇</p><p><a target="_blank" rel="noopener" href="https://www.w3resource.com/JSON/JSONPath-with-JavaScript.php">https://www.w3resource.com/JSON/JSONPath-with-JavaScript.php</a></p><p><a target="_blank" rel="noopener" href="https://www.w3resource.com/JSON/jsonpath.js">https://www.w3resource.com/JSON/jsonpath.js</a></p></blockquote><h3 id="Java-实现"><a href="#Java-实现" class="headerlink" title="Java 实现"></a>Java 实现</h3><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://github.com/json-path/JsonPath">https://github.com/json-path/JsonPath</a></p></blockquote><h3 id="Python-实现"><a href="#Python-实现" class="headerlink" title="Python 实现"></a>Python 实现</h3><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://pypi.org/project/jsonpath/">https://pypi.org/project/jsonpath/</a></p></blockquote><h2 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h2><ul><li><code>$.对象</code> 取一个</li><li><code>$.数组[*]</code> 取一组</li><li><code>$.数组[*].对象</code> 取一组中的某个</li><li><code>$..对象</code> 相对路径查找值</li><li><code>$..数组[?(@.字段)]</code> 取具有某些属性的数组</li></ul><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><blockquote><p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/Zhan-W/p/15650408.html">https://www.cnblogs.com/Zhan-W/p/15650408.html</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JSONPath</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python中常用抽取库</title>
    <link href="/fa4eab074cf0/"/>
    <url>/fa4eab074cf0/</url>
    
    <content type="html"><![CDATA[<h2 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>The Dormouse's story<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>The Dormouse's story [class]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>The Dormouse's story [id]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Once upon a time there were three little sisters; and their names were<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://example.com/elsie<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sister<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Elsie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://example.com/lacie<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sister<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Lacie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> and<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://example.com/tillie<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sister<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tillie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>;and they lived at the bottom of a well.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>story<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Beautiful-Soup-4"><a href="#Beautiful-Soup-4" class="headerlink" title="Beautiful Soup 4"></a>Beautiful Soup 4</h2><blockquote><p>Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4, 移植到BS4。</p><p>官方文档：<a target="_blank" rel="noopener" href="https://beautifulsoup.cn/">https://beautifulsoup.cn/</a></p><p>安装 <code>pip install beautifulsoup4</code></p></blockquote><h3 id="解析器优缺点"><a href="#解析器优缺点" class="headerlink" title="解析器优缺点"></a>解析器优缺点</h3><table><thead><tr><th align="left">解析器</th><th align="left">使用方法</th><th align="left">优势</th><th align="left">劣势</th></tr></thead><tbody><tr><td align="left">Python标准库</td><td align="left"><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td><td align="left">Python的内置标准库执行速度适中文档容错能力强</td><td align="left">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td align="left">lxml HTML 解析器</td><td align="left"><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td><td align="left">速度快文档容错能力强</td><td align="left">需要安装C语言库</td></tr><tr><td align="left">lxml XML 解析器</td><td align="left"><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])</code> <code>BeautifulSoup(markup, &quot;xml&quot;)</code></td><td align="left">速度快唯一支持XML的解析器</td><td align="left">需要安装C语言库</td></tr><tr><td align="left">html5lib</td><td align="left"><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td><td align="left">最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td align="left">速度慢不依赖外部扩展</td></tr></tbody></table><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td><code>soup.prettify()</code></td><td>格式化输出</td></tr><tr><td><code>soup.title.get_text()</code><br/><code>soup.title.string</code></td><td>选取title标签中的内容</td></tr><tr><td><code>soup.find(id=&quot;link2&quot;).get_text()</code></td><td>选取 id&#x3D;link2 的节点中的内容</td></tr><tr><td><code>soup.find(class_=&quot;story&quot;).get_text()</code></td><td>选取 class&#x3D;story 的节点中的内容（按照CSS类名搜索tag的功能非常实用,但标识CSS类名的关键字 <code>class</code> 在Python中是保留字,使用 <code>class</code> 做参数会导致语法错误.从Beautiful Soup的4.1.1版本开始,可以通过 <code>class_</code> 参数搜索有指定CSS类名的tag）</td></tr><tr><td><code>soup.find_all(href=re.compile(&quot;elsie&quot;), class_=&#39;sister&#39;)</code></td><td>选取 class&#x3D;’sister’ 中 href 可以正则匹配到 elsie 的节点</td></tr><tr><td><code>soup.select(&quot;head &gt; title&quot;)[0].get_text()</code></td><td>CSS表达式 选取 title节点中内容</td></tr></tbody></table><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouphtml_doc <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html_doc<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span><span class="token comment"># 定义过滤器</span><span class="token keyword">def</span> <span class="token function">has_class_but_no_id</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token keyword">not</span> tag<span class="token punctuation">.</span>has_attr<span class="token punctuation">(</span><span class="token string">'class'</span><span class="token punctuation">)</span> <span class="token keyword">and</span> tag<span class="token punctuation">.</span>has_attr<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>has_class_but_no_id<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="lxml"><a href="#lxml" class="headerlink" title="lxml"></a>lxml</h2><blockquote><p>官网 <a target="_blank" rel="noopener" href="https://lxml.de/">https://lxml.de/</a></p><p>参考 </p><ul><li><a target="_blank" rel="noopener" href="http://c.biancheng.net/python_spider/lxml.html">http://c.biancheng.net/python_spider&#x2F;lxml.html</a></li><li><a target="_blank" rel="noopener" href="https://www.w3cschool.cn/lxml/_lxml-vmoe3fju.html">https://www.w3cschool.cn/lxml/_lxml-vmoe3fju.html</a></li></ul><p>安装 <code>pip install lxml</code></p><p>引入 <code>from lxml import etree</code></p><p>语法格式 </p><p><code>lxml = etree.HTML(html_doc)</code></p><p><code>lxml.xpath(&#39;【XPath表达式】&#39;)</code> 后接 <code>.text</code> 为取内容 ；<code>.tag</code> 为取标签</p></blockquote><h2 id="Parsel"><a href="#Parsel" class="headerlink" title="Parsel"></a>Parsel</h2><blockquote><p>官网 <a target="_blank" rel="noopener" href="https://parsel.readthedocs.io/en/latest/">https://parsel.readthedocs.io/en/latest/</a></p><p>语法 </p><ul><li><code>.css(&#39;【CSS表达式】&#39;)</code> 和 <code>.xpath(&#39;【XPaht表达式】&#39;)</code> <ul><li>选取一个 <code>.get()</code> 别名 <code>extract_first</code> 和 选取所有 <code>.getall()</code> 别名 <code>extract</code></li></ul></li><li><code>.re_first(&#39;【正则表达式】&#39;)</code> 和 <code>.re_(&#39;【正则表达式】&#39;)</code></li></ul></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> parsel <span class="token keyword">import</span> Selectorhtml_doc <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>parsel  <span class="token operator">=</span> Selector<span class="token punctuation">(</span>html_doc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>parsel<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">'head > title ::text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>parsel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//head/title/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>parsel<span class="token punctuation">.</span>re_first<span class="token punctuation">(</span><span class="token string">r'&lt;title>(.*?)&lt;/title>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Scrapy-Selectors"><a href="#Scrapy-Selectors" class="headerlink" title="Scrapy Selectors"></a>Scrapy Selectors</h2><blockquote><p>官网 <a target="_blank" rel="noopener" href="https://docs.scrapy.org/en/latest/topics/selectors.html">https://docs.scrapy.org/en/latest/topics/selectors.html</a></p><p>Scrapy Selectors 继承自 Parsel，Parsel 继承自 lxml，实际应用推荐使用 Scrapy Selectors</p><p>Scrapy Selectors 的用法与 Parsel 大致相同，<code>.get()</code> 可以指定未提取到的默认值</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>selector <span class="token keyword">import</span> Selectorhtml_doc <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>scrapy_selector <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>html_doc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>scrapy_selector<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string">'head > title ::text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'未提取到'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>scrapy_selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//head/title/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'未提取到'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>scrapy_selector<span class="token punctuation">.</span>re_first<span class="token punctuation">(</span><span class="token string">r'&lt;title>(.*?)&lt;/title>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python抽取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XPath选择器</title>
    <link href="/434b0b17dd4f/"/>
    <url>/434b0b17dd4f/</url>
    
    <content type="html"><![CDATA[<h2 id="测试样例"><a href="#测试样例" class="headerlink" title="测试样例"></a>测试样例</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>http://example.com/<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>测试样例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>images-id<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image-class<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image1.html<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>p-id-1<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>p-class<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>名称: 图片 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image1_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image2_before_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span>图片 2 前面的图   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image2.html<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>id-p-2<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>名称: 图片 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image2_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image2_behind_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span>图片 2 后面的图   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image3<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>p-id-3<span class="token punctuation">'</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>p-class<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>名称: 图片 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image3_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image4<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>名称: 图片 4 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image4_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image5.html<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>名称: 图片 5 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>image5_thumb.jpg<span class="token punctuation">'</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token comment">// 这里是脚本内容</span>   <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">'测试样例'</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="XPath"><a href="#XPath" class="headerlink" title="XPath"></a>XPath</h2><blockquote><p>XPath 的意思是 XML 路径语言（XML Path Language）。它使用的一个非 XML 语法提供一种灵活地定位 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/en-US/docs/Web/XML">XML (en-US)</a> 文档的不同部分的方法。它同时也可以用于检测文档中某个节点是否与某个模式（pattern）匹配。</p><p>XPath 主要被用于 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/XSLT">XSLT</a>，也可用于定位文档元素，像类 XML 语言文档（如 HTML 和 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/XUL">XUL</a> ) 通过 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model">DOM (en-US)</a> 定位元素一样。替代 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/getElementById"><code>document.getElementById</code></a> 方法、 <code>element.childNodes</code> 属性和其他 DOM 核心特性。</p><p>XPath 使用路径标识符通过层级结构来导航 XML 文档。它使用非 XML 语法，以致于它可以被用在 URIs 和 XML 属性值上。</p></blockquote><h3 id="XPath-节点"><a href="#XPath-节点" class="headerlink" title="XPath 节点"></a>XPath 节点</h3><h4 id="基本值"><a href="#基本值" class="headerlink" title="基本值"></a>基本值</h4><p>基本值（或称原子值，Atomic value）是无父或无子的节点。</p><p>样例中，例如 <code>标题</code> 、 <code>p-class</code></p><h4 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h4><blockquote><p>在 XPath 中，有七种类型的节点：元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。</p></blockquote><p>样例中，例如 <code>&lt;html&gt;</code> （文档节点） 、 <code>&lt;h1&gt;标题&lt;/h1&gt;</code>（元素节点）、 <code>class=&#39;p-class&#39;</code> （属性节点）</p><h4 id="节点关系"><a href="#节点关系" class="headerlink" title="节点关系"></a>节点关系</h4><ul><li>父（Parent）：当前节点的上一级节点，每个元素以及属性都有一个父节点</li><li>子（Children）：当前节点的下一级节点，元素节点可有零个、一个或多个子节点</li><li>同胞（Sibling）：当前节点的同级节点，拥有相同的父节点</li><li>先辈（Ancestor）：当前节点的所有父节点，某节点的父、父的父，父的父的父</li><li>后代（Descendant）：当前节点的所有子节点，某个节点的子，子的子以及子的兄弟节点</li></ul><h3 id="XPath-语法"><a href="#XPath-语法" class="headerlink" title="XPath 语法"></a>XPath 语法</h3><h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><table><thead><tr><th>表达式</th><th>描述</th><th>样例</th></tr></thead><tbody><tr><td>root</td><td>选取根节点</td><td><code>html</code></td></tr><tr><td>&#x2F;</td><td>从根节点开始选取子节点（绝对路径的开始）</td><td><code>/html/head/title</code></td></tr><tr><td>&#x2F;&#x2F;</td><td>从任意节点开始取子节点（相对路径）</td><td><code>//title</code></td></tr><tr><td>.</td><td>选取当前的节点</td><td><code>//script/.</code></td></tr><tr><td>..</td><td>选取当前节点的父节点</td><td><code>//script/..</code></td></tr><tr><td>@</td><td>选取属性</td><td><code>//p[@class]</code></td></tr><tr><td>*</td><td>通配符, 表示元素节点</td><td><code>//*[@class]</code><br/><code>//p[@*]</code></td></tr><tr><td>|</td><td>返回节点集合</td><td>&#96;&#x2F;&#x2F;p[@*]</td></tr></tbody></table><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><blockquote><p><a target="_blank" rel="noopener" href="https://www.runoob.com/xpath/xpath-operators.html">https://www.runoob.com/xpath/xpath-operators.html</a></p></blockquote><h3 id="XPath-函数"><a href="#XPath-函数" class="headerlink" title="XPath 函数"></a>XPath 函数</h3><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/en-US/docs/Web/XPath/Functions">https://developer.mozilla.org/en-US/docs/Web/XPath/Functions</a></p></blockquote><h4 id="常用-1"><a href="#常用-1" class="headerlink" title="常用"></a>常用</h4><table><thead><tr><th>函数名</th><th>描述</th><th>样例</th></tr></thead><tbody><tr><td><code>text()</code></td><td>节点的文本</td><td><code>//p[@id=&#39;id-p-2&#39;]/text()</code></td></tr><tr><td><code>string()</code></td><td>节点内，所有节点文本内容</td><td><code>string(//div[@class=&quot;image-class&quot;])</code></td></tr><tr><td><code>contains()</code></td><td>包含某个字符串的节点</td><td><code>//p[contains(@class,&quot;p-class&quot;)]</code></td></tr><tr><td><code>not()</code> <code>and()</code></td><td>选取 img 但src中不包括 <em>before</em> 和 <em>behind</em></td><td><code>//img[@src and not(contains(@src,&quot;_before_&quot;)) and not(contains(@src,&quot;_behind_&quot;))]</code></td></tr><tr><td><code>starts-with()</code></td><td>选取id属性开头是 <em>id-p</em> 的p节点</td><td><code>//p[starts-with(@id,&quot;id-p&quot;)]</code></td></tr><tr><td><code>ends-with()</code></td><td>选取结尾为html后缀的a节点</td><td><code>//a[ends-with(@href,&quot;.html&quot;)]</code> xpath2.0支持，1.0不支持可用下面的<br/><code>//a[substring(@href, string-length(@href) - string-length(&#39;.html&#39;) +1) = &#39;.html&#39;]</code></td></tr><tr><td><code>position()</code></td><td>选取第3个位置之后的a节点</td><td><code>//a[position() &gt; 3]</code></td></tr><tr><td>正则表达式（python）</td><td>选取样例中3个p节点中的内容</td><td><code>//p[re:match(@id,&quot;[pid-]+\d&quot;)]/text()</code></td></tr></tbody></table><h3 id="XPath-轴"><a href="#XPath-轴" class="headerlink" title="XPath 轴"></a>XPath 轴</h3><blockquote><p>详见 👉 <a target="_blank" rel="noopener" href="https://developer.mozilla.org/en-US/docs/Web/XPath/Axes">https://developer.mozilla.org/en-US/docs/Web/XPath/Axes</a></p></blockquote><table><thead><tr><th align="left">轴名称</th><th align="left">结果</th><th>样例</th></tr></thead><tbody><tr><td align="left">ancestor</td><td align="left">选取当前节点的所有先辈（父、祖父等）</td><td></td></tr><tr><td align="left">ancestor-or-self</td><td align="left">选取当前节点的所有先辈（父、祖父等）以及当前节点本身</td><td></td></tr><tr><td align="left">attribute</td><td align="left">选取当前节点的所有属性</td><td></td></tr><tr><td align="left">self</td><td align="left">选取当前节点</td><td></td></tr><tr><td align="left">child</td><td align="left">选取当前节点的所有子元素</td><td><code>//a/child::p</code></td></tr><tr><td align="left">parent</td><td align="left">选取当前节点的父节点</td><td></td></tr><tr><td align="left">descendant</td><td align="left">选取当前节点的所有后代元素（子、孙等）</td><td></td></tr><tr><td align="left">descendant-or-self</td><td align="left">选取当前节点的所有后代元素（子、孙等）以及当前节点本身</td><td></td></tr><tr><td align="left">following</td><td align="left">选取文档中当前节点的结束标签之后的所有节点</td><td><code>//a[@href=&quot;image2.html&quot;]/following::text()</code></td></tr><tr><td align="left">following-sibling</td><td align="left">选取当前节点之后的所有兄弟节</td><td><code>//a[@href=&quot;image3&quot;]/following-sibling::a[1]</code></td></tr><tr><td align="left">namespace</td><td align="left">选取当前节点的所有命名空间节点</td><td></td></tr><tr><td align="left">preceding</td><td align="left">选取文档中当前节点的开始标签之前的所有节点</td><td><code>//a[@href=&quot;image2.html&quot;]/preceding::text()</code></td></tr><tr><td align="left">preceding-sibling</td><td align="left">选取当前节点之前的所有同级节点</td><td><code>//a[@href=&quot;image3&quot;]/preceding-sibling::a[1]</code></td></tr></tbody></table><h2 id="XPath-测试"><a href="#XPath-测试" class="headerlink" title="XPath 测试"></a>XPath 测试</h2><h3 id="非插件"><a href="#非插件" class="headerlink" title="非插件"></a>非插件</h3><blockquote><ul><li>浏览器的审查元素中，<code>Ctrl+F</code></li><li>浏览器控制台，<code>$x(【表达式】)</code></li></ul></blockquote><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><p><a target="_blank" rel="noopener" href="https://selectorshub.com/selectorshub/">SelectorsHub</a></p></blockquote><h2 id="XPath练习"><a href="#XPath练习" class="headerlink" title="XPath练习"></a>XPath练习</h2><blockquote><p><a target="_blank" rel="noopener" href="https://selectorshub.com/xpath-practice-page/">https://selectorshub.com/xpath-practice-page/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XPath</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式 - 匹配原理及ReDoS攻击</title>
    <link href="/cbf0d06a2c4f/"/>
    <url>/cbf0d06a2c4f/</url>
    
    <content type="html"><![CDATA[<h2 id="有穷自动机"><a href="#有穷自动机" class="headerlink" title="有穷自动机"></a>有穷自动机</h2><p>在计算机科学理论中，采用 <strong>计算模型</strong>的理想计算机 来建立数学理论，其中 <strong>有穷自动机</strong> 就是其中之一，除此之外还有，图灵机、递归函数、λ演算、马尔科夫算法等。</p><blockquote><p><strong>有穷自动机</strong>（Finite Automata，也叫<strong>有穷状态自动机</strong>，finite-state machine）。</p></blockquote><h3 id="理解有穷自动机"><a href="#理解有穷自动机" class="headerlink" title="理解有穷自动机"></a>理解有穷自动机</h3><p>例如：自动售卖机就是一种有穷自动机。假设自动售卖机只接收面额为5元的纸币。当你塞入一张5元购买3元的饮料时，机器会给你饮料及找回的2元零钱。</p><p><strong>有穷自动机必须满足4个条件</strong>：</p><ol><li>具有有限多个状态。（根据找零余额的不同，可能有的状态为6个：5元、4元、3元、2元、1元、0元）</li><li>有一套状态转移函数。（比如余额还有3元，你买了一瓶2元的饮料，则转移到状态“1元”，如果你选择买4元的饮料，则报告“余额不足”，状态并不变化）</li><li>有一个开始状态。（余额5元）</li><li>有一个或多个最终状态。（余额0元）</li></ol><p><strong>自动售货机并不关心买了什么商品，也不关心选择商品的顺序，无论做什么，它总处在这6个状态之一，只需要根据 <em>状态转移函数</em> 在其中转移即可。</strong></p><h3 id="典型应用"><a href="#典型应用" class="headerlink" title="典型应用"></a>典型应用</h3><ul><li><p>Regular Expression 正则表达式</p></li><li><p>Lexical Analyzing 词法分析</p></li><li><p>Pattern Matching 模式匹配</p><ul><li><p>精确匹配，前缀匹配</p></li><li><p>多模式匹配（AC自动机）</p></li></ul></li><li><p>Dictionary Compressing 词表压缩</p><ul><li>自动机最小化，字典序计算</li></ul></li></ul><p><a href="#%E9%99%84%E5%BD%95">更深原理，详见文末附录</a></p><h2 id="正则引擎的分类"><a href="#正则引擎的分类" class="headerlink" title="正则引擎的分类"></a>正则引擎的分类</h2><blockquote><p>正则表达式所使用的理论模型就是有穷自动机。</p><p>正则引擎（Regex Engine）主要分为两大类：<code>DFA</code>（Deterministic Finite Automaton，确定有穷自动机）和 <code>NFA</code>（Nondeterministic Finite Automaton，非确定有穷自动机）</p><p>NFA 有 <strong>传统型NFA</strong>（Traditional NFA）和 <strong>POSIX NFA</strong>两种。两者的主要区别在于，如果多选分支中的多个分支都能匹配，传统型的NFA优先选择左侧的分支，而POSIX NFA一定要选择最长的分支。如匹配字符串 <code>Tomcat</code> ，若正则为 <code>(Tom|Tomcat)</code> ，传统型NFA结果为 <code>Tom</code> ，POSIX NFA结果为 <code>Tomcat</code> ；若正则为 <code>(Tomcat|Tom)</code> ，传统型NFA结果为 <code>Tomcat</code> ，POSIX NFA结果为 <code>Tomcat</code>。</p></blockquote><h3 id="常用程序所使用的正则引擎"><a href="#常用程序所使用的正则引擎" class="headerlink" title="常用程序所使用的正则引擎"></a>常用程序所使用的正则引擎</h3><table><thead><tr><th>引擎类型</th><th>程序</th></tr></thead><tbody><tr><td>DFA</td><td>awk(大多数版本)、egrep(大多数版本)、MySQL</td></tr><tr><td>传统型NFA</td><td>grep(大多数版本)、Perl、.NET、Java、JavaScript、PHP、Python、Ruby、vi</td></tr></tbody></table><h3 id="判断-传统型NFA-还是-POSIX-NFA"><a href="#判断-传统型NFA-还是-POSIX-NFA" class="headerlink" title="判断 传统型NFA 还是 POSIX NFA"></a>判断 传统型NFA 还是 POSIX NFA</h3><blockquote><p>匹配字符串 <code>Tomcat</code> ，若正则为 <code>(Tom|Tomcat)</code> ，传统型NFA结果为 <code>Tom</code> ，POSIX NFA结果为 <code>Tomcat</code> ；若正则为 <code>(Tomcat|Tom)</code> ，传统型NFA结果为 <code>Tomcat</code> ，POSIX NFA结果为 <code>Tomcat</code>。</p></blockquote><h3 id="判断-DFA-还是-POSIX-NFA"><a href="#判断-DFA-还是-POSIX-NFA" class="headerlink" title="判断 DFA 还是 POSIX NFA"></a>判断 DFA 还是 POSIX NFA</h3><blockquote><p><strong>DFA不支持捕获型括号（capturing parentheses）和 回溯（backreferences）。</strong></p><p><strong>不过，也存在同时使用两种引擎的混合系统，如果没用使用捕获型括号，就会使用DFA。</strong></p><p>用正则 <code>^(a+)+$</code> ，测试文本 <code>aaaaaaaaaaaaaaaaaaaaax</code>：</p><ul><li>如果执行时间很短，为DFA</li><li>如果执行时间很长，为NFA（再用上一项判断方法，进一步判断是传统型NFA 还是 POSIX NFA）</li><li>如果堆栈溢出（stack overflow）或超时退出，为NFA。</li></ul></blockquote><h3 id="DFA-和-NFA-比较"><a href="#DFA-和-NFA-比较" class="headerlink" title="DFA 和 NFA 比较"></a>DFA 和 NFA 比较</h3><blockquote><ul><li>文本主导的DFA引擎 比 表达式主导的NFA引擎 要快。因为DFA引擎是 <strong>确定型的</strong>（deterministic），目标文本中的每个字符仅检查一遍。</li><li>DFA不需要回溯，即不需要保存状态。</li><li>在构建复杂的正则（多选分支）时，DFA需要更多的时间和内存。因为开始尝试匹配的时候，它已经内建了一张路线图（map），字符串中每个字符都会按照这张路线图来匹配。</li></ul></blockquote><h2 id="正则的匹配过程"><a href="#正则的匹配过程" class="headerlink" title="正则的匹配过程"></a>正则的匹配过程</h2><h3 id="DFA引擎"><a href="#DFA引擎" class="headerlink" title="DFA引擎"></a>DFA引擎</h3><blockquote><p>用正则 <code>a(d|b)c</code> 匹配文本 <code>abc</code> 的匹配过程</p></blockquote><table><thead><tr><th>步骤</th><th>字符串</th><th>正则</th></tr></thead><tbody><tr><td>1.编译正则，准备开始匹配</td><td>abc</td><td>a(d|b)c</td></tr><tr><td>2.匹配 <code>a</code>，匹配成功</td><td><span style='color:red'>a</span>bc</td><td><span style='color:red'>a</span>(d|b)c</td></tr><tr><td>3.下一个字符，<code>b</code> 匹配成功</td><td>a<span style='color:red'>b</span>c</td><td>a(<span style='color:red'>d</span>|<span style='color:red'>b</span>)c</td></tr><tr><td>4.下一个字符，<code>c</code> 匹配成功</td><td>ab<span style='color:red'>c</span></td><td>a(d|b)<span style='color:red'>c</span></td></tr><tr><td>5.匹配结束，结果为 <code>abc</code></td><td><span style='color:red'>abc</span></td><td><span style='color:red'>a</span>(d|<span style='color:red'>b</span>)<span style='color:red'>c</span></td></tr></tbody></table><blockquote><p>DFA引擎的一些特点：</p><ol><li><strong>文本主导</strong>：按照文本的顺序执行，这也就能说明为什么DFA引擎是确定型(deterministic)了，稳定！</li><li><strong>记录当前有效的所有可能</strong>：我们看到当执行到 <code>(d|b)</code> 时，同时比较表达式中的 <code>d</code> 和 <code>b</code>，所以会需要更多的内存。</li><li><strong>每个字符只检查一次</strong>：这提高了执行效率，而且速度与正则表达式无关。</li><li><strong>不能使用反向引用等功能</strong>：因为每个字符只检查一次，文本零宽度（位置）只记录当前比较值，所以不能使用反向引用、环视等一些功能！</li></ol></blockquote><h3 id="NFA引擎"><a href="#NFA引擎" class="headerlink" title="NFA引擎"></a>NFA引擎</h3><blockquote><p> 用正则 <code>a(d|b)c</code> 匹配文本 <code>abc</code> 的匹配过程</p></blockquote><table><thead><tr><th>步骤</th><th>字符串</th><th>正则</th></tr></thead><tbody><tr><td>1.编译正则，准备开始匹配</td><td>abc</td><td>a(d|b)c</td></tr><tr><td>2.匹配 <code>a</code>，匹配成功</td><td><span style='color:red'>a</span>bc</td><td><span style='color:red'>a</span>(d|b)c</td></tr><tr><td>3.从正则分支中，选择左边的匹配</td><td><span style='color:red'>a</span>bc</td><td>a(<span style='color:red'>d</span>|b)c</td></tr><tr><td>4.记录当前位置（备用状态，saved state）</td><td>a<span style='color:red'>_</span>bc</td><td>a(<span style='color:red'>d</span>|b)c</td></tr><tr><td>5. <code>d</code> 匹配不成功</td><td>a_<span style='color:red'>b</span>_c</td><td>a(<span style='color:red'>d</span>|b)c</td></tr><tr><td>6.换另外一个分支匹配，位置回退</td><td>a<span style='color:red'>_</span>bc</td><td>a(d|<span style='color:red'>b</span>)c</td></tr><tr><td>7.重新传动，<code>b</code> 匹配成功</td><td>a_<span style='color:red'>b</span>_c</td><td>a(d|<span style='color:red'>b</span>)c</td></tr><tr><td>8.下一个字符，<code>c</code> 匹配成功</td><td>ab<span style='color:red'>c</span></td><td>a(d|b)<span style='color:red'>c</span></td></tr><tr><td>9.匹配结束，结果为 <code>abc</code></td><td><span style='color:red'>abc</span></td><td><span style='color:red'>a</span>(d|<span style='color:red'>b</span>)<span style='color:red'>c</span></td></tr></tbody></table><blockquote><p>NFA引擎的一些特点：</p><ol><li><strong>文表达式主导</strong>：按照表达式的一部分执行，如果不匹配换其他部分继续匹配，直到表达式匹配完成。</li><li><strong>会记录某个位置</strong>：我们看到当执行到 <code>(d|b)</code> 时，NFA引擎会记录字符的位置（零宽度），然后选择其中一个先匹配。</li><li><strong>单个字符可能检查多次</strong>：我们看到当执行到 <code>(d|b)</code> 时，比较<code>d</code>后发现不匹配，于是NFA引擎换表达式的另一个分支 <code>b</code>，同时文本位置<strong>回退</strong>，重新匹配字符’b’。这也是NFA引擎是非确定型的原因，同时带来另一个问题效率可能没有DFA引擎高。</li><li><strong>可实现反向引用等功能</strong>：因为具有<strong>回退</strong>这一步，所以可以很容易的实现反向引用、环视等一些功能！</li></ol></blockquote><p>注意：<a href="#%E5%B8%B8%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E5%BC%95%E6%93%8E">**绝大多数编程语言都选择 NFA (非确定型有穷自动机) 作为引擎 **</a></p><h2 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h2><p>当正则匹配不成功之后，文本的位置发生回退，选择另外一个分支匹配的这个回退操作，叫做 <strong>回溯</strong> 。</p><p><strong>回溯的原理</strong> 类似走迷宫。当遇到死胡同的时候需要返回原来的位置后，再进入新的道路。</p><p><img src="/cbf0d06a2c4f/image-20220604103630069.png" alt="image-20220604103630069"></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><blockquote><ol><li>正则 <code>&quot;.*&quot;</code> 针对 <code>&quot;quoted string&quot;</code> 的匹配过程</li></ol></blockquote><p><img src="/cbf0d06a2c4f/image-20220604104043444.png" alt="image-20220604104043444"></p><blockquote><ol start="2"><li>正则 <code>&quot;.*&quot;</code> 针对 <code>&quot;quoted&quot; string</code> 的匹配过程</li></ol></blockquote><p><img src="/cbf0d06a2c4f/image-20220604104125458.png" alt="image-20220604104125458"></p><p>例子1中，<code>.*</code> 匹配了 <code>quoted string&quot;</code> 后，因为要保证正则中最后一个<code>&quot;</code> 的匹配，不得不回溯一次；</p><p>例子2中的回溯成本要大于例子1，避免这类问题，最好的办法是 <strong>准确的表达意图</strong>。</p><p>优化例子2（可以访问 <a target="_blank" rel="noopener" href="https://regex101.com/">regex101</a> 进行debug观察执行过程）：</p><ul><li>规定双引号字符串中不能出现双引号字符，<code>&quot;[^&quot;]*&quot;</code></li><li>换用忽略量词，<code>&quot;.*?&quot;</code></li><li>除非确实必要，尽量不使用 <code>.*</code></li><li>绝对避免出现 <code>(……*)*</code> 结构的正则。这个时候的回溯会呈指数级增长！!</li></ul><blockquote><p>在实际应用中，除了注意自己写的正则，还需要防范来自外界的恶意程序，它们会造成大量回溯，讲CPU资源消耗殆尽。</p><p>这种攻击叫做，<strong>正则表达式拒绝服务攻击</strong>（Regular Expression Denial of Service）</p></blockquote><h2 id="ReDoS攻击"><a href="#ReDoS攻击" class="headerlink" title="ReDoS攻击"></a>ReDoS攻击</h2><h3 id="计算（回溯）"><a href="#计算（回溯）" class="headerlink" title="计算（回溯）"></a>计算（回溯）</h3><p>计算机在处理正则表达式的时候可以说是非常愚蠢，虽然看上去它们有很强的计算能力。当你需要用 <code>x*y</code> 表达式对字符串 <code>xxxxxxxxxxxxxx</code> 进行匹配时，任何人都可以迅速告诉你无匹配结果，因为这个字符串不包含字符y。但是计算机的正则表达式引擎并不知道！它将执行以下操作</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">xxxxxxxxxxxxxx # 不匹配xxxxxxxxxxxxxx # 回溯xxxxxxxxxxxxx  # 不匹配xxxxxxxxxxxxx  # 回溯xxxxxxxxxxxx   # 不匹配xxxxxxxxxxxx   # 回溯xxxxxxxxxxx    # 不匹配xxxxxxxxxxx    # 回溯>>很多很多步骤 xx             # 不匹配x              # 回溯x              # 不匹配               # 无匹配结果你不会以为结束了吧？这只是第一步！现在，正则表达式引擎将从第二个x开始匹配，然后是第三个，然后是第四个，依此类推到第14个x。最终总步骤数为256。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>它总共需要256步才能得出无匹配结果这一结论。计算机在这方面真的很蠢。</p><p>同样，如果你使用非贪婪匹配，<code>x*?y</code> 表达式会从一个字母开始匹配，直到尝试过所有的可能，这和贪婪匹配一样愚蠢。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>正如之前所见，使用正则表达式进行匹配搜索可能需要计算执行大量计算步骤，但一般来说这并不是问题，因为计算机速度很快，并且可以在眨眼间完成数千个步骤。</p><p>但是，计算机也是有极限的，我们能否造出一个字符串让计算机长时间的超负荷运转？</p><h4 id="重复运算符嵌套"><a href="#重复运算符嵌套" class="headerlink" title="重复运算符嵌套"></a>重复运算符嵌套</h4><p>如果你看到一个重复运算符嵌套于另一个重复运算符，就可能存在问题。</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">表达式：  xxxxxxxxxx 17945(x+)*yMotive: 会匹配任意数量的x加上一个y匹配字符串: xxxxxxxxxx(10 chars)计算步骤数: 17945<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>此时计算步骤数并不算多，但是，这个增长趋势是很惊人的。</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">字符串                  X的个数                步数z                      0                      3 xz                     1                      6 xxz                    2                      19 xxxz                   3                      49 xxxxz                  4                      122 xxxxxz                 5                      292 xxxxxxz                6                      687 xxxxxxxz               7                      1585 xxxxxxxxz              8                      3604 xxxxxxxxxz             9                      8086 xxxxxxxxxxz            10                     17945 xxxxxxxxxxxz           11                     39451 xxxxxxxxxxxxz          12                     86046 xxxxxxxxxxxxxz         13                     186400 xxxxxxxxxxxxxxz        14                     401443 xxxxxxxxxxxxxxxz       15                     860197xxxxxxxxxxxxxxxxz      16                     1835048 xxxxxxxxxxxxxxxxxz     17                     3899434 xxxxxxxxxxxxxxxxxxz    18                     8257581 xxxxxxxxxxxxxxxxxxxz   19                     17432623 xxxxxxxxxxxxxxxxxxxxz  20                     36700210 xxxxxxxxxxxxxxxxxxxxxz 21                     77070388<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>如上所见，计算步骤数随着输入字符串中X的数量呈指数增长。</p><p>我不是很擅长数学，但如果输入40个x，貌似需要的计算步骤数是：</p><p>计算步骤数 &#x3D; 98516241848729725</p><p>如果计算机可以在1秒内完成100万个计算步骤，则需要3123年才能完成所有计算。</p><p>以上我们所展示的情况看起来很是糟糕，但是还存在其他糟糕的情况。</p><h4 id="多个重复运算符1"><a href="#多个重复运算符1" class="headerlink" title="多个重复运算符1"></a>多个重复运算符1</h4><p>如果两个重复运算符相邻，那么也有可能很脆弱。</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">表达式：  .*\d+\.jpgMotive: 会匹配任意字符加上数字加上.jpg匹配字符串: 1111111111111111111111111 (25 chars)计算步骤数: 9187<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>它没有前一个那么严重，但如果程序没有控制输入的长度，它也足够致命。</p><h4 id="多个重复运算符2"><a href="#多个重复运算符2" class="headerlink" title="多个重复运算符2"></a>多个重复运算符2</h4><p>如果两个重复运算符较为相近，也有可能受到攻击。</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">表达式：  .*\d+.*aMotive: 会匹配任意字符串加上数字加上任意字符串加上a字符匹配字符串: 1111111111111111111111111 (25 chars)计算步骤数: 77600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="多个重复运算符3"><a href="#多个重复运算符3" class="headerlink" title="多个重复运算符3"></a>多个重复运算符3</h4><p><code>|</code>符号加上<code>[]</code>符号再配上<code>+</code>也可能受到攻击。</p><figure><div class="code-wrapper"><pre class="line-numbers language-text" data-language="text"><code class="language-text">表达式：  (\d+|[1A])+zMotive: 会匹配任意数字或任意（1或A）字符串加上字符z匹配字符串: 111111111 (10 chars)计算步骤数: 46342<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="ReDoS检测"><a href="#ReDoS检测" class="headerlink" title="ReDoS检测"></a>ReDoS检测</h3><ul><li>RegexStaticAnalysis工具，项目地址：<a target="_blank" rel="noopener" href="https://github.com/NicolaasWeideman/RegexStaticAnalysis">https://github.com/NicolaasWeideman/RegexStaticAnalysis</a></li><li>RegexFuzzer（微软），SDL Regex Fuzzer <a target="_blank" rel="noopener" href="https://download.cnet.com/SDL-Regex-Fuzzer/3000-2383_4-75321803.html">https://download.cnet.com/SDL-Regex-Fuzzer/3000-2383_4-75321803.html</a></li><li>正则表达式在线测试网站，网址：<a target="_blank" rel="noopener" href="https://regex101.com/">https://regex101.com/</a></li></ul><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="有穷自动机-1"><a href="#有穷自动机-1" class="headerlink" title="有穷自动机"></a>有穷自动机</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>有穷自动机有一组状态及其控制，响应外部的“输入”，“控制”从状态移动到状态。各类有穷自动机之间的关键区别之一，在于控制究竟是“确定的”还是“非确定的”，前者意味着在任何时候自动机不能处在一种以上的状态中，后者意味着自动机能同时储在几种状态中。</p><h4 id="确定型有穷自动机（DFA）"><a href="#确定型有穷自动机（DFA）" class="headerlink" title="确定型有穷自动机（DFA）"></a>确定型有穷自动机（DFA）</h4><p><img src="/cbf0d06a2c4f/1670490-20190515094607338-1562574937.png" alt="图"></p><p>通常同一个五元组来讨论DFA:</p><p>　　　　　　A&#x3D;(Q,Σ,δ,q0,F)</p><p>其中A表示DFA的名称，Q是状态集合，Σ是输入符号的集合，δ是转移函数，q0是初始状态，F是接收状态的集合。</p><p>例：</p><p> <img src="/cbf0d06a2c4f/1670490-20190510181344797-310601861.png" alt="图"></p><p> 其中同心圆表示的是终止状态</p><p>确定的有限自动机的转换表表示法：</p><p> <img src="/cbf0d06a2c4f/1670490-20190510181325625-1549130236.png" alt="图"></p><p> 其中“→”符号标记的是起始状态，“*”标记的是终止状态。</p><h4 id="DFA的扩展转移函数"><a href="#DFA的扩展转移函数" class="headerlink" title="DFA的扩展转移函数"></a>DFA的扩展转移函数</h4><p><img src="/cbf0d06a2c4f/1670490-20190529093739932-1624745765.png" alt="图"></p><h4 id="DFA接受的语言"><a href="#DFA接受的语言" class="headerlink" title="DFA接受的语言"></a>DFA接受的语言</h4><p><img src="/cbf0d06a2c4f/1670490-20190529092412661-1752197506.png" alt="图"></p><p><em>需要注意的是</em>，有限状态自动机每种状态下接受的输入应该考虑到每一种可能的符号，即使实际的语言并不会在某种状态下产生某个符号，也应该设计一个死锁来接受该种符号。</p><p>下例中，状态D就是一种死锁状态：</p><p> <img src="/cbf0d06a2c4f/1670490-20190510181220818-919398471.png" alt="图"></p><p><strong>设计能接受某种语言的自动机时，第一步应该考虑的直接从起始状态进入终止状态的情况，然后依次考虑每种状态能进入终止状态的情况。</strong></p><p><strong>不确定的有限状态自动机（NFA）</strong></p><p><img src="/cbf0d06a2c4f/1670490-20190529093246575-1927274303.png" alt="图"></p><p>这里的2Q表示Q的幂集</p><p> 例如：</p><p><img src="/cbf0d06a2c4f/1670490-20190514125536085-1719134270.png" alt="图"></p><p>也就是说，不确定有限状态自动机中的一个状态接收同一个输入可能会跳转到不同的状态，并且支持跳转空状态。</p><p><strong>NFA的扩展转移函数</strong></p><p><img src="/cbf0d06a2c4f/1670490-20190603091119962-624667570.png" alt="图"></p><p>可以发现，DFA的扩展转移函数和NFA的扩展转移函数的区别在于：DFA的扩展转移函数的右边是一个确定的状态，而NFA的扩展转移函数的右边是一个状态的集合，而这个集合种可以有多个状态也可以是一个空集。</p><h4 id="NFA接受的语言"><a href="#NFA接受的语言" class="headerlink" title="NFA接受的语言"></a>NFA接受的语言</h4><p><img src="/cbf0d06a2c4f/1670490-20190603092008678-1772470386.png" alt="图"></p><p>例如：</p><p><img src="/cbf0d06a2c4f/1670490-20190514134716378-878728047.png" alt="图"></p><h4 id="通过子集构造将NFA转化成DFA"><a href="#通过子集构造将NFA转化成DFA" class="headerlink" title="通过子集构造将NFA转化成DFA"></a>通过子集构造将NFA转化成DFA</h4><p>当将NFA转化成DFA的时候，DFA的状态转移函数的右边是一个集合，不过这依然是一个确定的状态，它是这样的一个状态：由NFA的状态集合而构成的一个确定的状态。换句话说，DFA的状态集合是NFA的状态集合的子集的集合。 </p><p>下图是一个NFA的状态迁移图：</p><p><img src="/cbf0d06a2c4f/1670490-20190609104718909-1173649437.png" alt="图"></p><p><strong>子集构造</strong>：</p><p><img src="/cbf0d06a2c4f/1670490-20190609111124649-420399014.png" alt="图"></p><p>然后根据上述的子集构造方法构造NFA的完整子集构造。因为NFA有3种状态{q0, q1, q2}，所以完整的子集构造产生一个带有23&#x3D;8种状态的DFA，对应于这三种状态的所有子集合。下图是这8中状态的状态转移表。</p><p><img src="/cbf0d06a2c4f/1670490-20190609111556836-868290685.png" alt="图"></p><p>显然，对于上面这8种状态，从状态{q0}开始，只能到达{q0}、{q0, q1}、和{q0, q2}。其余5种状态都是从初始状态不可达的，也都可以不出现在表中。</p><p>进行了子集构造后，去除多余的状态即可得到这样的一个DFA，它与上面的NFA等价：</p><p><img src="/cbf0d06a2c4f/1670490-20190609104814110-597674008.png" alt="图"></p><h4 id="带空迁移的有限自动机（ε-NFA）"><a href="#带空迁移的有限自动机（ε-NFA）" class="headerlink" title="带空迁移的有限自动机（ε-NFA）"></a>带空迁移的有限自动机（ε-NFA）</h4><p><img src="/cbf0d06a2c4f/1670490-20190603092325853-1237030309.png" alt="图"></p><p>例如：</p><p><img src="/cbf0d06a2c4f/1670490-20190514141157163-233983710.png" alt="图"></p><p>也就是说，带空迁移的有限状态自动机支持输入空符号进行状态迁移。</p><h4 id="ε闭包"><a href="#ε闭包" class="headerlink" title="ε闭包"></a>ε闭包</h4><p>非形式化的定义：顺着所有从状态q出发带ε标记的转移来求状态q的ε的闭包。但当顺着ε到达其他状态后，再从这些状态发出ε转移，依此类推，最终求出顺着箭弧都带ε标记的任何路径从q可达的任何每个状态。</p><p>而其形式化的定义如下：</p><p><img src="/cbf0d06a2c4f/1670490-20190603093327179-693580891.png" alt="图"></p><h4 id="ε-NFA的扩展转移"><a href="#ε-NFA的扩展转移" class="headerlink" title="ε-NFA的扩展转移"></a>ε-NFA的扩展转移</h4><p><strong><img src="/cbf0d06a2c4f/1670490-20190603165304314-332612214.png" alt="图"></strong></p><h4 id="ε-NFA接受的语言"><a href="#ε-NFA接受的语言" class="headerlink" title="ε-NFA接受的语言"></a>ε-NFA接受的语言</h4><p>与NFA一样，如果一个语言产生的句子中存在一条能从起始状态到达终止状态的路径，则称这种语言是ε-NFA接受的语言，记为：</p><p>​                    <img src="/cbf0d06a2c4f/1670490-20190514141610728-560229388.png" alt="图"></p><p>显然，ε-NFA和NFA是等价的。对于一个ε-NFA，依次讨论每种状态下接收非空符号的状态迁移情况，可以构造出一个NFA。</p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式 - 必知必会</title>
    <link href="/67a5fa31d20a/"/>
    <url>/67a5fa31d20a/</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>正则表达式</strong> （ Regular Expression ）是强大、便捷、高效的文本处理工具。</p><p>正则表达式本身，加上如同一门袖珍编程语言的通用模式表示法（general pattern notation），赋予使用者描述和分析文本的能力。</p><p>配合上特定工具提供的额外支持，正则表达式能够添加、删除、分离、叠加、插入和修整各种类型的文本和数据。</p><p>——《精通正则表达式》</p></blockquote><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><h3 id="本地测试工具-（RegexBuddy）"><a href="#本地测试工具-（RegexBuddy）" class="headerlink" title="本地测试工具 （RegexBuddy）"></a>本地测试工具 （RegexBuddy）</h3><p>下载地址 ： <a target="_blank" rel="noopener" href="https://www.regexbuddy.com/">https://www.regexbuddy.com/</a></p><p>软件截图 ：</p><p><img src="/67a5fa31d20a/regexbuddy.png" alt="RegexBuddy"></p><p>常用功能说明：</p><ul><li>左上角可以设置 实际应用正则的编程语言，这里代表着不同流派的正则</li><li>往右挨着的功能是 匹配 和 替换 ，要配合着下面的 Test 去使用</li><li><code>Case sensitive</code> 一般选择 不匹配大小写，会避免一些麻烦</li><li>下方 <code>Test</code> 中要注意那一行最右侧的 下拉选项，里面包含 ”Whole file“ 、”Page by page“ 和 ”Line by line“ ，需要根据实际情况选择</li><li><code>Debug</code> 可以用 也可以去 regex101网站调试 （翻墙访问会快一些）</li><li>打开<code>Hightlight</code> 和 <code>List All</code> 下的 <code>Update Automatically</code> 会很方便</li></ul><h3 id="在线测试工具"><a href="#在线测试工具" class="headerlink" title="在线测试工具"></a>在线测试工具</h3><ol><li><a target="_blank" rel="noopener" href="https://regex101.com/">https://regex101.com/</a></li><li><a target="_blank" rel="noopener" href="http://tool.rbtree.cn/regtool/">http://tool.rbtree.cn/regtool/</a></li></ol><h3 id="在线学习网站"><a href="#在线学习网站" class="headerlink" title="在线学习网站"></a>在线学习网站</h3><ol><li><a target="_blank" rel="noopener" href="https://regexlearn.com/zh-cn">https://regexlearn.com/zh-cn</a></li><li><a target="_blank" rel="noopener" href="https://www.runoob.com/regexp/regexp-tutorial.html">https://www.runoob.com/regexp/regexp-tutorial.html</a></li></ol><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><blockquote><p>完整的正则表达式由 <code>两种</code> 字符构成。</p><blockquote><p>特殊字符 称为 <strong>元字符</strong> （metacharacters）</p><p>普通文本字符 称为 <strong>文字</strong> （literal）</p></blockquote></blockquote><h3 id="术语汇总"><a href="#术语汇总" class="headerlink" title="术语汇总"></a>术语汇总</h3><blockquote><ul><li>正则（regex）：“正则表达式”的简称</li><li>匹配（matching）：这个正则表达式能在字符串中找到匹配的文本。</li><li>元字符（metacharacter）：一个字符是否为元字符，取决于应用的具体情况。流派不同，字符转义的规定也不相同。</li><li>流派（flavor）：由Perl语言的正则表达式开创的流派，功能强大，其他语言汲取其中灵感发展成不同流派。</li><li>子表达式（subexpression）：指整个正则中的一部分，通常是括号内的表达式，或由 <code>|</code>分隔的多选分支。例如：<code>H[1-6]\s*</code> 的子表达式为 <code>H</code> 、 <code>[1-6]</code> 和 <code>\s*</code></li><li>字符（character）：一个字节所代表的单词取决于计算机如何解释。单个字节的值不会变化，但这个 <strong>值</strong> 所代表的 <strong>字符</strong> 却是由解释所用的编码来决定的。要确保 <strong>编码</strong> 的问题，自己的视角要和工具的视角相同。</li></ul></blockquote><h3 id="字符组"><a href="#字符组" class="headerlink" title="字符组"></a>字符组</h3><blockquote><p><strong>匹配若干字符之一。</strong><code>[……]</code>它容许使用者列出在某处期望匹配的字符，通常被称作 字符组 。</p></blockquote><h4 id="普通字符组"><a href="#普通字符组" class="headerlink" title="普通字符组"></a>普通字符组</h4><p> <code>&lt;H[123456]&gt;</code> 可以匹配 <code>&lt;H1&gt; &lt;H2&gt; &lt;H3&gt; &lt;H4&gt; &lt;H5&gt; &lt;H6&gt;</code> 。<code>[123456]</code> 表示的意思是匹配1到6任意一个数字，是 <strong>或</strong> 的含义。</p><h4 id="字符组元字符"><a href="#字符组元字符" class="headerlink" title="字符组元字符"></a>字符组元字符</h4><p><code>&lt;H[123456]&gt;</code> 可以简写成 <code>&lt;H[1-6]&gt;</code> 。中括号中的 <code>-</code> 就是<strong>字符组元字符</strong>。 </p><p>只有当 <code>-</code> 出自现在<code>[]</code>内开头时候，才表示普通的 <code>-</code> 字符，例如 <code>&lt;H[-1-6]&gt;</code>，匹配的是 <code>&lt;H1&gt; &lt;H2&gt; &lt;H3&gt; &lt;H4&gt; &lt;H5&gt; &lt;H6&gt; &lt;H-&gt;</code> 。</p><p>注意：这种简写遵循<code>ASCII</code>码表的顺序。</p><p>例如 十六进制可以用<code>[0-9a-fA-F]</code> 正则匹配。<code>[0-Z]</code> 则可以匹配 <code>2、C、=、?</code> 但是不可以匹配 <code>a、k、_、&#123;</code> 。</p><h4 id="排除型元字符"><a href="#排除型元字符" class="headerlink" title="排除型元字符"></a>排除型元字符</h4><p><code>[^……]</code>  字符组开头的 <code>^</code> （脱字符）表示 <strong>排除</strong> (negate) 的意思。</p><p>例如  <code>&lt;H[^1-6]&gt;</code> 不希望匹配  <code>&lt;H1&gt; &lt;H2&gt; &lt;H3&gt; &lt;H4&gt; &lt;H5&gt; &lt;H6&gt;</code> 这几个，但可以匹配 <code>&lt;H8&gt; &lt;HA&gt; &lt;H!&gt;</code> 等等。</p><h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符 ."></a>元字符 <code>.</code></h4><p>元字符 <code>.</code>（通常称为点号 dot 或者 小点point）是用来匹配任意字符的字符组的简便写法。它不匹配换行符，除非开启了”单行模式“。</p><h4 id="字符组简记法"><a href="#字符组简记法" class="headerlink" title="字符组简记法"></a>字符组简记法</h4><table><thead><tr><th>字符组</th><th>简记</th></tr></thead><tbody><tr><td>\d</td><td>数字。0 到 9，等价 <code>[0-9]</code></td></tr><tr><td>\D</td><td>非数字字符。等价 <code>[^0-9]</code></td></tr><tr><td>\w</td><td>单词中的字符。一般等价<code>[0-9A-Za-z_]</code> 但某些工具不匹配下划线</td></tr><tr><td>\W</td><td>非单词中的字符。等价<code>[^0-9A-Za-z_]</code></td></tr><tr><td>\s</td><td>空白字符。通常等价<code>[ \f\n\r\t\v]</code></td></tr><tr><td>\S</td><td>非空白字符。等价<code>[^\s]</code></td></tr></tbody></table><h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><p>量词表示不确定的长度，其通用形式为 <code>&#123;m,n&#125;</code> ，其中 m 和 n 是两个非负整数，且 m ≤ n 。表达式中<strong>不能有空格</strong>。  </p><p>量词的一般形式及说明</p><table><thead><tr><th>量词</th><th>说明</th></tr></thead><tbody><tr><td>{n}</td><td>匹配的字符必须出现n次</td></tr><tr><td>{m,n}</td><td>匹配的字符最少出现m次，最多出现n次</td></tr><tr><td>{m,}</td><td>匹配的字符出现m次及以上</td></tr><tr><td>{0,n}</td><td>匹配的字符可以不出现，也可以出现，最多n次。（某些编程语言支持写成{,n}，但不推荐）</td></tr></tbody></table><h4 id="常用量词"><a href="#常用量词" class="headerlink" title="常用量词"></a>常用量词</h4><p><code>?</code>、<code>+</code> 和 <code>*</code> ，可以理解为“量词的简记法”</p><table><thead><tr><th>量词</th><th>等价</th></tr></thead><tbody><tr><td>*</td><td>{0,}</td></tr><tr><td>+</td><td>{1,}</td></tr><tr><td>?</td><td>{0,1}</td></tr></tbody></table><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><blockquote><p>匹配 <code>&lt;h1 id=&#39;title&#39;&gt;我是标题&lt;/h1&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</code> 中的 html标签</p></blockquote><table><thead><tr><th>标签</th><th>正则</th></tr></thead><tbody><tr><td>开始标签</td><td><code>&lt;[^/][^&gt;]+&gt;</code></td></tr><tr><td>结束标签</td><td><code>&lt;/[^&gt;]+&gt;</code></td></tr><tr><td>自闭合标签</td><td><code>&lt;[^/&gt;]+/&gt;</code></td></tr></tbody></table><p>你会发现开始标签正则也可以匹配自闭合标签。需要改成<code>&lt;[^/][^&gt;]*[^/]&gt;</code> 。但这个正则出现2次<code>[^/]</code>是占用2个字符，无法匹配 <code>&lt;B&gt;</code>  这种标签。需要用到 <strong>环视</strong> 的写法，<em>暂不做讨论</em>。</p><h4 id="匹配优先量词"><a href="#匹配优先量词" class="headerlink" title="匹配优先量词"></a>匹配优先量词</h4><p>回到刚才的举例，如果正则为 <code>&lt;.*&gt;</code> 得到的结果为 第一个<code>&lt;</code> 到最后一个 <code>&gt;</code> 中的全部内容。</p><p><strong>匹配优先（贪婪）</strong> ：首先需要记住，标准匹配量词（<code>?</code>、<code>*</code>、<code>+</code> 以及 <code>&#123;min,max&#125;</code>）都是“匹配优先（greedy）”的，它们总是尝试<strong>匹配尽可能多</strong>的字符直到匹配上限为止。</p><p>例如：用正则 <code>\d*\d+</code> 去匹配 <code>0123456789</code> 。<code>\d*</code> 能匹配到 <code>012345678</code> ，而<code>\d+</code>只能匹配到<code>9</code></p><h4 id="忽略优先量词"><a href="#忽略优先量词" class="headerlink" title="忽略优先量词"></a>忽略优先量词</h4><p>还是那个举例，如果只想要匹配最开始的标签如何去写这个正则呢？</p><p>需要用到 <strong>忽略优先量词（懒惰）</strong> ，如果不确定是否要匹配，忽略优先会选择“不匹配”的状态，在尝试表达式中之后的元素，如果尝试失败，再回溯，选择之前保存的“匹配”的状态</p><p>只想要匹配最开始的标签的答案为 <code>&lt;.*?&gt;</code></p><p>再来个例子：用正则 <code>\d*?\d+?</code> 去匹配 <code>0123456789</code> 。<code>\d*?</code> 能匹配到最少次数是0次，结果是空  ，而<code>\d+?</code>能匹配到最少的1次，但它们都会逐个去匹配0-9这一排数字10次。</p><h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><blockquote><p>分组：将相关元素归拢到一起，构成一个整体。</p><p>捕获型括号的编号是按照开始括号出现的次序，<strong>从左至右</strong>计算的。</p></blockquote><p>例如：</p><ul><li>匹配 <code>&lt;h1&gt;我是标题&lt;/h1&gt;</code> 的正则为 <code>&lt;h1&gt;(.*?)&lt;/h1&gt;</code> 。匹配的文本 和 替换中存储的<code>$1</code>为：<code>我是标题</code> 。</li><li>匹配 IPv4 地址（127.0.0.1）的正则为 <code>(\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;</code> 。匹配的文本 和 替换中存储的<code>$0</code>为：<code>127.0.0.1</code> ，$1 为 <code>0. </code>。要理解这个表达式，请按下列顺序分析它：\d{1,3}匹配1到3位的数字，(\d{1,3}.){3}匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复3次，最后再加上一个一到三位的数字(\d{1,3})。</li></ul><h4 id="非捕获分组"><a href="#非捕获分组" class="headerlink" title="非捕获分组"></a>非捕获分组</h4><blockquote><p>仅用于分组的括号 <code>(?:……)</code> ，不能用来提取文本，而只能用来规定多选结构或者量词的作用对象。</p><p>它们不会按照 <code>$1 、$2</code> 去编号。如果没用用到引用分组，尽量使用非捕获型的括号，性能会好。</p></blockquote><p>例如：匹配 IPv4 地址（127.0.0.1）的正则为 <code>(?:\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;</code> 。匹配的文本 和 替换中存储的<code>$0</code>为：<code>127.0.0.1</code> 。</p><h4 id="引用分组"><a href="#引用分组" class="headerlink" title="引用分组"></a>引用分组</h4><blockquote><p>引用分组：将子表达式匹配的文本存储起来，供之后引用。</p><p>可以用“\1”，“\2”，“\3” 来反向引用</p></blockquote><p>例如：匹配下面文本的正则，可以写成 <code>&lt;(.*?)&gt;.*?&lt;/\1&gt;</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>h2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>h3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>匹配叠字可以写成<code>([\u4e00-\u9fa5])\1</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">圈圈圆圆圈圈天天年年天天的我深深看你的脸生气的温柔埋怨的温柔 的脸 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="多选结构"><a href="#多选结构" class="headerlink" title="多选结构"></a>多选结构</h4><blockquote><p>多选结构的形式是<code>(……|……)</code> ，在括号内以竖线分隔开多个子表达式。</p><p>在一个多选结构内，多选分支的数目没有限制。在匹配时，整个多选结构视为一个整体，只要其中某个子表达式能匹配就能成功。如果所有表达式都不能匹配，则匹配失败。</p><p>多个子表达式都能匹配的时候，匹配的结果为最左边的匹配结果。（精确的放左边）</p></blockquote><p>刚才匹配Ipv4地址的例子不太规范，可以匹配到错误数据。优化的正则为</p><p><code>(?:(?:2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(?:2[0-4]\d|25[0-5]|[01]?\d\d?)</code></p><p>匹配名为xxx的各种文件名后缀的正则： <code>xxx\.(?:avi|mp\d|jpg|xls|ppt|txt)</code></p><h4 id="命名分组"><a href="#命名分组" class="headerlink" title="命名分组"></a>命名分组</h4><blockquote><p>并不是通行的功能，暂不讨论</p></blockquote><h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><h4 id="单词边界"><a href="#单词边界" class="headerlink" title="单词边界"></a>单词边界</h4><p><code>\b</code> 匹配一个单词边界，即字与空格间的位置。</p><h4 id="行起始-x2F-结束位置"><a href="#行起始-x2F-结束位置" class="headerlink" title="行起始&#x2F;结束位置"></a>行起始&#x2F;结束位置</h4><blockquote><p>单词边界匹配的是某个位置而不是文本，在正则中，这里匹配位置的元素叫 <strong>锚点</strong>（anchor）。</p><p><code>^</code>、<code>$</code> 分别匹配字符串的 <strong>开始位置</strong> 和 <strong>结束位置</strong> 。</p></blockquote><p>在按下回车键就输入了一个<strong>行终止符</strong>（Line terminal）。不同平台下的终止符不相同。</p><table><thead><tr><th>平台</th><th>行终止符</th></tr></thead><tbody><tr><td>UNIX&#x2F;Linux</td><td>\n</td></tr><tr><td>Windows</td><td>\r\n</td></tr><tr><td>Mac OS</td><td>\n  (OS 9 之前的版本 为 \r)</td></tr></tbody></table><h4 id="环视"><a href="#环视" class="headerlink" title="环视"></a>环视</h4><blockquote><p>环视（look-around）用来“停在原地，四处张望”，类似单词边界，在它旁边的文本需要满足某种条件，而且本身不匹配任何字符。</p></blockquote><p><strong>回到量词开始标签的举例</strong>，再来改进下。增加一个要匹配的文本 <code>&lt;p title=&quot;&gt;&quot; class=&#39;p_style&#39; &gt;标签不规范&lt;/p&gt;</code> ，<code>&lt;[^/][^&gt;]*[^/]&gt;</code> 无法满足这样的匹配，返回 <code>&lt;p title=&quot;&gt;</code> 的结果。</p><p>修改成 <code>&lt;(?!/)(?:&#39;[^&#39;]*&#39;|&quot;[^&quot;]*&quot;|[^&#39;&quot;&gt;])+(?&lt;!/)&gt;</code> 则可以满足，也可以满足 <code>&lt;B&gt;</code>  这种标签的匹配。</p><p>这个表达式出现了两种环视 <code>(?!……)</code> 、<code>(?&lt;!……)</code> ，它们的名字是“否定顺序环视”，“否定逆序环视”。“否定”的意思是“ **如果正则表达式匹配成功，则当前位置匹配失败 **”，而“顺序”和“逆序”则表示正则需要匹配的文本所在的位置。</p><h5 id="环视分类"><a href="#环视分类" class="headerlink" title="环视分类"></a>环视分类</h5><p>环视一共分为4种。肯定顺序环视（positive-lookahead）、否定顺序环视（negative-lookahead）、肯定逆序环视（positive-lookbehind） 和 否定逆序环视（negative-lookbehind）</p><table><thead><tr><th>名称</th><th>记法</th><th>判断方向</th><th>结构内表达式匹配成功的返回值</th></tr></thead><tbody><tr><td>肯定顺序环视（零宽度正预测先行断言）</td><td>(?&#x3D;……)</td><td><strong>向右</strong></td><td>True</td></tr><tr><td>否定顺序环视（零宽度负预测先行断言）</td><td>(?!……)</td><td><strong>向右</strong></td><td>False</td></tr><tr><td>肯定逆序环视（零宽度正回顾后发断言）</td><td>(?&lt;&#x3D;……)</td><td><em>向左</em></td><td>True</td></tr><tr><td>否定逆序环视（零宽度负回顾后发断言）</td><td>(?&lt;!……)</td><td><em>向左</em></td><td>False</td></tr></tbody></table><p>当前位置是朝右判断，则是顺序环视，朝左判断是逆序环视；要求子表达式能匹配的字符串出现，则为肯定环视，不能出现则为否定环视。</p><h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h5><blockquote><ol><li><p>去掉下面文本的空格，英文单词间的除外</p><p>​        中    英文混    排， some English word， 有   多余   的空白字          符</p></li></ol></blockquote><p>分析：</p><p>匹配空白符 \s，<code>some_English_word</code> （下划线的位置代替空白符）从左边看不能出现英文字母（[a-zA-Z]），从右边看也不能出现英文字母。</p><p>所以左右要添加<strong>否定逆序环视</strong>和<strong>否定顺序环视</strong>，故而得到 <code>(?&lt;![a-zA-Z])\s+(?![a-zA-Z])</code> ，替换的文本（Replacement text）设置为空，在进行替换操作。</p><p><strong>P.S.</strong> 能不能改写成肯定环视？左侧肯定不包含字母，右侧肯定不包含字母，<code>(?&lt;=[^a-zA-Z])\s+(?=[^a-zA-Z])</code> </p><p>这个问题涉及到 <strong>肯定环视</strong> 和 <strong>否定环视</strong> 的一大根本不同是，<strong>肯定环视</strong> 要判断成功，字符串中必须有字符由换式结构中的表达式匹配；而 <strong>否定环视</strong> 要判断成功，却有两种情况：1.字符串中出现了字符，但这些字符不能由环视结构中的表达式匹配。 2.字符串中不再有任何字符。也就是这个位置的字符串的起始位置或者结束位置。区别如下。</p><table><thead><tr><th>正则</th><th>结果说明</th></tr></thead><tbody><tr><td><code>(?&lt;![a-zA-Z])\s+(?![a-zA-Z])</code></td><td>否定环视，去掉了首尾空白</td></tr><tr><td><code>(?&lt;=[^a-zA-Z])\s+(?=[^a-zA-Z])</code></td><td>肯定环视，无法去掉字符串中的首尾空白，这是因为 <code>\s+</code> 虽然可以匹配空白符，<br/>但其左侧没有任何字符，所以 <code>(?&lt;=[^a-zA-Z])</code>  无法匹配成功，末尾也是一样的道理。</td></tr></tbody></table><blockquote><ol start="2"><li><p>电子邮件中，更准确的主机名验证。</p><p>E-mail地址以@分隔两段，前面的是用户名（username）,之后的是主机名（hostname）。用户名一般允许英文大小写、数字、点号等比较简单。</p><p>但根据规范，主机名以点号分割多个域名字段（label）, 每个域名字段可以包含英文大小写、数字、短横，但横线不能出现在最开头位置（e.g. mail.xxx.com）。</p><p>每个域名字段长度最多为63个字符，整个主机名的长度最多255个字符。</p><p>这个表达式 <code>([-a-zA-Z0-9]&#123;1,63&#125;\.)*[-a-z-A-Z0-9]&#123;1,63&#125;</code>  ，有两个问题：1.它允许第一个字符是横线 <code>-</code> ；2.它没有限定整个主机的长度最长为255个字符。</p></li></ol></blockquote><p>分析：</p><ol><li><p><em>它允许第一个字符是横线 <code>-</code> 。</em>可以改写成<code>[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;\.</code> 但这样的环视更好 <code>(?!-)[-a-zA-Z0-9]&#123;1,63&#125;\.</code></p></li><li><p><em>它没有限定整个主机的长度最长为255个字符。</em></p><p>为了保证整个主机名字符串长度小于255个字符，主机名全部可能出现的字符都用 <code>[-a-zA-Z0-9.]</code> 表示，所以对应的肯定顺序环视就是 <code>(?=[-a-zA-Z0-9.]&#123;0，255&#125;)</code> 。如果单独给出一个字符串去判断，需要在这个环视末尾增加 <code>$</code> ;如果在一长段文本中提取，那么主机名后面还会有其它字符，只是这些字符不能是 <code>[-a-zA-Z0-9.]</code> （可能是空白符，可能是末尾），使用否定顺序环视 <code>(?![-a-zA-Z0-9.])</code> 可以兼顾这种情况。</p><p>最终得到的正则为：<code>(?=[-a-zA-Z0-9.]&#123;0,255&#125;(?![-a-zA-Z0-9.]))(?:(?!-)[-a-zA-Z0-9]&#123;1,63&#125;\.)*(?:(?!-)[-a-zA-Z0-9])&#123;1,63&#125;</code></p><p>完整在文本中匹配类似 <code>abc@mail.xxx.com</code> Email地址的 正则为：</p><p><code>[\w\-.]+@(?=[-a-zA-Z0-9.]&#123;0,255&#125;(?![-a-zA-Z0-9.]))(?:(?!-)[-a-zA-Z0-9]&#123;1,63&#125;\.)*(?:(?!-)[-a-zA-Z0-9])&#123;1,63&#125;</code></p><p>P.S.</p><blockquote><p>这是我测试的Email地址  <a href="mailto:&#x6d;&#x69;&#x6e;&#x65;&#64;&#109;&#x61;&#105;&#x6c;&#46;&#x78;&#x6e;&#45;&#45;&#122;&#52;&#x71;&#53;&#x68;&#51;&#x38;&#x73;&#x74;&#x77;&#x63;&#x73;&#x38;&#51;&#97;&#x6e;&#108;&#x71;&#x72;&#119;&#52;&#x62;&#x2e;&#120;&#x6e;&#45;&#x2d;&#x36;&#x71;&#x71;&#x39;&#x38;&#x36;&#x62;&#51;&#x78;&#108;">&#x6d;&#x69;&#x6e;&#x65;&#64;&#109;&#x61;&#105;&#x6c;&#46;&#x78;&#x6e;&#45;&#45;&#122;&#52;&#x71;&#53;&#x68;&#51;&#x38;&#x73;&#x74;&#x77;&#x63;&#x73;&#x38;&#51;&#97;&#x6e;&#108;&#x71;&#x72;&#119;&#52;&#x62;&#x2e;&#120;&#x6e;&#45;&#x2d;&#x36;&#x71;&#x71;&#x39;&#x38;&#x36;&#x62;&#51;&#x78;&#108;</a>  试着提取它</p></blockquote></li></ol><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><h4 id="字符组转义"><a href="#字符组转义" class="headerlink" title="字符组转义"></a>字符组转义</h4><p>字符组内 <code>]</code> 需要转义成 <code>\]</code> ;  <code>[-09]</code>等价  <code>[0\-9]</code> ; <code>[ab^]</code>等价 <code>[\^ab]</code></p><h4 id="元字符转义"><a href="#元字符转义" class="headerlink" title="元字符转义"></a>元字符转义</h4><table><thead><tr><th>元字符</th><th>转义</th></tr></thead><tbody><tr><td>[</td><td>\[</td></tr><tr><td>{</td><td>\{</td></tr><tr><td>()</td><td>\( ，\)</td></tr><tr><td>* , + , ?</td><td>\* , \+ , \?</td></tr><tr><td>.</td><td>\.</td></tr><tr><td>|</td><td>\</td></tr><tr><td>^ , $</td><td>\^ , \$</td></tr><tr><td>$num</td><td>\$ 或 $$ 在替换的 replacement 中转义</td></tr></tbody></table><h3 id="常用语言正则特性"><a href="#常用语言正则特性" class="headerlink" title="常用语言正则特性"></a>常用语言正则特性</h3><blockquote><p>这里只记录了 <code>Python</code> 、<code>Java</code> 和 <code>JavaScript</code> 的常用特性</p></blockquote><table><thead><tr><th>特性</th><th>JS</th><th>Java</th><th>Python</th></tr></thead><tbody><tr><td><code>\d</code> <code>\w</code> <code>\s</code> 字符组简记</td><td>ASCII匹配规则</td><td>ASCII匹配规则</td><td>ASCII匹配规则</td></tr><tr><td><code>\1</code> <code>\9</code> 引用分组</td><td>√</td><td>√</td><td>√</td></tr><tr><td>替换中的引用分组</td><td>$num</td><td>$num</td><td>\g&lt;num&gt;</td></tr><tr><td>命名分组</td><td>×</td><td>×</td><td>用<code>(?P&lt;name&gt;regex)</code>表示命名分组<br/>用<code>(P=name)</code>在表达式中引用分组<br/>用<code>\g&lt;name&gt;</code>在替换中引用</td></tr><tr><td><code>^</code></td><td>√</td><td>√</td><td>√</td></tr><tr><td><code>$</code></td><td><code>$</code>无法匹配文本末尾结束符之前的位置</td><td>√</td><td>√</td></tr><tr><td><code>(?=regex)</code><br/> <code>(?!regex)</code></td><td>√</td><td>√</td><td>√</td></tr><tr><td><code>(?&lt;=regex)</code> <br/><code>(?&lt;!regex)</code></td><td>×</td><td>逆序环视中的正则能匹配到的文本长度必须有上限</td><td>逆序环视中的正则能匹配到的文本长度必须是固定的</td></tr><tr><td>不区分大小写模式</td><td>√</td><td>√</td><td>√</td></tr><tr><td>单行模式</td><td>×</td><td>√</td><td>√</td></tr><tr><td>多行模式</td><td>√</td><td>√</td><td>√</td></tr><tr><td>注释模式</td><td>×</td><td>√</td><td>√</td></tr><tr><td>Unicode Property</td><td>×</td><td>√</td><td>×</td></tr><tr><td>Unicode Block</td><td>×</td><td>√</td><td>×</td></tr><tr><td>Unicode Script</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><h2 id="实战技巧"><a href="#实战技巧" class="headerlink" title="实战技巧"></a>实战技巧</h2><h3 id="设置常用的快捷输入"><a href="#设置常用的快捷输入" class="headerlink" title="设置常用的快捷输入"></a>设置常用的快捷输入</h3><blockquote><p>找到系统的输入法中的，用户自定义短语功能。设置一个快捷键，输入如下正则，会方便很多</p></blockquote><table><thead><tr><th>正则</th><th>说明</th></tr></thead><tbody><tr><td><code>([\D\d]*?)</code></td><td>捕获全部字符，用于提取HTML<strong>标签外部</strong>的内容</td></tr><tr><td><code>([^&gt;]*?)</code></td><td>捕获href中的网址，用于提取HTML<strong>标签内部</strong>的内容</td></tr><tr><td><code>(.*?)</code></td><td>单行匹配</td></tr><tr><td><code>[\D\d]*?</code></td><td>对应上面，只是去掉了捕获</td></tr><tr><td><code>[^&gt;]*?</code></td><td>同上</td></tr><tr><td><code>.*?</code></td><td>同上</td></tr><tr><td><code>(\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s+\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;)</code></td><td>捕获时间的正则，具体情况在此基础上修改</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通用抽取库</title>
    <link href="/c0c979fb059e/"/>
    <url>/c0c979fb059e/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><blockquote><p>本文列举了2个目前为止针对资讯类较为不错的开源智能抽取库，Newspaper  和 GeneralNewsExtractor（GNE）。</p><p>Newspaper 的下载功能有限，提供丰富的抽取字段。</p><p>GNE采用前端渲染的HTML进行字段抽取，且不提供下载HTML的功能。</p></blockquote><h1 id="Newspaper"><a href="#Newspaper" class="headerlink" title="Newspaper"></a>Newspaper</h1><blockquote><p>GitHub：<a target="_blank" rel="noopener" href="http://github.com/codelucas/newspaper">http://github.com/codelucas/newspaper</a></p><p>文档：<a target="_blank" rel="noopener" href="https://newspaper.readthedocs.io/en/latest/">https://newspaper.readthedocs.io/en/latest/</a></p><p>安装：python3需要 <code>pip install newspaper3k</code></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> newspaper <span class="token keyword">import</span> Article<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://fox13now.com/2013/12/30/new-year-new-laws-obamacare-pot-guns-and-drones/'</span>    html <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    获取到的网页源码    '''</span>    <span class="token comment"># 创建Article，必须给定URL,是为标准化网址准备的</span>    article <span class="token operator">=</span> Article<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token comment"># language 可以指定语种，更多语种查看文档</span>    <span class="token comment"># article = Article(url, language='zh')</span>        <span class="token comment"># 传入获取的源码</span>    article<span class="token punctuation">.</span>download<span class="token punctuation">(</span>input_html<span class="token operator">=</span>html<span class="token punctuation">)</span>    <span class="token comment"># 解析抽取字段</span>    article<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 输出字段，更多字段查看文档或源码Article的__init__方法</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span>title<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span>top_image<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span>publish_date<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="GeneralNewsExtractor"><a href="#GeneralNewsExtractor" class="headerlink" title="GeneralNewsExtractor"></a>GeneralNewsExtractor</h1><blockquote><p>GitHub：<a target="_blank" rel="noopener" href="https://github.com/GeneralNewsExtractor/GeneralNewsExtractor">https://github.com/GeneralNewsExtractor/GeneralNewsExtractor</a></p><p>文档：<a target="_blank" rel="noopener" href="https://generalnewsextractor.readthedocs.io/zh_CN/latest/">https://generalnewsextractor.readthedocs.io/zh_CN&#x2F;latest&#x2F;</a></p><p>安装：<code>pip install gne</code></p></blockquote><blockquote><p>下面代码是一个基于GNE和Selenium的字段抽取服务</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token keyword">from</span> gne <span class="token keyword">import</span> GeneralNewsExtractor<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> TimeoutExceptionapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">word</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url_link <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'url_link'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token string">''</span> <span class="token operator">!=</span> url_link<span class="token punctuation">:</span>        <span class="token comment"># 判断url开头是否是http://或者https://开头</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>url_link<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"http://"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token keyword">or</span> url_link<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"https://"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> url_link<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"//"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                url_link <span class="token operator">=</span> <span class="token string">"http:"</span> <span class="token operator">+</span> url_link            <span class="token keyword">else</span><span class="token punctuation">:</span>                url_link <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> url_link        html_str <span class="token operator">=</span> extract_by_selenium<span class="token punctuation">(</span>url_link<span class="token punctuation">)</span>        <span class="token keyword">if</span> html_str <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>            news_extraction_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>news_extraction<span class="token punctuation">(</span>html_str<span class="token punctuation">)</span><span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># 字典转码</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token string">'flag'</span><span class="token punctuation">:</span> <span class="token string">'成功'</span><span class="token punctuation">,</span>                <span class="token string">'msg'</span><span class="token punctuation">:</span> <span class="token string">'成功了'</span><span class="token punctuation">,</span>                <span class="token string">'data'</span><span class="token punctuation">:</span> news_extraction_data            <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token string">'flag'</span><span class="token punctuation">:</span> <span class="token string">'失败'</span><span class="token punctuation">,</span>            <span class="token string">'msg'</span><span class="token punctuation">:</span> <span class="token string">'网站访问有点慢~'</span><span class="token punctuation">,</span>            <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token string">'flag'</span><span class="token punctuation">:</span> <span class="token string">'失败'</span><span class="token punctuation">,</span>            <span class="token string">'msg'</span><span class="token punctuation">:</span> <span class="token string">'提取失败，请反馈该链接帮助我们排查，谢谢！'</span><span class="token punctuation">,</span>            <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">extract_by_selenium</span><span class="token punctuation">(</span>url_link<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 判断网页状态</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url_link<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token comment"># 创建配置对象</span>            chrome_options <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>ChromeOptions<span class="token punctuation">(</span><span class="token punctuation">)</span>            chrome_options<span class="token punctuation">.</span>add_experimental_option<span class="token punctuation">(</span><span class="token string">"excludeSwitches"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"enable-automation"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            chrome_options<span class="token punctuation">.</span>add_experimental_option<span class="token punctuation">(</span><span class="token string">'useAutomationExtension'</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>            chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'lang=zh-CN,zh,zh-TW,en-US,en'</span><span class="token punctuation">)</span>            chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>                <span class="token string">'user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span><span class="token punctuation">)</span>            chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">"disable-blink-features=AutomationControlled"</span><span class="token punctuation">)</span>  <span class="token comment"># 就是这一行告诉chrome去掉了webdriver痕迹</span>            wd <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>chrome_options<span class="token operator">=</span>chrome_options<span class="token punctuation">,</span>                                  executable_path<span class="token operator">=</span><span class="token string">r'../driver/chromedriver-101.0.4951.41.exe'</span><span class="token punctuation">)</span>            wd<span class="token punctuation">.</span>set_page_load_timeout<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>  <span class="token comment"># 页面加载超时时间</span>            wd<span class="token punctuation">.</span>set_script_timeout<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>  <span class="token comment"># 页面js加载超时时间</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                wd<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_link<span class="token punctuation">)</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                wd<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token triple-quoted-string string">'''                    function insert_visiability_info() &#123;                    function get_body() &#123;                        var body = document.getElementsByTagName('body')[0]                        return body                    &#125;                                    function insert_info(element) &#123;                        is_visiable = element.offsetParent !== null                        element.setAttribute('is_visiable', is_visiable)                        if (is_visiable) &#123;                            react = element.getBoundingClientRect()                            coordinate = JSON.stringify(react)                            element.setAttribute('coordinate', coordinate)                        &#125;                    &#125;                                    function iter_node(node) &#123;                        children = node.children                        insert_info(node)                        if (children.length !== 0) &#123;                            for(const element of children) &#123;                                iter_node(element)                            &#125;                        &#125;                    &#125;                                    function sizes() &#123;                        let contentWidth = [...document.body.children].reduce(                          (a, el) => Math.max(a, el.getBoundingClientRect().right), 0)                          - document.body.getBoundingClientRect().x;                                        return &#123;                          windowWidth:  document.documentElement.clientWidth,                          windowHeight: document.documentElement.clientHeight,                          pageWidth:    Math.min(document.body.scrollWidth, contentWidth),                          pageHeight:   document.body.scrollHeight,                          screenWidth:  window.screen.width,                          screenHeight: window.screen.height,                          pageX:        document.body.getBoundingClientRect().x,                          pageY:        document.body.getBoundingClientRect().y,                          screenX:     -window.screenX,                          screenY:     -window.screenY - (window.outerHeight-window.innerHeight),                        &#125;                    &#125;                                    function insert_page_info() &#123;                        page_info = sizes()                        node = document.createElement('meta')                        node.setAttribute('name', 'page_visiability_info')                        node.setAttribute('page_info', JSON.stringify(page_info))                        document.getElementsByTagName('head')[0].appendChild(node)                    &#125;                                    insert_page_info()                    body = get_body()                    iter_node(body)                    &#125;                    insert_visiability_info()                                        '''</span><span class="token punctuation">)</span>                html <span class="token operator">=</span> wd<span class="token punctuation">.</span>find_element_by_tag_name<span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>page_source                wd<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                wd<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> html            <span class="token keyword">except</span> TimeoutException<span class="token punctuation">:</span>  <span class="token comment"># 报错后就强制停止加载 # 这里是js控制</span>                wd<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">'window.stop()'</span><span class="token punctuation">)</span>                wd<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                wd<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">''</span>        <span class="token keyword">return</span> <span class="token string">''</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"异常："</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">news_extraction</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> GeneralNewsExtractor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span>html<span class="token punctuation">,</span>                                          noise_node_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'//div[@class="right-sidebar"]'</span><span class="token punctuation">,</span>                                                           <span class="token string">'//div[@class="comment-list"]'</span><span class="token punctuation">,</span>                                                           <span class="token string">'//*[@style="display:none"]'</span><span class="token punctuation">,</span>                                                           <span class="token string">'//div[@class="statement"]'</span>                                                           <span class="token punctuation">]</span><span class="token punctuation">,</span>                                          use_visiable_info<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># app.run(host='0.0.0.0', port=80)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>抽取</category>
      
    </categories>
    
    
    <tags>
      
      <tag>通用抽取库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB</title>
    <link href="/7ebbaebed260/"/>
    <url>/7ebbaebed260/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>NoSQL(NoSQL &#x3D; Not Only SQL )，意即”不仅仅是SQL”</p><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key&#x3D;&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p></blockquote><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><blockquote><p>官网手册 👉 <a target="_blank" rel="noopener" href="https://www.mongodb.com/docs/manual/tutorial/getting-started/">https://www.mongodb.com/docs/manual/tutorial/getting-started/</a></p><p>中文手册 👉 <a target="_blank" rel="noopener" href="https://mongodb.net.cn/manual/">https://mongodb.net.cn/manual/</a></p><p>菜鸟教程 👉 <a target="_blank" rel="noopener" href="https://www.runoob.com/mongodb/mongodb-databases-documents-collections.html">https://www.runoob.com/mongodb/mongodb-databases-documents-collections.html</a></p></blockquote><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 拉取镜像</span><span class="token function">docker</span> pull mongo<span class="token comment"># 创建容器</span><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">27017</span>:27017 <span class="token parameter variable">-v</span> mongo_configdb:/data/configdb <span class="token parameter variable">-v</span> mongo_db:/data/db <span class="token parameter variable">--name</span> mongo-test mongo <span class="token parameter variable">--auth</span><span class="token comment"># 进入容器</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mongo-test mongo admin<span class="token comment"># 创建管理员账号</span>db.createUser<span class="token punctuation">(</span><span class="token punctuation">&#123;</span> user: <span class="token string">'username'</span>, pwd: <span class="token string">'password'</span>, roles: <span class="token punctuation">[</span> <span class="token punctuation">&#123;</span> role: <span class="token string">"userAdminAnyDatabase"</span>, db: <span class="token string">"admin"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment"># 创建root账号</span>db.createUser<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>user: <span class="token string">'root'</span>, pwd: <span class="token string">'root'</span>, roles: <span class="token punctuation">[</span><span class="token string">'root'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="MongoDB-概念解析"><a href="#MongoDB-概念解析" class="headerlink" title="MongoDB 概念解析"></a>MongoDB 概念解析</h2><table><thead><tr><th align="left">SQL术语&#x2F;概念</th><th align="left">MongoDB术语&#x2F;概念</th><th align="left">解释&#x2F;说明</th></tr></thead><tbody><tr><td align="left">database</td><td align="left">database</td><td align="left">数据库</td></tr><tr><td align="left">table</td><td align="left">collection</td><td align="left">数据库表&#x2F;集合</td></tr><tr><td align="left">row</td><td align="left">document</td><td align="left">数据记录行&#x2F;文档</td></tr><tr><td align="left">column</td><td align="left">field</td><td align="left">数据字段&#x2F;域</td></tr><tr><td align="left">index</td><td align="left">index</td><td align="left">索引</td></tr><tr><td align="left">table joins</td><td align="left">嵌套文档</td><td align="left">表连接，MongoDB不支持，使用嵌入式的文档来代替关联查询</td></tr><tr><td align="left">primary key</td><td align="left">primary key</td><td align="left">主键，MongoDB自动将<code>_id</code>字段设置为主键</td></tr></tbody></table><h2 id="设计规范"><a href="#设计规范" class="headerlink" title="设计规范"></a>设计规范</h2><ol><li>数据库设计规范<ol><li>数据库名约定小写</li><li>不能包含除 <code>_</code> 以外的特殊字符</li><li>长度最大为64个字符</li></ol></li><li>集合设计规范<ol><li>集合名称约定小写</li><li>不能包含除 <code>_</code> 以外的特殊字符，禁止以 <code>system.</code> 开头</li><li>长度最大为64个字符，包含前缀 <code>database.</code> 的内容</li><li>同一个业务尽可能使用相同前缀，尽可能表达用途，【业务标识】_【表标识】</li></ol></li><li>文档设计规范<ol><li>KEY 不能以$开头，不能包含.(点号)</li><li><code>_ID</code> 推荐默认值，自定义主键会减慢插入速度</li><li>推荐使用短字段名，为了提高查询效率，应尽量在统一了大小写之后再插入到数据库中</li><li>禁止在同一个集合字段中存储多个数据类型的数据</li><li>禁止日期类型选择为string，不同的日期格式的文档，不支持等值查询，不支持范围查询</li><li>建议尽量不要存储大型对象，MongoDB能够支持最大16 MB的文档大小</li></ol></li><li>索引设计规范<ol><li>索引命名：IDX_【索引字段名】</li><li>长度不超128个字符</li><li>遵循“最左原则”</li></ol></li></ol><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><p>基本指令</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示数据库</span>show dbsshow databases<span class="token comment"># 进入指定数据库</span>use 数据库名称<span class="token comment"># 查看当前所在数据库</span>db<span class="token comment"># 显示数据库中所有集合</span>show collections<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>CRUD操作</p><ul><li><p>增</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 增一条</span>db.student_info.insertOne<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name: <span class="token string">'zhangsan'</span>,    age: <span class="token number">9</span>,    gender: <span class="token string">'male'</span>,    hobby: <span class="token punctuation">[</span><span class="token string">'sing'</span>, <span class="token string">'jump'</span>, <span class="token string">'rap'</span>, <span class="token string">'basketball'</span><span class="token punctuation">]</span>,    exam_score: <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token string">'yu'</span><span class="token builtin class-name">:</span> <span class="token number">5</span>        <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span>            <span class="token string">'shu'</span><span class="token builtin class-name">:</span> <span class="token number">2</span>        <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span>            <span class="token string">'wai'</span><span class="token builtin class-name">:</span> <span class="token number">3</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 增多条</span>db.student_info.insertMany<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    name: <span class="token string">'lisi'</span>,    age: <span class="token number">13</span>,    gender: <span class="token string">'famale'</span>,    hobby: <span class="token punctuation">[</span><span class="token string">'basketball'</span>, <span class="token string">'football'</span><span class="token punctuation">]</span>,    exam_score: <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token string">'yu'</span><span class="token builtin class-name">:</span> <span class="token number">90</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'shu'</span><span class="token builtin class-name">:</span> <span class="token number">96</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'wai'</span><span class="token builtin class-name">:</span> <span class="token number">89</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>,    is_famale: <span class="token boolean">true</span><span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>    name: <span class="token string">'wangwu'</span>,    age: <span class="token number">7</span>,    gender: <span class="token string">'male'</span>,    hobby: <span class="token punctuation">[</span><span class="token string">'sleep'</span>, <span class="token string">'eat'</span><span class="token punctuation">]</span>,    exam_score: <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token string">'yu'</span><span class="token builtin class-name">:</span> <span class="token number">55</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'shu'</span><span class="token builtin class-name">:</span> <span class="token number">20</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'wai'</span><span class="token builtin class-name">:</span> <span class="token number">93</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>    name: <span class="token string">'zhaoliu'</span>,    age: <span class="token number">16</span>,    gender: <span class="token string">'male'</span>,    hobby: <span class="token punctuation">[</span><span class="token string">'study'</span>, <span class="token string">'play'</span><span class="token punctuation">]</span>,    exam_score: <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token string">'yu'</span><span class="token builtin class-name">:</span> <span class="token number">100</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'shu'</span><span class="token builtin class-name">:</span> <span class="token number">100</span>    <span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>        <span class="token string">'wai'</span><span class="token builtin class-name">:</span> <span class="token number">100</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 不推荐直接使用 insert()</span><span class="token comment"># 插入的其他方法</span>db.collection.updateOne<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 与upsert: true选项一起使用时。</span>db.collection.updateMany<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 与upsert: true选项一起使用时。</span>db.collection.findAndModify<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 与upsert: true选项一起使用时。</span>db.collection.findOneAndUpdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 与 upsert: true选项一起使用时。</span>db.collection.findOneAndReplace<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 与 upsert: true选项一起使用时。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>查</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查询表中所有的数据</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">)</span>db.getCollection<span class="token punctuation">(</span><span class="token string">"student_info"</span><span class="token punctuation">)</span>.find<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 查第一条</span>db.student_info.findOne<span class="token punctuation">(</span><span class="token punctuation">)</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.limit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 查总数</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.count<span class="token punctuation">(</span><span class="token punctuation">)</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 查询 age=13 的数据</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age: <span class="token number">13</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 查询 age=13 的数据 只返回 name、gender 字段</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age: <span class="token number">13</span><span class="token punctuation">&#125;</span>, <span class="token punctuation">&#123;</span>    _id: <span class="token number">0</span>,    name: <span class="token number">1</span>,    gender: <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 查询 10&lt;age≤16 的数据</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token variable">$and</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            age: <span class="token punctuation">&#123;</span>                <span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">10</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>,        <span class="token punctuation">&#123;</span>            age: <span class="token punctuation">&#123;</span>                <span class="token variable">$lte</span><span class="token builtin class-name">:</span> <span class="token number">16</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age: <span class="token punctuation">&#123;</span>        <span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">10</span>,        <span class="token variable">$lte</span><span class="token builtin class-name">:</span> <span class="token number">16</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 常用的比较运算符:</span><span class="token comment"># $gt: 大于   $lt: 小于</span><span class="token comment"># $gte: 大于等于   $lte:小于等于</span><span class="token comment"># $ne: 不等于</span><span class="token comment"># 查询后，排序 （升序 1，降序 -1）</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age: <span class="token punctuation">&#123;</span>        <span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,        <span class="token variable">$lte</span><span class="token builtin class-name">:</span> <span class="token number">20</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>.sort<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age:  - <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># limit()方法来读取指定数量的数据，skip()方法来跳过指定数量的数据</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.limit<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>.skip<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 是否存在 is_famale 字段</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    is_famale: <span class="token punctuation">&#123;</span>        <span class="token variable">$exists</span><span class="token builtin class-name">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 正则匹配</span>db.student_info.find<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name: <span class="token punctuation">&#123;</span>        <span class="token variable">$regex</span><span class="token builtin class-name">:</span> /^zhang. * /    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>改</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># name = zhangsan 的数据，zhangsan 改成 kuangtuzhangsan</span>db.student_info.updateOne<span class="token punctuation">(</span>    <span class="token punctuation">&#123;</span>        name: <span class="token string">'zhangsan'</span>    <span class="token punctuation">&#125;</span>,    <span class="token punctuation">&#123;</span>        <span class="token variable">$set</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>            name: <span class="token string">'kuangtuzhangsan'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># gender = male 新增字段  new_field = '新增字段'</span>db.student_info.updateMany<span class="token punctuation">(</span>    <span class="token punctuation">&#123;</span>        gender: <span class="token string">'male'</span>    <span class="token punctuation">&#125;</span>,    <span class="token punctuation">&#123;</span>        <span class="token variable">$set</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>            new_field: <span class="token string">'新增字段'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 用更新语句删除 new_field 字段</span>db.student_info.updateMany<span class="token punctuation">(</span>    <span class="token punctuation">&#123;</span>        gender: <span class="token string">'male'</span>    <span class="token punctuation">&#125;</span>,    <span class="token punctuation">&#123;</span>        <span class="token variable">$unset</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>            new_field: <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>删</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除一条 name = "kuangtuzhangsan"</span>db.student_info.deleteOne<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name: <span class="token string">"kuangtuzhangsan"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 删除多条 10&lt;age≤16 的数据</span>db.student_info.deleteMany<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    age: <span class="token punctuation">&#123;</span>        <span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">10</span>,        <span class="token variable">$lte</span><span class="token builtin class-name">:</span> <span class="token number">16</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 删除全部数据</span>db.student_info.deleteMany<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 删除集合</span>db.student_info.drop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 删除数据库</span>db.dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul></li></ul><h2 id="Java-操作"><a href="#Java-操作" class="headerlink" title="Java 操作"></a>Java 操作</h2><figure><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SpringBoot</span> <span class="token class-name">MongoTemplate</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>com<span class="token operator">/</span>java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="Python-操作"><a href="#Python-操作" class="headerlink" title="Python 操作"></a>Python 操作</h2><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">motorpymongo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>MongoDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis</title>
    <link href="/e9a6abc21627/"/>
    <url>/e9a6abc21627/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability）。</p></blockquote><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><blockquote><ul><li>官网 👉 <a target="_blank" rel="noopener" href="https://redis.io/">https://redis.io/</a></li><li>Windows版本下载 👇<ul><li><a target="_blank" rel="noopener" href="https://github.com/MicrosoftArchive/redis/releases">https://github.com/MicrosoftArchive/redis/releases</a></li><li><a target="_blank" rel="noopener" href="https://github.com/tporadowski/redis/releases">https://github.com/tporadowski/redis/releases</a></li></ul></li><li>Linux安装 <code>apt install redis-server</code> 或用 Docker 安装</li><li>Redis命令大全 👉 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands.html">http://www.redis.cn/commands.html</a></li></ul></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><p><code>redis-cli</code>连接 <code>redis</code> </p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">6379</span><span class="token comment"># -c 连接集群结点时使用，此选项可防止moved和ask异常</span><span class="token comment"># -a 密码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>切换数据库</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认有16个数据库（0-15）</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token keyword">select</span> <span class="token number">16</span><span class="token comment"># (error) ERR DB index is out of range</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>查看数据库数据量</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dbsize<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>查看数据库所有的key</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">keys *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>存值、取值</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> key1 v1<span class="token comment"># OK</span>get key1<span class="token comment"># "v1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>清空数据操作</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 清除当前数据库</span>flushdb<span class="token comment"># 清除所有数据库（慎用）</span>flushall<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>判定键是否存在</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exists key1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>移动某个键到某个数据库</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">move key1 <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>设置键的过期时间，查看键的剩余过期时间</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">expire key1 <span class="token number">10</span><span class="token comment"># 10秒后过期</span>ttl key1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>查看数据类型</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">type</span> key1<span class="token comment"># string</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><ul><li><p>末尾追加字符串</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">append key1 xxx<span class="token comment"># 键不存在时，等于set操作</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>自增、自减操作</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> view_num <span class="token number">0</span><span class="token comment"># 自增</span>incr view_num<span class="token comment"># 自减</span>decr view_num<span class="token comment"># 以步长为10，自增</span>incrby view_num <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>截取、替换字符串</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> key1 abcdefg<span class="token comment"># 截取下标为1-3位的字符 [1,3]</span>getrange key1 <span class="token number">1</span> <span class="token number">3</span><span class="token comment"># bcd</span><span class="token comment"># 截取全部（等于查看全部）</span>getrange key1 <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 从下标第2个字符开始替换后面的字符为xx</span>setrange key1 <span class="token number">2</span> xx<span class="token comment"># "abxxefg"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>setex、setnx（分布式锁、乐观锁常用）</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置过期时间并赋予新值</span>setex set_with_expire <span class="token number">30</span> <span class="token string">'newData'</span><span class="token comment"># 不存在键的时候赋值，存在无法赋值</span>setnx set_if_not_exist <span class="token string">'data'</span>setnx set_if_not_exist <span class="token string">'newData'</span>get set_if_not_exist<span class="token comment"># "data"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>存取多值</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mset k1 v1 k2 v2 k3 v3mget k1 k2 k3<span class="token comment"># msetnx 原子性操作,失败一个都失败</span>msetnx k1 v1 k4 v4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>getset</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 先获取在设置值</span>getset k6 v6<span class="token comment"># (nil)</span>getset k6 v6_new<span class="token comment"># "v6"</span>get k6<span class="token comment"># "v6_new"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><ul><li><p>lpush</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lpush list_key firstValuelpush list_key secondValue thirdValuelrange list_key <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "thirdValue"</span><span class="token comment"># 2) "secondValue"</span><span class="token comment"># 3) "firstValue"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>rpush</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rpush list_key right_sidelrange list_key <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "thirdValue"</span><span class="token comment"># 2) "secondValue"</span><span class="token comment"># 3) "firstValue"</span><span class="token comment"># 4) "right_side"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>lpop、rpop</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lpop list_keyrpop list_keylrange list_key <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "secondValue"</span><span class="token comment"># 2) "firstValue"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>lindex</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lindex list_key <span class="token number">1</span><span class="token comment"># "firstValue"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>llen</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">llen list_key<span class="token comment"># (integer) 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>lrem</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lrem list_key <span class="token number">1</span> secondValue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>ltrim</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lpush list_key2 a b c d e f g<span class="token comment"># 通过下标截取list</span>ltrim list_key2 <span class="token number">3</span> <span class="token number">5</span>lrange list_key2 <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "d"</span><span class="token comment"># 2) "c"</span><span class="token comment"># 3) "b"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>rpoplpush</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lpush list_key3 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token comment"># 移动一个list最右边的，加在另一个list的最左边</span>rpoplpush list_key3 list_key4lrange list_key3 <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "5"</span><span class="token comment"># 2) "4"</span><span class="token comment"># 3) "3"</span><span class="token comment"># 4) "2"</span>lrange list_key4 <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>exists</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exists list_key3 list_key4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>lset</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lset list_key4 <span class="token number">0</span> onelrange list_key4 <span class="token number">0</span> <span class="token number">0</span><span class="token comment"># 1) "one"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>linsert</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">linsert list_key4 before <span class="token string">"one"</span> <span class="token string">"before"</span>linsert list_key4 after <span class="token string">"one"</span> <span class="token string">"after"</span>lrange list_key4 <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 1) "before"</span><span class="token comment"># 2) "one"</span><span class="token comment"># 3) "after"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><ul><li><p>sadd</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sadd set_key firstValue secondValue thirdValuesadd set_key secondValuesmembers set_key<span class="token comment"># 1) "secondValue"</span><span class="token comment"># 2) "thirdValue"</span><span class="token comment"># 3) "firstValue"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>sismember、scard</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 是否存在某个元素</span>sismember set_key thirdValue<span class="token comment"># (integer) 1</span><span class="token comment"># set集合中的元素个数（set cardinality）</span>scard set_key<span class="token comment"># (integer) 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>srem</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 移除某个元素</span>srem set_key secondValue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>srandmember</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sadd set_key2 a b c d e f g h i j k l m n o p q r s t u <span class="token function">v</span> w x y z<span class="token comment"># 随机取5个元素</span>srandmember set_key2 <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>smove</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 移动一个元素到另外一个set中</span>smove set_key2 set_key3 a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>sdiff、sinter、sunion</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sadd set_key4 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span>sadd set_key5 <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token comment"># 第一个set的差集</span><span class="token function">sdiff</span> set_key4 set_key5<span class="token comment"># 1) "1"</span><span class="token comment"># 2) "2"</span><span class="token comment"># 交集</span>sinter set_key4 set_key5<span class="token comment"># 1) "3"</span><span class="token comment"># 2) "4"</span><span class="token comment"># 并集</span>sunion set_key4 set_key5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h3 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h3><ul><li><p>hset</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hset hash_key field1 v1 field2 v2hget hash_key field1 field2<span class="token comment"># "v1"</span>hmget hash_key field1 field2<span class="token comment"># 1) "v1"</span><span class="token comment"># 2) "v2"</span>hgetall hash_key<span class="token comment"># 1) "field1"</span><span class="token comment"># 2) "v1"</span><span class="token comment"># 3) "field2"</span><span class="token comment"># 4) "v2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>hdel</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除某个字段</span>hdel hash_key field1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>hlen、hkeys、hvals</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hset hash_key field1 v1 field2 v2 field3 v3 field4 v4 field5 v5<span class="token comment"># 获取map长度</span>hlen hash_key<span class="token comment"># (integer) 5</span><span class="token comment"># 获取所有字段</span>hkeys hash_key<span class="token comment"># 1) "field2"</span><span class="token comment"># 2) "field1"</span><span class="token comment"># 3) "field3"</span><span class="token comment"># 4) "field4"</span><span class="token comment"># 5) "field5"</span><span class="token comment"># 获取所有的值</span>hvals hash_key<span class="token comment"># 1) "v2"</span><span class="token comment"># 2) "v1"</span><span class="token comment"># 3) "v3"</span><span class="token comment"># 4) "v4"</span><span class="token comment"># 5) "v5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>hexists</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 是否存在某个字段</span>hexists hash_key field3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>hincrby、hdecrby</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hset hash_key num <span class="token number">0</span><span class="token comment"># 自增、自减</span>hincrby hash_key num <span class="token number">5</span>hincrby hash_key num <span class="token parameter variable">-3</span>hget hash_key num<span class="token comment"># "2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h3 id="zset"><a href="#zset" class="headerlink" title="zset"></a>zset</h3><ul><li><p>zadd</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 有序set</span>zadd zset_key <span class="token number">2</span> secondValue <span class="token number">3</span> thirdValuezadd zset_key <span class="token number">1</span> firstValuezrange zset_key <span class="token number">0</span> <span class="token parameter variable">-1</span> withscores<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>zcard</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 统计个数</span>zcard zset_key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>zrevrange</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 倒序</span>zrevrange zset_key <span class="token number">0</span> <span class="token parameter variable">-1</span>zrevrange zset_key <span class="token number">2</span> <span class="token number">3</span><span class="token comment"># 1) "firstValue"</span>zrevrange zset_key <span class="token parameter variable">-2</span> <span class="token parameter variable">-1</span> withscores<span class="token comment"># 1) "secondValue"</span><span class="token comment"># 2) "2"</span><span class="token comment"># 3) "firstValue"</span><span class="token comment"># 4) "1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>zrem</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除指定元素</span>zrem zset_key secondValue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>zcount</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 指定区间计数</span>zcount zset_key <span class="token parameter variable">-inf</span> +inf<span class="token comment"># (integer) 2</span>zcount zset_key <span class="token number">0</span> <span class="token number">2</span><span class="token comment"># (integer) 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ul><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><blockquote><p><a target="_blank" rel="noopener" href="http://www.redis.cn/commands/multi.html">MULTI</a> 、 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/exec.html">EXEC</a> 、 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/discard.html">DISCARD</a> 和 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/watch.html">WATCH</a> 是 Redis 事务相关的命令。事务可以一次执行多个命令， 并且带有以下两个重要的保证：</p><ul><li>事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</li><li>事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。</li></ul><p><a target="_blank" rel="noopener" href="http://www.redis.cn/commands/exec.html">EXEC</a> 命令负责触发并执行事务中的所有命令：</p><ul><li>如果客户端在使用 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/multi.html">MULTI</a> 开启了一个事务之后，却因为断线而没有成功执行 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/exec.html">EXEC</a> ，那么事务中的所有命令都不会被执行。</li><li>另一方面，如果客户端成功在开启事务之后执行 <a target="_blank" rel="noopener" href="http://www.redis.cn/commands/exec.html">EXEC</a> ，那么事务中的所有命令都会被执行。</li></ul><p>当使用 AOF 方式做持久化的时候， Redis 会使用单个 write(2) 命令将事务写入到磁盘中。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启事务</span><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> multiOK<span class="token comment"># 开始输入命令</span><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">set</span> k1 v1QUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> get k1QUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">set</span> k2 v2QUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">set</span> k3 v3QUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> keys *QUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> setex k2 <span class="token number">5</span> xxxQUEUED<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> keys *QUEUED<span class="token comment"># 输入命令结束</span><span class="token comment"># 触发并执行事务中的所有命令</span><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exec</span><span class="token comment"># 1) OK</span><span class="token comment"># 2) "v1"</span><span class="token comment"># 3) OK</span><span class="token comment"># 4) OK</span><span class="token comment"># 5) 1) "k2"</span><span class="token comment">#    2) "k1"</span><span class="token comment">#    3) "k3"</span><span class="token comment"># 6) OK</span><span class="token comment"># 7) 1) "k2"</span><span class="token comment">#    2) "k1"</span><span class="token comment">#    3) "k3"</span><span class="token comment"># 再次验证k2是否过期</span><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span> keys *<span class="token comment"># 1) "k1"</span><span class="token comment"># 2) "k3"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><blockquote><ul><li><p>discard 放弃事务</p></li><li><p>Redis 不支持回滚（roll back），回滚并不能解决编程错误带来的问题</p><p>以下是这种做法的优点：</p><ul><li>Redis 命令只会因为错误的语法而失败（并且这些问题不能在入队时发现），或是命令用在了错误类型的键上面：这也就是说，从实用性的角度来说，失败的命令是由编程错误造成的，而这些错误应该在开发的过程中被发现，而不应该出现在生产环境中</li><li>因为不需要对回滚进行支持，所以 Redis 的内部可以保持简单且快速</li></ul></li><li><p>check-and-set 操作实现乐观锁</p><ul><li><a target="_blank" rel="noopener" href="http://www.redis.cn/commands/watch.html">WATCH</a> 命令可以为 Redis 事务提供 check-and-set （CAS）行为</li></ul></li></ul></blockquote><h2 id="管理客户端"><a href="#管理客户端" class="headerlink" title="管理客户端"></a>管理客户端</h2><ol><li><p>自带的 redis-cli</p></li><li><p>RedisDesktopManager （高版本收费，0.9.3 免费）</p><p>下载地址 <a target="_blank" rel="noopener" href="https://github.com/uglide/RedisDesktopManager/releases/tag/0.9.3">https://github.com/uglide/RedisDesktopManager/releases/tag/0.9.3</a></p></li><li><p>RedisInsight</p><p>下载地址 <a target="_blank" rel="noopener" href="https://docs.redis.com/latest/ri/installing/install-redis-desktop/">https://docs.redis.com/latest/ri/installing/install-redis-desktop/</a></p></li></ol><h2 id="单机启动"><a href="#单机启动" class="headerlink" title="单机启动"></a>单机启动</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># windows下 配置好 redis.windows.conf cmd中运行 redis-server redis.windows.conf</span><span class="token comment"># Docker</span><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> redis-test-pw <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 redis <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="集群启动（三台机器，三主三从，Docker版）"><a href="#集群启动（三台机器，三主三从，Docker版）" class="headerlink" title="集群启动（三台机器，三主三从，Docker版）"></a>集群启动（三台机器，三主三从，Docker版）</h2><ol><li><p>虚拟机3台Liunx设备</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 这里用 Ubuntu 22.04 系统</span><span class="token comment"># 3台设备的ip为 192.168.1.95 、 192.168.1.96 、 192.168.1.97</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>3台机器分别创建容器</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 192.168.1.95</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node1 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node1:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-1.conf <span class="token parameter variable">--port</span> <span class="token number">6379</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node2 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node2:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-2.conf <span class="token parameter variable">--port</span> <span class="token number">6380</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span class="token comment"># 192.168.1.96</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node3 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node3:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-3.conf <span class="token parameter variable">--port</span> <span class="token number">6379</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node4 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node4:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-4.conf <span class="token parameter variable">--port</span> <span class="token number">6380</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span class="token comment"># 192.168.1.97</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node5 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node5:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-5.conf <span class="token parameter variable">--port</span> <span class="token number">6379</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span class="token function">docker</span> create <span class="token parameter variable">--name</span> redis-node6 <span class="token parameter variable">--net</span> <span class="token function">host</span> <span class="token parameter variable">-v</span> /data/redis-data/node6:/data redis --cluster-enabled <span class="token function">yes</span> --cluster-config-file nodes-node-6.conf <span class="token parameter variable">--port</span> <span class="token number">6380</span> <span class="token parameter variable">--requirepass</span> <span class="token string">"password"</span> <span class="token parameter variable">--masterauth</span> <span class="token string">"password"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>启动容器，并设置docker重启始终启动策略</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 192.168.1.95</span><span class="token function">docker</span> start redis-node1 redis-node2<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always redis-node1 redis-node2<span class="token comment"># 192.168.1.96</span><span class="token function">docker</span> start redis-node3 redis-node4<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always redis-node3 redis-node4<span class="token comment"># 192.168.1.97</span><span class="token function">docker</span> start redis-node5 redis-node6<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always redis-node5 redis-node6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>随意进入一个容器</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis-node6 <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>设置集群关系</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token parameter variable">--cluster</span> create <span class="token number">192.168</span>.1.95:6379 <span class="token number">192.168</span>.1.95:6380 <span class="token number">192.168</span>.1.96:6379 <span class="token number">192.168</span>.1.96:6380 <span class="token number">192.168</span>.1.97:6379 <span class="token number">192.168</span>.1.97:6380  --cluster-replicas <span class="token number">1</span><span class="token comment"># 中途输入 yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>测试集群</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 进入集群节点</span>redis-cli <span class="token parameter variable">-c</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.1.95 <span class="token parameter variable">-p</span> <span class="token number">6379</span> <span class="token parameter variable">-a</span> password<span class="token comment"># 查看集群节点信息</span>cluster info<span class="token comment"># 查看配置信息</span>CONFIG GET *<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL语句优化技巧</title>
    <link href="/f83e393e93b5/"/>
    <url>/f83e393e93b5/</url>
    
    <content type="html"><![CDATA[<p>#技巧1  比较运算符能用 “&#x3D;”就不用“&lt;&gt;”<br>“<code>=</code>”增加了索引的使用几率。</p><p>#技巧2  明知只有一条查询结果，那请使用 “LIMIT 1”<br>“LIMIT 1”可以避免全表扫描，找到对应结果就不会再继续扫描了。</p><p>#技巧3  为列选择合适的数据类型<br>能用<code>TINYINT</code>就不用<code>SMALLINT</code>，能用<code>SMALLINT</code>就不用<code>INT</code>，道理你懂的，磁盘和内存消耗越小越好嘛。</p><p>#技巧4  将大的DELETE，UPDATE or INSERT 查询变成多个小查询<br>能写一个几十行、几百行的 SQL 语句是不是显得逼格很高？然而，为了达到更好的性能以及更好的数据控制，你可以将他们变成多个小查询。</p><p>#技巧5  使用UNION ALL 代替 UNION，如果结果集允许重复的话<br>因为 <code>UNION ALL</code> 不去重，效率高于 <code>UNION</code>。</p><p>#技巧6  为获得相同结果集的多次执行，请保持SQL语句前后一致<br>这样做的目的是为了充分利用查询缓冲。</p><p>比如根据地域和产品id查询产品价格，第一次使用了：</p><figure><div class="code-wrapper"><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT price FROM order WHERE id &#x3D; 123456 and region &#x3D; &#39;BEIJING&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>那么第二次同样的查询，请保持以上语句的一致性，比如不要将<code>where</code>语句里面的<code>id</code>和<code>region</code>位置调换顺序。</p><p>#技巧7  尽量避免使用 “SELECT *”<br>如果不查询表中所有的列，尽量避免使用 <code>SELECT *</code>，因为它会进行全表扫描，不能有效利用索引，增大了数据库服务器的负担，以及它与应用程序客户端之间的网络IO开销。</p><p>#技巧8  WHERE 子句里面的列尽量被索引<br>只是“尽量”哦，并不是说所有的列。因地制宜，根据实际情况进行调整，因为有时索引太多也会降低性能。</p><p>#技巧9  JOIN 子句里面的列尽量被索引<br>同样只是“尽量”哦，并不是说所有的列。</p><p>#技巧10  ORDER BY 的列尽量被索引<br><code>ORDER BY</code>的列如果被索引，性能也会更好。</p><p>#技巧11  使用 LIMIT 实现分页逻辑<br>不仅提高了性能，同时减少了不必要的数据库和应用间的网络传输。</p><p>#技巧12  使用 EXPLAIN 关键字去查看执行计划<br>EXPLAIN 可以检查索引使用情况以及扫描的行。</p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库规范设计说明书</title>
    <link href="/bf3dbc9cf309/"/>
    <url>/bf3dbc9cf309/</url>
    
    <content type="html"><![CDATA[<h1 id="1-建表规约"><a href="#1-建表规约" class="headerlink" title="1.建表规约"></a>1.建表规约</h1><ol><li><p><strong>【强制】</strong>表达是与否概念的字段，必须使用is_xxx的方式命名，数据类型是tinyint(1)</p><p>（ 1表示是，0表示否）。 </p><p>说明：任何字段如果为非负数，必须是无符号。 </p><p>正例：表达逻辑删除的字段名is_deleted，1 表示删除，0 表示未删除。 </p></li><li><p><strong>【强制】</strong>表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。 </p><p>说明：MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。 </p><p>正例：aliyun_admin，rdc_config，level3_name 反例：AliyunAdmin，rdcConfig，level_3_name </p></li><li><p><strong>【强制】</strong>表名不使用复数名词。 </p><p>说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于模型类名也是单数形式，符合表达习惯。 </p></li><li><p><strong>【强制】</strong>禁用保留字，如desc、range、match、delayed等，请参考MySQL官方保留字。 官方文档链接：<a target="_blank" rel="noopener" href="https://dev.mysql.com/doc/refman/5.7/en/keywords.html">https://dev.mysql.com/doc/refman/5.7/en/keywords.html</a></p></li><li><p><strong>【强制】</strong>主键索引名为pk_字段名；唯一索引名为uk_字段名；普通索引名则为idx_字段名。 </p><p>说明：pk_ 即primary key；uk_ 即 unique key；idx_ 即index的简称。 </p></li><li><p><strong>【强制】</strong>小数类型为decimal，禁止使用float和double。 </p><p>说明：float和double在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果。如果存储的数据范围超过decimal的范围，建议将数据拆成整数和小数分开存储。 </p></li><li><p><strong>【强制】</strong>如果存储的字符串长度几乎相等，使用char定长字符串类型。 </p></li><li><p><strong>【强制】</strong>varchar是可变长字符串，不预先分配存储空间，长度不要超过5000，如果存储长度大于此值，定义字段类型为text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。 </p></li><li><p><strong>【强制】</strong>表必备字段：id </p></li><li><p><strong>【强制】</strong>表中每个字段都应当解释该字段的含义</p><p>说明：在建表初期或修改字段后都应当说明字段的意思，以便后期维护方便，如下</p><p>comment_num int(11) DEFAULT ‘0’ COMMENT ‘评论数’</p></li><li><p>【推荐】表的命名最好是加上“业务名称_表的作用”。 </p><p>正例：alipay_task &#x2F; force_project &#x2F; trade_config </p></li><li><p>【推荐】库名与应用名称尽量一致。 </p></li><li><p>【推荐】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。 </p></li><li><p>【推荐】字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循： </p><p>1）    不是频繁修改的字段。 </p><p>2）    不是varchar超长字段，更不能是text字段。 </p><p>正例：商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。 </p></li><li><p>【推荐】单表行数超过500万行或者单表容量超过2GB，才推荐进行分库分表。 </p><p>说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。 </p></li><li><p>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</p></li></ol><h1 id="2-索引规约"><a href="#2-索引规约" class="headerlink" title="2 索引规约"></a>2 索引规约</h1><ol><li><p><strong>【强制】</strong>业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。 </p><p>说明：不要以为唯一索引影响了insert速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。 </p></li><li><p><strong>【强制】</strong>超过三个表禁止join。需要join的字段，数据类型必须绝对一致；多表关联查询时，保证被关联的字段需要有索引。 </p><p>说明：即使双表join也要注意表索引、SQL性能。 </p></li><li><p><strong>【强制】</strong>在varchar字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度即可。 </p><p>说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为20的索引，区分度会高达90%以上，可以使用count(distinct left(列名, 索引长度))&#x2F;count(*)的区分度来确定。 </p></li><li><p><strong>【强制】</strong>页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。 </p><p>说明：索引文件具有B-Tree的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索引。 </p></li><li><p>【推荐】如果有order by的场景，请注意利用索引的有序性。order by 最后的字段是组合索引的一部分，并且放在索引组合顺序的最后，避免出现file_sort的情况，影响查询性能。 </p><p>正例：where a&#x3D;? and b&#x3D;? order by c; 索引：a_b_c </p><p>反例：索引中有范围查找，那么索引有序性无法利用，如：WHERE a&gt;10 ORDER BY b; 索引 a_b无法排序。 </p></li><li><p>【推荐】利用覆盖索引来进行查询操作，避免回表。 </p><p>说明：如果一本书需要知道第11章是什么标题，会翻开第11章对应的那一页吗？目录浏览一下就好，这个目录就是起到覆盖索引的作用。 </p><p>正例：能够建立索引的种类：主键索引、唯一索引、普通索引，而覆盖索引是一种查询的一种效果，用explain的结果，extra列会出现：using index。 </p></li><li><p>【推荐】利用延迟关联或者子查询优化超多分页场景。 </p><p>说明：MySQL并不是跳过offset行，而是取offset+N行，然后返回放弃前offset行，返回 N行，那当offset特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行SQL改写。 </p><p>正例：先快速定位需要获取的id段，然后再关联：</p></li></ol><p>​      SELECT a.* FROM 表1 a, (select id from 表1 where 条件 LIMIT 100000,20 ) b where a.id&#x3D;b.id </p><ol start="8"><li><p>【推荐】 SQL性能优化的目标：至少要达到 range 级别，要求是ref级别，如果可以是consts 最好。说明： </p><p>1）    consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。 </p><p>2）    ref 指的是使用普通的索引（normal index）。 </p><p>3）    range 对索引进行范围检索。 </p><p>反例：explain表的结果，type&#x3D;index，索引物理文件全扫描，速度非常慢，这个index级别比较range还低，与全表扫描是小巫见大巫。 </p></li><li><p>【推荐】建组合索引的时候，区分度最高的在最左边。 </p><p>正例：如果where a&#x3D;? and b&#x3D;? ，a列的几乎接近于唯一值，那么只需要单建idx_a索引即可。 </p><p>说明：存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如：where a&gt;? </p><p>and b&#x3D;? 那么即使a的区分度更高，也必须把b放在索引的最前列。 </p></li><li><p>【推荐】防止因字段类型不同造成的隐式转换，导致索引失效。 </p></li><li><p>【参考】创建索引时避免有如下极端误解： </p><p>1）    宁滥勿缺。认为一个查询就需要建一个索引。 </p><p>2）    宁缺勿滥。认为索引会消耗空间、严重拖慢更新和新增速度。 </p><p>3）    抵制惟一索引。认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。</p></li></ol><p>​参考阿里开发规范</p>]]></content>
    
    
    <categories>
      
      <category>爬亿爬</category>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS</title>
    <link href="/19bb5016b53c/"/>
    <url>/19bb5016b53c/</url>
    
    <content type="html"><![CDATA[<h1 id="虚拟机安装"><a href="#虚拟机安装" class="headerlink" title="虚拟机安装"></a>虚拟机安装</h1><h2 id="CentOS-7"><a href="#CentOS-7" class="headerlink" title="CentOS 7"></a>CentOS 7</h2><blockquote><p>CentOS-7-x86_64-DVD-2009.iso<br>下载地址： <a target="_blank" rel="noopener" href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/">https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64&#x2F;</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">添加虚拟机 , Linux版本 CentOS <span class="token number">7</span> <span class="token number">64</span>位 ，桥接 ，2T 磁盘 。进入安装界面 ，中文 ， 网络 centos7 , 时间 上海 ，安装位置 我要配置分区（/ 为 <span class="token number">1945.12</span> GiB /home 为 <span class="token number">50</span> GiB）设置root密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="CentOS-8"><a href="#CentOS-8" class="headerlink" title="CentOS 8"></a>CentOS 8</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">下载地址： https://www.centos.org/download/再去找 阿里云的下载地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><hr><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看内核版本</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token function">uname</span> <span class="token parameter variable">-a</span><span class="token comment"># 查看系统中的全部内核</span><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> kernel<span class="token comment"># 卸载多余内核</span>yum remove kernel-x.xx.x<span class="token comment"># 重启</span><span class="token function">reboot</span><span class="token comment"># 关机</span>poweroff<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="设置静态IP"><a href="#设置静态IP" class="headerlink" title="设置静态IP"></a>设置静态IP</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># /etc/sysconfig/network-scripts/ 对应网卡</span><span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.1.77<span class="token assign-left variable">NETMASK</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.1.1<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">119.29</span>.29.29<span class="token assign-left variable">DNS2</span><span class="token operator">=</span><span class="token number">8.8</span>.4.4<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span><span class="token string">"static"</span><span class="token comment">#重启网卡</span><span class="token function">service</span> network restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看防火墙状态</span>systemctl status firewalld.service<span class="token comment"># 开启防火墙</span>systemctl start firewalld.service<span class="token comment"># 关闭并禁用防火墙</span>systemctl stop firewalld <span class="token operator">&amp;</span> systemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="yum设置"><a href="#yum设置" class="headerlink" title="yum设置"></a>yum设置</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 更换yum阿里云镜像</span><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token comment">## centos7</span><span class="token function">mv</span> CentOS-BaseOS.repo CentOS-BaseOS.repo.backup<span class="token function">curl</span> <span class="token parameter variable">-o</span> CentOS-BaseOS.repo http://mirrors.aliyun.com/repo/Centos-7.repo<span class="token comment">## centos8</span><span class="token function">mv</span> CentOS-Stream-BaseOS.repo CentOS-Stream-BaseOS.repo.backup<span class="token function">curl</span> <span class="token parameter variable">-o</span> CentOS-Stream-BaseOS.repo http://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repoyum clean allyum makecache<span class="token comment"># dnf makecache</span><span class="token comment"># dnf update -y</span><span class="token comment"># 安装 net-tools</span>yum <span class="token function">install</span> net-tools <span class="token parameter variable">-y</span><span class="token comment"># 更新yum到最新</span>yum update <span class="token parameter variable">-y</span>yum <span class="token function">install</span> yum-utils <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置阿里云镜像</span>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<span class="token comment"># 安装Docker</span>yum <span class="token function">install</span> <span class="token parameter variable">--allowerasing</span> docker-ce docker-ce-cli containerd.io<span class="token comment"># 设置开机自启</span>systemctl start <span class="token function">docker</span> <span class="token operator">&amp;</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span><span class="token comment"># 验证安装是否成功</span><span class="token function">docker</span> version<span class="token comment"># 配置国内的docker源</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker<span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF&#123;  "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"],  "registry-mirrors": ["https://mirror.ccs.tencentyun.com"],  "registry-mirrors": ["https://registry.docker-cn.com"],  "registry-mirrors": ["http://hub-mirror.c.163.com"]&#125;EOF</span><span class="token comment"># 重载配置并重启docker</span>systemctl daemon-reloadsystemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Docker安装MySQL服务"><a href="#Docker安装MySQL服务" class="headerlink" title="Docker安装MySQL服务"></a>Docker安装MySQL服务</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装 MySQL 5.7</span><span class="token function">docker</span> pull mysql:5.7.36<span class="token function">docker</span> run <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-p</span> <span class="token number">3309</span>:3306 <span class="token parameter variable">-v</span> /home/mysql/data:/var/lib/mysql <span class="token parameter variable">-v</span> /home/mysql/conf.d:/etc/mysql/conf.d <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>trstj666 <span class="token parameter variable">-d</span> mysql:5.7.36<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="宝塔BT"><a href="#宝塔BT" class="headerlink" title="宝塔BT"></a>宝塔BT</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.bt.cn/bbs/thread-19376-1-1.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux命令</title>
    <link href="/611fb94ae4b4/"/>
    <url>/611fb94ae4b4/</url>
    
    <content type="html"><![CDATA[<h2 id="基础认知"><a href="#基础认知" class="headerlink" title="基础认知"></a>基础认知</h2><blockquote><p>Linux 是一种自由和开放源码的类 UNIX 操作系统。</p><p>Linux 英文解释为 <strong>Linux is not Unix</strong>。</p><p>Linux内核最初是在 1991 由林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时创立的，主要受到 Minix 和 Unix 思想的启发。</p><p>目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p></blockquote><h2 id="系统内核"><a href="#系统内核" class="headerlink" title="系统内核"></a>系统内核</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-a</span><span class="token comment"># 查看操作系统版本及处理器架构信息</span><span class="token comment"># Linux centos8 4.18.0-305.17.1.el8_4.x86_64 #1 SMP Wed Sep 8 14:00:07 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token comment"># 查询内核版本 （主版本号.次版本号.末版本号）</span><span class="token comment"># 4.18.0-305.17.1.el8_4.x86_64</span><span class="token function">uname</span> <span class="token parameter variable">-m</span>arch<span class="token comment"># 查看处理器架构</span><span class="token function">cat</span> /proc/version<span class="token comment"># 查看Linux内核版本</span><span class="token comment"># Linux version 4.18.0-305.17.1.el8_4.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 8.4.1 20200928 (Red Hat 8.4.1-1) (GCC)) #1 SMP Wed Sep 8 14:00:07 UTC 2021</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="系统设置、性能负载情况"><a href="#系统设置、性能负载情况" class="headerlink" title="系统设置、性能负载情况"></a>系统设置、性能负载情况</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">hostname</span><span class="token comment"># 查看计算机名</span><span class="token function">who</span><span class="token comment"># 查看当前登录系统所有的用户</span><span class="token function">who</span> am i<span class="token function">whoami</span><span class="token comment"># 查看当前用户</span><span class="token function">date</span><span class="token comment"># 查看系统时间</span><span class="token function">cal</span> <span class="token number">2022</span><span class="token comment"># 查看2022年日历</span><span class="token function">env</span><span class="token comment"># 查看系统环境变量</span>lsmod<span class="token comment"># 查看已加载的系统模块</span>lsusb <span class="token parameter variable">-tv</span><span class="token comment"># 查看USB设备信息</span>lspci <span class="token parameter variable">-tv</span><span class="token comment"># 查看PCI设备信息</span><span class="token function">cat</span> /proc/cpuinfo<span class="token comment"># 查看CPU设备信息</span><span class="token function">cat</span> /proc/interrupts<span class="token comment"># 查看中断（逻辑中断号、中断在各CPU上发生的次数，中断所属父设备名称、硬件中断号、中断触发方式(电平或边沿)、中断名称）</span><span class="token function">cat</span> /proc/loadavg<span class="token comment"># 查看系统平均负载</span><span class="token comment"># 前三个是1、5、15分钟内的平均进程数；第四个的分子是正在运行的进程数，分母是进程总数；最后一个最近运行的进程ID号</span><span class="token comment"># 0.03 0.04 0.08 1/505 185136</span><span class="token comment"># 一般来说每个CPU的当前活动进程数不大于3那么系统的性能就是良好的。如果每个CPU的任务数大于5，那么就表明机器的性能有严重问题。对于上面的例子来说，假设系统有8个CPU，那么其每个CPU在1分钟内的进程数为：0.32/8=0.04。</span><span class="token function">uptime</span><span class="token comment"># 查看系统运行时间、用户数、平均负载</span><span class="token comment"># 11:14:41 up  1:18,  2 users,  load average: 0.11, 0.16, 0.13</span><span class="token function">grep</span> MemTotal /proc/meminfo<span class="token comment"># 查看内存总量</span><span class="token comment"># MemTotal:        7927768 kB</span><span class="token function">grep</span> MemFree /proc/meminfo<span class="token comment"># 查看空闲内存量</span><span class="token comment"># MemFree:         6390732 kB</span><span class="token function">free</span> <span class="token parameter variable">-m</span><span class="token comment"># 查看内存使用量和交换区使用量</span><span class="token function">vmstat</span> <span class="token number">1</span> <span class="token number">10</span><span class="token comment"># 采集系统状态（1秒/次，共10次）</span>sar <span class="token parameter variable">-u</span> <span class="token number">1</span> <span class="token number">10</span><span class="token comment"># 查看CPU性能（1秒/次，共10次）</span>sar <span class="token parameter variable">-d</span> <span class="token number">1</span> <span class="token number">10</span><span class="token comment"># 查看磁盘性能（1秒/次，共10次）</span>iostat<span class="token comment"># 查看io读写和cpu使用情况</span><span class="token function">top</span><span class="token comment"># 实时查看cpu、内存、进程等情况</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><blockquote><p>命令提示符：$ 普通用户 ；# root用户</p><p>命令和路径补全：<code>Tab</code> 键</p><p><code>type</code> 用于判断另外一个命令是否是内置命令（内置命令在系统启动时就调入内存，是常驻内存的，所以执行效率高。而外部命令是系统的软件功能，用户需要时才从硬盘中读入内存。）</p><blockquote><p><code>man xxx</code>  ：获取 xxx命令 的帮助（man自身帮助，<code>man 1 man</code>）</p><p><code>help xxx</code> ：获取内置命令的帮助</p><p><code>xxx --help</code> ：获取外部命令的帮助</p><p><code>info xxx</code> ：获取更丰富的帮助信息</p></blockquote></blockquote><h2 id="重启及关机"><a href="#重启及关机" class="headerlink" title="重启及关机"></a>重启及关机</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sync</span><span class="token comment"># Linux sync命令用于数据同步,sync命令是在关闭Linux系统时使用的。</span><span class="token comment"># Linux 系统中欲写入硬盘的资料有的时候为了效率起见，会写到 filesystem buffer 中，这个 buffer 是一块记忆体空间，如果欲写入硬盘的资料存于此 buffer 中，而系统又突然断电的话，那么资料就会流失了，sync 指令会将存于 buffer 中的资料强制写入硬盘中。</span><span class="token function">reboot</span>init <span class="token number">6</span><span class="token function">shutdown</span> <span class="token parameter variable">-r</span> now<span class="token comment"># 重启</span><span class="token function">shutdown</span> <span class="token parameter variable">-r</span> <span class="token number">10</span><span class="token comment"># 10分钟后重启</span><span class="token function">shutdown</span> <span class="token parameter variable">-r</span> 00:00<span class="token comment"># 0点重启</span>poweroff<span class="token function">halt</span>init <span class="token number">0</span>telinit <span class="token number">0</span><span class="token comment"># 关机</span><span class="token function">shutdown</span> <span class="token parameter variable">-h</span> <span class="token number">10</span><span class="token comment"># 10分钟后关机</span><span class="token function">shutdown</span> <span class="token parameter variable">-h</span> 00:00<span class="token comment"># 0点关机</span><span class="token function">shutdown</span> <span class="token parameter variable">-c</span><span class="token comment"># 取消关机</span><span class="token builtin class-name">logout</span><span class="token comment"># 退出shell</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="文件及目录"><a href="#文件及目录" class="headerlink" title="文件及目录"></a>文件及目录</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span class="token comment"># 查看当前文件目录列表</span><span class="token function">ls</span> <span class="token parameter variable">-lhF</span><span class="token comment"># l:列表 h:增强文件大小易读性 F:增强文件和目录区分</span>tree<span class="token comment"># 树形查看文件和目录</span><span class="token builtin class-name">pwd</span><span class="token comment"># 查看当前所在路径</span><span class="token builtin class-name">cd</span><span class="token comment"># 进入当前用户主目录</span><span class="token builtin class-name">cd</span> xxx<span class="token comment"># 进入xxx目录</span><span class="token function">mkdir</span> xxx yyy<span class="token comment"># 创建xxx、yyy两个目录</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> zzz/xxx/yyy<span class="token comment"># 创建目录树</span><span class="token function">touch</span> zzz/xxx/yyy/test.txt<span class="token comment"># 指定目录创建文件</span><span class="token function">touch</span> zzz/xxx/test<span class="token punctuation">&#123;</span>0001<span class="token punctuation">..</span><span class="token number">2000</span><span class="token punctuation">&#125;</span>.txt<span class="token comment"># 创建2000个文件</span><span class="token function">find</span> zzz/xxx <span class="token parameter variable">-name</span> test0666.txt<span class="token comment"># 搜索文件</span><span class="token function">find</span> zzz/xxx <span class="token parameter variable">-name</span> *66.txt<span class="token comment"># 模糊搜索文件</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> zzz/xxx/yyy/test.txt testlink<span class="token comment"># 创建软连接</span><span class="token function">ln</span> zzz/xxx/yyy/test.txt testlink2<span class="token comment"># 创建物理连接</span><span class="token function">cp</span> zzz/xxx/yyy/test.txt zzz/xxx/yyy/text-copy.txt<span class="token comment"># 复制文件</span><span class="token function">cp</span> zzz/xxx/* xxx/<span class="token comment"># 复制所有文件到指定目录</span><span class="token function">cp</span> <span class="token parameter variable">-r</span> zzz/xxx/ yyy/<span class="token comment"># 复制所有文件和文件夹到指定目录</span><span class="token function">mv</span> zzz/xxx/yyy/test.txt zzz/<span class="token comment"># 移动文件</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> xxx yyy<span class="token comment"># 删除xxx和yyy两个目录及其子目录下的所有内容</span><span class="token function">chmod</span> <span class="token number">777</span> <span class="token parameter variable">-R</span> zzz<span class="token comment"># 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)</span><span class="token function">cat</span> /etc/sysconfig/network-scripts/ifcfg-ens32<span class="token comment"># 查看文件内容</span><span class="token function">cat</span> <span class="token parameter variable">-n</span> /etc/sysconfig/network-scripts/ifcfg-ens32<span class="token comment"># 查看文件内容（带行号）</span><span class="token function">tac</span> /etc/sysconfig/network-scripts/ifcfg-ens32<span class="token comment"># 查看文件内容（从最后一行反向查看内容）</span><span class="token function">wc</span> /etc/sysconfig/network-scripts/ifcfg-ens32<span class="token comment"># 统计文件内容的行数、单词数、字节数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="文件权限八进制语法"><a href="#文件权限八进制语法" class="headerlink" title="文件权限八进制语法"></a>文件权限八进制语法</h3><table><thead><tr><th align="left">#</th><th align="left">权限</th><th align="left">rwx</th><th align="left">二进制</th></tr></thead><tbody><tr><td align="left">7</td><td align="left">读 + 写 + 执行</td><td align="left">rwx</td><td align="left">111</td></tr><tr><td align="left">6</td><td align="left">读 + 写</td><td align="left">rw-</td><td align="left">110</td></tr><tr><td align="left">5</td><td align="left">读 + 执行</td><td align="left">r-x</td><td align="left">101</td></tr><tr><td align="left">4</td><td align="left">只读</td><td align="left">r–</td><td align="left">100</td></tr><tr><td align="left">3</td><td align="left">写 + 执行</td><td align="left">-wx</td><td align="left">011</td></tr><tr><td align="left">2</td><td align="left">只写</td><td align="left">-w-</td><td align="left">010</td></tr><tr><td align="left">1</td><td align="left">只执行</td><td align="left">–x</td><td align="left">001</td></tr><tr><td align="left">0</td><td align="left">无</td><td align="left">—</td><td align="left">000</td></tr></tbody></table><p>例如， 765 将这样解释：</p><ul><li>所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7。</li><li>用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6。</li><li>其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5。</li></ul><h2 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h2><blockquote><p>进入插入模式：<code>iloOaA</code></p><ul><li><code>i</code> 在当前光标位置，进入到插入模式</li><li><code>I</code> 移动到当前光标所在行首，再进入到插入模式</li><li><code>a</code> 在当前光标位置之后，进入到插入模式</li><li><code>A</code> 移动到当前光标位置所在行尾，再进入到插入模式</li><li><code>o</code> 在当前光标下一行，进入到插入模式</li><li><code>O</code> 在当前光标上一行，进入到插入模式</li></ul><p>常用指令：</p><ul><li><code>v</code>、<code>V</code>、<code>ctrl+v</code> 进入可视模式（字符可视化、行可视化、块可视化）</li><li><code>h j k l</code> 上下左右</li><li><code>u</code>  撤销</li><li><code>ctrl+r</code> 重做</li><li><code>X</code> 删除单个字符</li><li><code>G</code> 定位指定的行</li><li><code>^ $</code> 定位到行开头结尾</li><li><code>dd d$</code> 剪切</li><li><code>yy y$</code> 复制</li><li><code>p</code> 粘贴</li><li><code>r</code> 替换单个字符</li><li><code>:</code> 进入命令模式</li><li><code>esc</code> 回到正常模式</li></ul></blockquote><blockquote><p>命令模式：</p><ul><li><code>/</code> 查找</li><li><code>s/old/new/</code> 替换</li><li><code>w</code> 写入文件</li><li><code>W</code> 另存文件</li><li><code>q</code> 退出</li><li><code>q!</code> 退出不保存</li><li><code>!cmd</code> 执行命令</li></ul></blockquote><h2 id="压缩及解压"><a href="#压缩及解压" class="headerlink" title="压缩及解压"></a>压缩及解压</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">zip</span> xxx.zip <span class="token function">file</span><span class="token comment"># 压缩单个文件</span><span class="token function">zip</span> <span class="token parameter variable">-r</span> xxx.zip file1 file2 dir1<span class="token comment"># 压缩多个文件及目录</span><span class="token function">unzip</span> xxx.zip<span class="token comment"># 解压</span><span class="token function">tar</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>dir1/file1 <span class="token parameter variable">-zcvf</span> xxx.tar dir1<span class="token comment"># 将dir1进行压缩时，排除其中的file1，压缩后的文件名为 xxx.tar</span><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> xxx.tar<span class="token comment"># 解压</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> firewalld status<span class="token comment"># 查看服务状态</span><span class="token function">service</span> firewalld start<span class="token comment"># 启动服务</span><span class="token function">service</span> firewalld restart<span class="token comment"># 重启服务</span><span class="token function">service</span> firewalld stop<span class="token comment"># 停止服务</span>systemctl <span class="token builtin class-name">enable</span> firewalld<span class="token comment"># 开机自启动</span>systemctl disable firewalld<span class="token comment"># 关闭开机自启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> <span class="token parameter variable">-ef</span><span class="token comment"># 显示所有进程</span><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span><span class="token comment"># 根据关键词过滤进程</span><span class="token function">kill</span> <span class="token parameter variable">-9</span> pid号<span class="token comment"># 杀死指定pid号的进程 参数：1 (HUP)：重新加载进程；9 (KILL)：杀死一个进程；15 (TERM)：正常停止一个进程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span><span class="token comment"># 查看所有网卡信息</span><span class="token function">ifconfig</span> ens32<span class="token comment"># 查看指定网卡信息</span>route <span class="token parameter variable">-n</span><span class="token comment"># 查看路由表</span><span class="token function">netstat</span> <span class="token parameter variable">-lntp</span><span class="token comment"># 查看所有监听端口</span><span class="token function">netstat</span> <span class="token parameter variable">-antp</span><span class="token comment"># 查看已建立的TCP连接</span><span class="token function">netstat</span> <span class="token parameter variable">-lutp</span><span class="token comment"># 查看TCP/UDP状态信息</span><span class="token function">scp</span> root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/<span class="token comment"># 从远端复制文件到本地目录</span><span class="token function">scp</span> <span class="token parameter variable">-r</span> root@10.10.10.10:/opt/soft/mongodb /opt/soft/<span class="token comment"># 从远端复制目录到本地目录</span><span class="token function">scp</span> /opt/soft/java.tar.gz root@10.10.10.10:/opt/soft/scptest<span class="token comment"># 上传本地文件到远程机器指定目录</span><span class="token function">scp</span> <span class="token parameter variable">-r</span> /opt/soft/java_home root@10.10.10.10:/opt/soft/scptest<span class="token comment"># 上传本地目录到远程机器指定目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> <span class="token parameter variable">-l</span><span class="token comment"># 查看所有磁盘分区信息</span><span class="token function">swapon</span> <span class="token parameter variable">-s</span><span class="token comment"># 查看所有交换区信息</span><span class="token function">df</span> <span class="token parameter variable">-h</span><span class="token comment"># 查看磁盘容量、已用、可用、已用百分比及挂载点</span><span class="token function">du</span> <span class="token parameter variable">-sh</span> /home/<span class="token comment"># 递归查看指定目录总容量</span><span class="token function">mount</span> /dev/hda2 /mnt/hda2<span class="token comment"># 挂载hda2</span><span class="token function">mount</span> <span class="token parameter variable">-t</span> ntfs /dev/sdc1 /mnt/usbhd1<span class="token comment"># 挂载指定文件系统的类型</span><span class="token function">mount</span> <span class="token parameter variable">-o</span> loop xxx.iso /mnt/cdrom<span class="token comment"># 挂载iso文件</span><span class="token function">mount</span> /dev/sda1 /mnt/usbdisk<span class="token comment"># 挂载usb设备</span><span class="token function">umount</span> <span class="token parameter variable">-v</span> /dev/sda1<span class="token comment"># 通过设备名卸载</span><span class="token function">umount</span> <span class="token parameter variable">-v</span> /mnt/mymnt<span class="token comment"># 通过挂载点卸载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="用户及用户组"><a href="#用户及用户组" class="headerlink" title="用户及用户组"></a>用户及用户组</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cut</span> -d: <span class="token parameter variable">-f1</span> /etc/passwd<span class="token comment"># 查看系统中的所有用户</span><span class="token function">cut</span> -d: <span class="token parameter variable">-f1</span> /etc/group<span class="token comment"># 查看系统中的所有用户组</span><span class="token function">useradd</span> new_account<span class="token comment"># 创建用户</span><span class="token function">groupadd</span> new_group<span class="token comment"># 创建用户组</span><span class="token function">id</span> new_account<span class="token comment"># 查看指定账号信息</span><span class="token comment">#uid=1001(new_account) gid=1001(new_account) 组=1001(new_account)</span><span class="token function">groups</span> new_account<span class="token comment"># 查看指定账号所在组</span><span class="token function">usermod</span> <span class="token parameter variable">-aG</span> new_group new_account<span class="token comment"># 添加用户到组</span><span class="token comment"># uid=1001(new_account) gid=1001(new_account) 组=1001(new_account),1002(new_group)</span><span class="token function">usermod</span> <span class="token parameter variable">-g</span> new_group new_account<span class="token comment"># 修改用户组</span><span class="token comment"># uid=1001(new_account) gid=1002(new_group) 组=1002(new_group)</span><span class="token function">groupmod</span> <span class="token parameter variable">-n</span> new_group_rename new_group<span class="token comment"># 重命名用户组</span><span class="token function">groupdel</span> new_account<span class="token comment"># 删除用户组</span><span class="token function">userdel</span> <span class="token parameter variable">-r</span> new_account<span class="token comment"># 删除用户</span><span class="token function">su</span> - new_account<span class="token comment"># 切换用户</span><span class="token function">passwd</span><span class="token comment"># 修改登录密码</span><span class="token function">passwd</span> new_account<span class="token comment"># 修改某个账号的登录密码</span>w<span class="token comment"># 查看活动用户</span>last<span class="token comment"># 查看用户登录日志</span><span class="token function">crontab</span> <span class="token parameter variable">-l</span><span class="token comment"># 当前用户计划任务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="DPKG"><a href="#DPKG" class="headerlink" title="DPKG"></a>DPKG</h3><blockquote><p>Debian package manager</p></blockquote><h3 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h3><blockquote><p>Advanced package tool 是一个在 Debian 和 Ubuntu 中的 Shell 前端软件包管理器。</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-cache</span> search pkg_name<span class="token comment"># 查找程序包</span><span class="token function">apt-cache</span> show pkg_name<span class="token comment"># 获取包概览信息</span><span class="token function">apt-get</span> <span class="token function">install</span> pkg_name<span class="token comment"># 安装、升级软件包</span><span class="token function">apt-get</span> purge pkg_name<span class="token comment"># 卸载软件（含配置）</span><span class="token function">apt-get</span> remove pkg_name<span class="token comment"># 卸载软件（不含配置）</span><span class="token function">apt-get</span> update<span class="token comment"># 更新包索引</span><span class="token function">apt-get</span> upgrade<span class="token comment"># 更新已安装的软件包</span><span class="token function">apt-get</span> clean<span class="token comment"># 清理缓存</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h3><blockquote><p>redhat package manager 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。</p><p><a target="_blank" rel="noopener" href="https://www.runoob.com/linux/linux-comm-rpm.html">https://www.runoob.com/linux/linux-comm-rpm.html</a></p></blockquote><h3 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h3><blockquote><p>Yellow dog Updater, Modified 是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。</p><p>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p><p><a target="_blank" rel="noopener" href="https://www.runoob.com/linux/linux-yum.html">https://www.runoob.com/linux/linux-yum.html</a></p></blockquote><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><a target="_blank" rel="noopener" href="https://www.w3cschool.cn/linux/linux-command-manual.html">Linux 命令大全 👉 https://www.w3cschool.cn/linux/linux-command-manual.html</a></p>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu</title>
    <link href="/ea6466f250b7/"/>
    <url>/ea6466f250b7/</url>
    
    <content type="html"><![CDATA[<h2 id="系统镜像"><a href="#系统镜像" class="headerlink" title="系统镜像"></a>系统镜像</h2><blockquote><p>Ubuntu桌面系统 👉 <a target="_blank" rel="noopener" href="https://cn.ubuntu.com/download/desktop">https://cn.ubuntu.com/download/desktop</a></p></blockquote><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="查询版本"><a href="#查询版本" class="headerlink" title="查询版本"></a>查询版本</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsb_release <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="开启-root-账户"><a href="#开启-root-账户" class="headerlink" title="开启 root 账户"></a>开启 root 账户</h3><ol><li><p>登录一个普通账户，修改root密码，按提示输入</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>修改 <code>50-ubuntu.conf</code> 配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vi操作文件</span><span class="token function">sudo</span> <span class="token function">vi</span> /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf<span class="token comment"># 增加 greeter-show-manual-login = true</span><span class="token comment"># 50-ubuntu.conf 配置修改，如下</span>greeter-show-manual-login <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>Seat:*<span class="token punctuation">]</span>user-session<span class="token operator">=</span>ubuntu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>修改 <code>gdm-autologin</code> 和 <code>gdm-password</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 分别注释 gdm-autologin 和 gdm-password 的 auth required pam_succeed_if.so user != root quiet_success 这行</span><span class="token comment"># vi操作文件</span><span class="token function">sudo</span> <span class="token function">vi</span> /etc/pam.d/gdm-autologin<span class="token function">sudo</span> <span class="token function">vi</span> /etc/pam.d/gdm-password<span class="token comment"># 要注释的地方在文件的第三行，auth required pam_succeed_if.so user != root quiet_success 这行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>修改 <code>/root/.profile</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /root/.profile<span class="token comment"># 添加如下代码</span><span class="token function">tty</span> <span class="token parameter variable">-s</span> <span class="token operator">&amp;&amp;</span> mesg n <span class="token operator">||</span> <span class="token boolean">true</span>mesg n <span class="token operator">||</span> <span class="token boolean">true</span><span class="token comment"># 修改结果如下</span><span class="token comment"># ~/.profile: executed by Bourne-compatible login shells.</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token environment constant">$BASH</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> ~/.bashrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">.</span> ~/.bashrc  <span class="token keyword">fi</span><span class="token keyword">fi</span><span class="token function">tty</span> <span class="token parameter variable">-s</span> <span class="token operator">&amp;&amp;</span> medh n <span class="token operator">||</span> <span class="token boolean">true</span>mesg n <span class="token operator">||</span> <span class="token boolean">true</span>mesg n <span class="token operator"><span class="token file-descriptor important">2</span>></span> /dev/null <span class="token operator">||</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>重启生效 <code>reboot</code></p></li></ol><h3 id="开启远程SSH"><a href="#开启远程SSH" class="headerlink" title="开启远程SSH"></a>开启远程SSH</h3><ol><li><p>登录 root 账号，安装SSH</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure></li><li><p>修改 <code>sshd_config</code> 配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 也可以安装vim修改，apt-get install vim</span><span class="token function">vi</span> /etc/ssh/sshd_config<span class="token comment"># 在 sshd_config （不是 ssh_config）的 #PermitRootLogin prohibit-password 的下面，增加这行</span>PermitRootLogin <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>重启</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> <span class="token function">ssh</span> start<span class="token comment"># 上面不好使的话就用 reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li></ol><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 检查 UFW 防火墙状态</span>ufw statusufw status verbose<span class="token comment"># 启用 UFW 防火墙</span>ufw <span class="token builtin class-name">enable</span><span class="token comment"># 允许SSH服务</span>ufw allow <span class="token function">ssh</span><span class="token comment"># 禁用 UFW 防火墙</span>ufw disable<span class="token comment"># 安装 UFW 防火墙 GUI</span><span class="token function">apt</span> <span class="token function">install</span> gufw <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><ol><li><p>更新源</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> apt-transport-https ca-certificates <span class="token function">curl</span> gnupg-agent software-properties-common<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>导入源仓库的 GPG key、添加 Docker APT 软件源</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -add-apt-repository <span class="token string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable"</span><span class="token comment"># 或使用 中国科技大学的 Docker-ce 的源</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -add-apt-repository <span class="token string">"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \<span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li><li><p>更新软件包缓存、安装Docker</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure></li><li><p>安装完成后测试，<code>docker version</code></p></li><li><p>配置国内的docker源</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker<span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF&#123;  "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"],  "registry-mirrors": ["https://mirror.ccs.tencentyun.com"],  "registry-mirrors": ["https://registry.docker-cn.com"],  "registry-mirrors": ["http://hub-mirror.c.163.com"]&#125;EOF</span><span class="token comment"># 重载配置并重启docker</span>systemctl daemon-reloadsystemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>Linux</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown速查笔记</title>
    <link href="/adff29c068e3/"/>
    <url>/adff29c068e3/</url>
    
    <content type="html"><![CDATA[<h1 id="Markdown速查笔记"><a href="#Markdown速查笔记" class="headerlink" title="Markdown速查笔记"></a><font color=#0984e3 face="微软雅黑">Markdown速查笔记</font></h1><p><strong>目        录</strong></p><p>[TOC]</p><h2 id="Typora基本设置"><a href="#Typora基本设置" class="headerlink" title="Typora基本设置"></a>Typora基本设置</h2><h3 id="偏好设置–通用"><a href="#偏好设置–通用" class="headerlink" title="偏好设置–通用"></a>偏好设置–通用</h3><p><img src="/adff29c068e3/image-20210211193134673.png" alt="image-20210211193134673"></p><h3 id="偏好设置–图像"><a href="#偏好设置–图像" class="headerlink" title="偏好设置–图像"></a>偏好设置–图像</h3><p><img src="/adff29c068e3/image-20210211193209920.png" alt="image-20210211193209920"></p><h3 id="偏好设置–Markdown"><a href="#偏好设置–Markdown" class="headerlink" title="偏好设置–Markdown"></a>偏好设置–Markdown</h3><p><img src="/adff29c068e3/image-20210211193314543.png" alt="image-20210211193314543"></p><p>​</p><h2 id="Markdown快速入门"><a href="#Markdown快速入门" class="headerlink" title="Markdown快速入门"></a>Markdown快速入门</h2><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><blockquote><p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用 &#x3D;&#x3D;两个以上空格&#x3D;&#x3D; 加上回车</strong>，当然也可以在段落后面使用一个空行来表示重新开始一个段落。</p></blockquote><hr><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span>……<span class="token title important"><span class="token punctuation">#####</span> 最多六级标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p><em>前后一个星号</em> <code>*前后一个星号*</code></p><hr><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p><strong>前后两个星号</strong><code>**前后两个星号**</code></p><hr><h3 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h3><p><em><strong>斜体加粗</strong></em><code>***斜体加粗***</code></p><hr><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p><u>通过HTML语法实现</u><code>&lt;u&gt;&lt;/u&gt;</code></p><hr><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p><del>前后两个波浪号</del> <code>~~</code></p><hr><h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p>&#x3D;&#x3D;前后两个等于号&#x3D;&#x3D;<code>==前后两个等于号==</code></p><hr><h3 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h3><p>前后一个脱字符面积m^2^体积<code>m^3^</code></p><hr><h3 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h3><p>前后一个波浪号水H<del>2</del>O双氧水<code>H~2~O~2~</code></p><hr><h3 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h3><p>冒号加单词再点选:cow::beer: :smile::100:</p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:cow::beer::smile::100:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>用 | 分隔单元格，用&#x3D;&#x3D;至少一个&#x3D;&#x3D;的 - 分隔表头和其他行，最右侧不用写。但是直接用 <code>Typora</code> 插入表格更快。</p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">name|age-|-a|10b|15c|20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>效果 👇</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>a</td><td>10</td></tr><tr><td>b</td><td>15</td></tr><tr><td>c</td><td>20</td></tr></tbody></table><p>####对齐方式</p><p>看 : 与 - 的位置</p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">left|middle|right:-|:-:|-:左对齐|居中|右对齐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>效果 👇</p><table><thead><tr><th align="left">left</th><th align="center">middle</th><th align="right">right</th></tr></thead><tbody><tr><td align="left">左对齐</td><td align="center">居中</td><td align="right">右对齐</td></tr></tbody></table><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>引用<span class="token blockquote punctuation">>></span>嵌套引用1<span class="token blockquote punctuation">>>></span>嵌套引用2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>效果 👇</p><blockquote><p>引用</p><blockquote><p>嵌套引用1</p><blockquote><p>嵌套引用2</p></blockquote></blockquote></blockquote><hr><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>开头可以用 星号&#x2F;加号&#x2F;减号 任意一个作为标记，再按 <code>空格</code></p><ul><li><p>可以用 <code>*</code></p></li><li><p>可以用 <code>+</code></p></li><li><p>也可以用 <code>-</code></p></li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ol><li>开头输入 1.</li><li>再点 <code>空格</code></li></ol><h4 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> [ ] 任务一 未做任务 <span class="token code-snippet code keyword">`- + 空格 + [ ]`</span><span class="token list punctuation">-</span> [x] 任务二 已做任务 <span class="token code-snippet code keyword">`- + 空格 + [x]`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>效果 👇</p><ul><li><input disabled="" type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li><input checked="" disabled="" type="checkbox"> 任务二 已做任务 <code>- + 空格 + [x]</code></li></ul><hr><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>####代码区块</p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">```语言名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="片段代码"><a href="#片段代码" class="headerlink" title="片段代码"></a>片段代码</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token code-snippet code keyword">`printf()`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>一行输入至少三个或更多的 <code>*</code> 、 <code>-</code> 或 <code>_</code> 来添加</p><hr><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">提示文字</span>](<span class="token url">http://www.markdown.cn/</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>效果 👇</p><p><a target="_blank" rel="noopener" href="http://www.markdown.cn/">语法说明</a></p><h4 id="描点链接"><a href="#描点链接" class="headerlink" title="描点链接"></a>描点链接</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">提示文字</span>](<span class="token url">#要跳转到的文内标题</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>效果 👇</p><p><a href="#Typora%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE">跳转到Typora基本设置</a></p><h4 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&lt;http://example.com/><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address@example.com</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>效果 👇</p><p><a target="_blank" rel="noopener" href="http://example.com/">http://example.com/</a><br><a href="mailto:&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#x73;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;">&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#x73;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#46;&#x63;&#111;&#x6d;</a></p><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">使用 Markdown<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Markdown是一种纯文本标记语言">[1]</span></a></sup>可以效率的书写文档, 直接转换成 HTML<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="HyperText Markup Language 超文本标记语言">[2]</span></a></sup>。文末底部需要引用<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Markdown是一种纯文本标记语言">[1]</span></a></sup>可以效率的书写文档, 直接转换成 HTML<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="HyperText Markup Language 超文本标记语言">[2]</span></a></sup>。---### 图片#### 外链图片<hexoPostRenderCodeBlock><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">图片名称</span>](<span class="token url">网络地址</span>)</span><span class="token url"><span class="token operator">!</span>[<span class="token content">效果图</span>](<span class="token url">https://t7.baidu.com/it/u=2297475721,2514622225&amp;fm=193&amp;f=GIF</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><img src="/adff29c068e3/u=2297475721,2514622225&fm=193&f=GIF" alt="效果图"></p><h4 id="本机图片"><a href="#本机图片" class="headerlink" title="本机图片"></a>本机图片</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">1.截屏：直接粘贴2.绝对路径：![效果图](C:\Users\Administrator\Pictures\Camera Roll\1.1_meitu_1.jpg "大美女")3.相对路径（同文档路径）：<span class="token url"><span class="token operator">!</span>[<span class="token content">效果图</span>](<span class="token url">1.1_meitu_1.jpg</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p><img src="/adff29c068e3/1.1_meitu_1.jpg" alt="效果图" title="大美女"></p><hr><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><blockquote><p><a target="_blank" rel="noopener" href="https://mermaid-js.github.io/mermaid/#/flowchart">mermaid 官方帮助文档</a></p></blockquote><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph表示开始，同时需要制定具体流程T=Top , B=Bottom , L=Left , R=Right , D=Down常用为TB、LR<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><table><thead><tr><th align="left">名称</th><th align="left">流向</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">TB</td><td align="left">top to bottom</td><td align="left">从上到下</td></tr><tr><td align="left">TD</td><td align="left">top-down&#x2F; same as top to bottom</td><td align="left">自顶向下&#x2F;从上至下相同</td></tr><tr><td align="left">BT</td><td align="left">bottom to top</td><td align="left">从下到上</td></tr><tr><td align="left">RL</td><td align="left">right to left</td><td align="left">从右到左</td></tr><tr><td align="left">LR</td><td align="left">left to right</td><td align="left">从左到右</td></tr></tbody></table><p><img src="/adff29c068e3/image-20210211173539589.png" alt="image-20210211173539589"></p><p>效果 👇</p><pre><code class="mermaid">graph LR;   A-->B   B-->C   C-->D   D-->A</code></pre><h5 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h5><table><thead><tr><th>标识</th><th>节点样式</th><th>含义</th></tr></thead><tbody><tr><td>id(文字)</td><td>圆角矩形节点</td><td>端点或中断，表示开始和结束</td></tr><tr><td>id[文字]</td><td>矩形节点</td><td>进程，表示要执行的处理</td></tr><tr><td>id{文字}</td><td>菱形节点</td><td>判断，表示决策</td></tr><tr><td>id((文字))</td><td>圆形节点</td><td>联系，不同进程的交叉引用</td></tr><tr><td>id&gt;文字]</td><td>右向旗帜状节点</td><td></td></tr></tbody></table><figure><div class="code-wrapper"><pre class="line-numbers language-markd" data-language="markd"><code class="language-markd">&#96;&#96;&#96;mermaidgraph TB;   subgraph 下班以后要做的事情      getOffWork(下班)--&gt;buy[一斤包子]   end   buy--&gt;isSeeWatermelon&#123;&quot;如果看见了西瓜?&quot;&#125;   isSeeWatermelon--&gt;|看见了|buyWatermelon[买2个西瓜]--&gt;goHome(回家)   isSeeWatermelon--没看见--&gt;goHome(回家)​&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><pre><code class="mermaid">graph TB;   subgraph 下班以后要做的事情      getOffWork(下班)-->buy[一斤包子]   end   buy-->isSeeWatermelon&#123;"如果看见了西瓜?"&#125;   isSeeWatermelon-->|看见了|buyWatermelon[买2个西瓜]-->goHome(回家)   isSeeWatermelon<span class="token arrow-head arrow operator">--没看见--></span>goHome(回家)</code></pre><h5 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h5><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB   A1-->B1   A2---B2   A3--text---B3   A4--text-->B4   A5-.-B5   A6-.->B6   A7-.text.-B7   A8-.text.->B8   A9===B9   A10==>B10   A11==text===B11   A12==text==>B12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><pre><code class="mermaid">graph TB   A1-->B1   A2---B2   A3<span class="token arrow-head arrow operator">--text---</span>B3   A4<span class="token arrow-head arrow operator">--text--></span>B4   A5-.-B5   A6-.->B6   A7<span class="token arrow-head arrow operator">-.text.-</span>B7   A8<span class="token arrow-head arrow operator">-.text.-></span>B8   A9===B9   A10==>B10   A11<span class="token arrow-head arrow operator">==text===</span>B11   A12<span class="token arrow-head arrow operator">==text==></span>B12</code></pre><hr><h4 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram   <span class="token url">[<span class="token content">参与者1</span>][<span class="token variable">消息线</span>]</span>[参与者1][消息线]:消息体  <span class="token title important">...<span class="token punctuation">----------------------</span></span>消息线->无箭头实线-->无箭头虚线->>有箭头实线（主动发出消息）-->>有箭头虚线（响应）-x末端为叉的实线（表示异步）--x末端为叉的虚线（表示异步）<span class="token hr punctuation">-----------------------</span>sequenceDiagram   Title: 买西瓜   participant Consumer as 买西瓜的程序员   participant Seller as 卖西瓜的小贩   Consumer->>Seller:哥们，你这瓜多少钱一斤？   Seller-->>Consumer:两块钱一斤   Consumer->>Seller:**~你这瓜皮子是金子做的还是瓜粒子是金子做的？   Seller-->>Consumer:你瞧这现在哪有瓜呀？这都是大棚的瓜，你嫌贵我还嫌贵那   Consumer->>Seller:你给我挑一个   Seller-->>Consumer:行   par 挑瓜    Seller-->>Seller :拿了一个   and    Seller-->>Seller :拍了两下   end   Seller-->>Consumer:这个怎么样？   Consumer->>Seller:你这瓜保熟吗？<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><pre><code class="mermaid">sequenceDiagram   Title: 买西瓜   participant Consumer as 买西瓜的程序员   participant Seller as 卖西瓜的小贩   Consumer->>Seller:哥们，你这瓜多少钱一斤？   Seller-->>Consumer:两块钱一斤   Consumer->>Seller:**~你这瓜皮子是金子做的还是瓜粒子是金子做的？   Seller-->>Consumer:你瞧这现在哪有瓜呀？这都是大棚的瓜，你嫌贵我还嫌贵那   Consumer->>Seller:你给我挑一个   Seller-->>Consumer:行   par 挑瓜    Seller-->>Seller :拿了一个   and    Seller-->>Seller :拍了两下   end   Seller-->>Consumer:这个怎么样？   Consumer->>Seller:你这瓜保熟吗？</code></pre><hr><h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">pietitle 饼图"有钱人"：99"没有钱"：0"我"：1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><pre><code class="mermaid">pie     title 饼图     "狗": 100     "猫": 100     "鼠": 100</code></pre><hr><h4 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h4><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token code"><span class="token punctuation">```</span><span class="token code-language">mermaid</span><span class="token code-block language-mermaid language-mermaid"><span class="token comment">%% 语法示例</span>        <span class="token keyword">gantt</span>        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求<span class="token operator">:</span>done,des1, 2014-01-06,2014-01-08        原型<span class="token operator">:</span>active,des2, 2014-01-09, 3d        UI设计<span class="token operator">:</span>des3, after des2, 5d    未来任务<span class="token operator">:</span>des4, after des3, 5d        section 开发        学习准备理解需求<span class="token operator">:</span>crit, done, 2014-01-06,24h        设计框架<span class="token operator">:</span>crit, done, after des2, 2d        开发<span class="token operator">:</span>crit, active, 3d        未来任务<span class="token operator">:</span>crit, 5d        耍<span class="token operator">:</span>2d        section 测试        功能测试<span class="token operator">:</span>active, a1, after des3, 3d        压力测试<span class="token operator">:</span>after a1  , 20h        测试报告<span class="token operator">:</span> 48h</span><span class="token punctuation">```</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><pre><code class="mermaid">%% 语法示例        gantt        dateFormat  YYYY-MM-DD        title 软件开发甘特图        section 设计        需求:done,des1, 2014-01-06,2014-01-08        原型:active,des2, 2014-01-09, 3d        UI设计:des3, after des2, 5d    未来任务:des4, after des3, 5d        section 开发        学习准备理解需求:crit, done, 2014-01-06,24h        设计框架:crit, done, after des2, 2d        开发:crit, active, 3d        未来任务:crit, 5d        耍:2d        section 测试        功能测试:active, a1, after des3, 3d        压力测试:after a1  , 20h        测试报告: 48h</code></pre><hr><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$$E=mc^2$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>$$<br>E&#x3D;mc^2<br>$$</p><hr><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$$\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125;\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\\end&#123;vmatrix&#125;$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 &#x3D;  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p><p>更多公式，请参考 👇</p><p><a target="_blank" rel="noopener" href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference</a></p><hr><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Markdown是一种纯文本标记语言<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:1" class="footnote-text"><span>Markdown是一种纯文本标记语言<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>HyperText Markup Language 超文本标记语言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></hexoPostRenderCodeBlock><br>使用 Markdown<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>HyperText Markup Language 超文本标记语言<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node.js速查笔记</title>
    <link href="/30d740f1c46b/"/>
    <url>/30d740f1c46b/</url>
    
    <content type="html"><![CDATA[<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><blockquote><p><a target="_blank" rel="noopener" href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p></blockquote><hr><p>##Windows安装</p><p><img src="/30d740f1c46b/image-20210216075648178.png" alt="image-20210216075648178"></p><p><img src="/30d740f1c46b/image-20210216080100906.png" alt="image-20210216080100906"></p><p>这块是弹窗内容</p><blockquote><p>Tools for Native Modules</p><p>Optionally install the tools necessary to compile native modules.</p><p>Some npm modules need to compiled from C&#x2F;C++ when installing. If you want to be able to install such modules, some tools(Python 2 and Visual Studio Build Tools) need to be installed.</p></blockquote><p>下面这段是个复选框</p><blockquote><p>Automatically install the necessary tools. Note that this will also install Chocolatey. The script will pop-up in a new window after the installation copletes.</p><p>Alternatively, follow the instructions at <a target="_blank" rel="noopener" href="https://github.com/nodejs/node-gyp#on-windows">https://github.com/nodejs/node-gyp#on-windows</a> to install the dependencies yourself.</p></blockquote><p>这是在告诉会给你自动安装2个工具：</p><p>构建工具(Python 2和Visual Studio构建工具)、Chocolatey</p><p>构建工具是因为一些npm模块需要使用C&#x2F;C++编译，如果想要编译这些模块，则需要安装这个工具。如果不安装这个构建工具，在之后使用 npm 安装模块的时候，会报错：gyp ERR! find Python<br>如果见到这个错误，知道是因为没有安装 构建工具。</p><p>构建工具和 Chocolatey 都是必装的，如果现在没有安装，可以之后再手动安装，提示里已经给出了相关解释：<a target="_blank" rel="noopener" href="https://github.com/nodejs/node-gyp#on-windows">https://github.com/nodejs/node-gyp#on-windows</a></p><p>该提示还告诉你 Chocolatey 会在后面弹出一个 cmd 来安装。</p><p>为了避免以后麻烦，这里强烈建议选择“Automatically install …” ，然后 Next…</p><hr><p>##查看版本</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><hr><h2 id="配置全局路径和缓存路径"><a href="#配置全局路径和缓存路径" class="headerlink" title="配置全局路径和缓存路径"></a>配置全局路径和缓存路径</h2><p>新建 <code>node_global</code> 和 <code>node_cache</code> 文件夹</p><p><img src="/30d740f1c46b/image-20210216103902317.png" alt="image-20210216103902317"></p><p>在cmd中更改路径</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"D:<span class="token entity" title="\e">\e</span>nv<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_global"</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"D:<span class="token entity" title="\e">\e</span>nv<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_cache"</span><span class="token comment"># 推荐修改nodejs\node_modules\npm 下 npmrc 文件</span><span class="token assign-left variable">prefix</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>ENV<span class="token punctuation">\</span>nodejs<span class="token punctuation">\</span>node_global<span class="token assign-left variable">cache</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>ENV<span class="token punctuation">\</span>nodejs<span class="token punctuation">\</span>node_cache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>新增 <code>NODE_PATH</code> 系统变量</p><p><img src="/30d740f1c46b/image-20210216105157825.png" alt="image-20210216105157825"></p><p>在 <code>Path</code> 中加入<code>%NODE_PATH%</code> 和 <code>%NODE_PATH%\node_global</code>，删掉Path中关于nodejs多余的配置</p><hr><h2 id="修改淘宝镜像"><a href="#修改淘宝镜像" class="headerlink" title="修改淘宝镜像"></a>修改淘宝镜像</h2><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">使用cmdnpm config set registry https://registry.npmmirror.com推荐修改 npmrc 文件registry=https://registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看 config 信息</span><span class="token function">npm</span> config list <span class="token function">ls</span> <span class="token parameter variable">-l</span><span class="token comment"># 全局安装</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli<span class="token comment"># 查看版本</span><span class="token function">npm</span> vue/cli <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h1 id="npm-命令"><a href="#npm-命令" class="headerlink" title="npm 命令"></a>npm 命令</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看npm拥有的全部命令</span><span class="token function">npm</span> <span class="token parameter variable">-h</span><span class="token comment"># 查看某一个npm命令的详细用法</span><span class="token function">npm</span> <span class="token operator">&lt;</span>command<span class="token operator">></span> <span class="token parameter variable">-h</span><span class="token comment"># 安装</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">></span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">></span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">></span>@<span class="token operator">&lt;</span>tag<span class="token operator">></span><span class="token comment"># 卸载</span><span class="token function">npm</span> uninstall <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">></span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>pkg<span class="token operator">></span><span class="token punctuation">[</span>@<span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token punctuation">]</span><span class="token comment"># 更新</span><span class="token function">npm</span> update <span class="token punctuation">[</span>-g<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>pkg<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token comment"># 查看安装的模块</span><span class="token function">npm</span> <span class="token function">ls</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">></span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>pkg<span class="token operator">></span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 无法加载文件 X:\xxxx\xxx.ps1，因为在此系统上禁止运行脚本。</span><span class="token comment"># PowerShell 中执行，策略更改，选择 A</span>set-ExecutionPolicy RemoteSigned<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>速查笔记</tag>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python速查笔记</title>
    <link href="/4df14b7081fc/"/>
    <url>/4df14b7081fc/</url>
    
    <content type="html"><![CDATA[<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><blockquote><p>Python : <a target="_blank" rel="noopener" href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p><p>Miniconda : <a target="_blank" rel="noopener" href="https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links">https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links</a></p></blockquote><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="Miniconda安装配置"><a href="#Miniconda安装配置" class="headerlink" title="Miniconda安装配置"></a>Miniconda安装配置</h3><p>软件默认Next安装，系统环境变量中增加以下路径</p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">%MINICONDA_HOME%%MINICONDA_HOME%\Scripts%MINICONDA_HOME%\Library\bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>然后 <code>CMD</code> 测试 <code>conda -V</code> 没问题后，修改镜像通道</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建 .condarc 文件</span>conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span><span class="token comment"># 粘贴北外的镜像</span>channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>default_channels:  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2custom_channels:  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud  pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud  simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud<span class="token comment"># 清除索引缓存，保证用的是镜像站提供的索引</span>conda clean <span class="token parameter variable">-i</span><span class="token comment"># 测试</span>conda create <span class="token parameter variable">-n</span> myenv numpy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="修改pip源"><a href="#修改pip源" class="headerlink" title="修改pip源"></a>修改pip源</h3><figure><div class="code-wrapper"><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment"># 打开 appdata 文件夹，在资源管理器的地址栏输入 %appdata% 后回车</span><span class="token comment"># 新建一个 pip 文件夹，在 pip 文件夹里面新建一个配置文件 pip.ini，在配置文件中输入如下内容后保存即可</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">global</span><span class="token punctuation">]</span></span><span class="token key attr-name">timeout</span> <span class="token punctuation">=</span> <span class="token value attr-value">6000</span><span class="token key attr-name">index-url</span> <span class="token punctuation">=</span> <span class="token value attr-value">https://pypi.tuna.tsinghua.edu.cn/simple</span><span class="token key attr-name">trusted-host</span> <span class="token punctuation">=</span> <span class="token value attr-value">pypi.tuna.tsinghua.edu.cn</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Miniconda基本命令"><a href="#Miniconda基本命令" class="headerlink" title="Miniconda基本命令"></a>Miniconda基本命令</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看存在环境</span>conda <span class="token function">env</span> list<span class="token comment"># 修改创建环境的存储路径</span>conda config <span class="token parameter variable">--add</span> envs_dirs D:<span class="token punctuation">\</span>ENV<span class="token punctuation">\</span>miniconda3<span class="token punctuation">\</span>envs<span class="token comment"># 创建python虚拟环境</span><span class="token comment"># 使用 conda create -n your_env_name python=X.X（2.7、3.6等)命令创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。-n: 设置新的环境的名字</span>conda create <span class="token parameter variable">-n</span> python2.7 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">2.7</span><span class="token comment"># 激活/退出虚拟环境</span>activate python2.7conda deactivate<span class="token comment"># 删除环境</span>conda remove <span class="token parameter variable">-n</span> python2.7 <span class="token parameter variable">--all</span><span class="token comment"># 安装(install)/卸载（uninstall）工具包</span>conda <span class="token function">install</span> pandaspip3 <span class="token function">install</span> pandas<span class="token comment"># 查看当前环境安装的包</span>conda list<span class="token comment"># conda 更新</span>conda update conda<span class="token comment"># 删除所有的安装包及cache(索引缓存、锁定文件、未使用过的包和tar包)</span>conda clean <span class="token parameter variable">-y</span> <span class="token parameter variable">--all</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="Python常用语法"><a href="#Python常用语法" class="headerlink" title="Python常用语法"></a>Python常用语法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><blockquote><p>变量名只能是字母、数字、下划线</p><p>变量名第一个字符不能是数字，也不能是关键字。Python3可以支持中文变量名</p><p>变量名区分大小写</p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 变量</span>num_1<span class="token punctuation">,</span> num_2 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span>sum_result <span class="token operator">=</span> num_1 <span class="token operator">+</span> num_2<span class="token keyword">print</span><span class="token punctuation">(</span>sum_result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 关键词</span><span class="token keyword">import</span> keywordkeyword_list <span class="token operator">=</span> keyword<span class="token punctuation">.</span>kwlist<span class="token keyword">print</span><span class="token punctuation">(</span>keyword_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h3><p>Python不需要事先定义变量类型，可以直接赋值</p><blockquote><p>不可变数据</p><blockquote><p>Number（数字）：数据</p><p>String（字符串）：‘数据’</p><p>Tuple（元组）：(数据1, 数据2, 数据3)</p></blockquote><p>可变数据</p><blockquote><p>Dictionary（字典，定义键值、无序存储）：{ ‘数据1’ : 数据1的值 , ‘数据2’ : 数据2的值 ,  ‘数据3’ : 数据3的值 }</p><p>List（列表，数据可重复、类型可不同）：[数据1, 数据2, 数据3]</p><p>Set（集合，无序、不重复）：{数据1, 数据2, 数据3}</p></blockquote></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 基础数据类型</span>a_num <span class="token operator">=</span> <span class="token number">666</span>b_str <span class="token operator">=</span> <span class="token string">'777'</span>c_list <span class="token operator">=</span> <span class="token punctuation">[</span>a_num<span class="token punctuation">,</span> b_str<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">98j</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'z'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'n'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'z ==>'</span><span class="token punctuation">,</span> c_list<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n ==>'</span><span class="token punctuation">,</span> c_list<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c_list<span class="token punctuation">)</span>c_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c_list<span class="token punctuation">)</span>c_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c_list<span class="token punctuation">)</span><span class="token keyword">for</span> idx<span class="token punctuation">,</span> val <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>c_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第&#123;&#125;个元素的类型为：&#123;&#125;，其值为：&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 循环语句 while</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>        a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> i <span class="token operator">=</span> b<span class="token punctuation">,</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 循环语句 for</span>total <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> total<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><blockquote><p><a target="_blank" rel="noopener" href="https://docs.python.org/zh-cn/3.9/library/functions.html">内置函数 官方说明</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 自定义函数</span><span class="token keyword">def</span> <span class="token function">get_max</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num1 <span class="token operator">></span> num2<span class="token punctuation">:</span>        <span class="token keyword">return</span> num2    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> num2<span class="token keyword">print</span><span class="token punctuation">(</span>get_max<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 引入模块</span><span class="token keyword">import</span> sys<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><blockquote><p>1、随机模拟创建一张含有 “工号、姓名、部门、职位、公司股票股数” 的 十万名员工 的总数据表，并存入EXCEL中</p><p>2、从 <code>十万员工数据.xlsx</code> 文件中随机抽取 10名幸运员工 将获奖通知文档，以 “工号-姓名-获奖通知.docx” 的命名方式进行WORD存储</p><p>3、将生成的 WORD文件 转为 PDF文件</p><p>4、将混合在一起的 WORD文件 和 PDF文件 分类归档</p><p>5、将 PDF目录 压缩并命名为 “年月日.zip”</p></blockquote><p><code>相关代码见 quickstart 仓库</code>  <a target="_blank" rel="noopener" href="https://gitee.com/yuanqimanong/python-study-demo/tree/master/quickstart">访问入口</a></p>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>速查笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue速查笔记</title>
    <link href="/d8bb04466573/"/>
    <url>/d8bb04466573/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue-CDN"><a href="#Vue-CDN" class="headerlink" title="Vue CDN"></a>Vue CDN</h2><blockquote><p><a target="_blank" rel="noopener" href="https://www.bootcdn.cn/vue/">https://www.bootcdn.cn/vue/</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 开发版</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment">// 生产版</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h2 id="Vue-官方中文文档"><a href="#Vue-官方中文文档" class="headerlink" title="Vue 官方中文文档"></a>Vue 官方中文文档</h2><blockquote><p><a target="_blank" rel="noopener" href="https://vuejs.bootcss.com/guide/">中文文档</a></p><p><a target="_blank" rel="noopener" href="https://vuejs.bootcss.com/style-guide/">风格指南</a></p><p><a target="_blank" rel="noopener" href="https://cn.vuejs.org/v2/api/">API</a></p></blockquote><hr><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#123;&#123; [1,2,3][0] &#125;&#125;&#123;&#123; &#123;name:&#39;小爱&#39;,age:18&#125;.name &#125;&#125;&#123;&#123; sayHello() &#125;&#125;&#123;&#123; number + 1 &#125;&#125;&#123;&#123; ok ? &#39;YES&#39; : &#39;NO&#39; &#125;&#125;&#123;&#123; message.split(&#39;&#39;).reverse().join(&#39;&#39;) &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 数据绑定：是将标签中的value与Vue实例中data属性值绑定 --&gt;请输入您的专业：&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;major&quot;&gt;&lt;script&gt;    new Vue(&#123;        el:&#39;#app&#39;,        data:&#123;            major:&#39;java&#39;        &#125;    &#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-on-简写"><a href="#v-on-简写" class="headerlink" title="v-on 简写@"></a>v-on 简写@</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 事件绑定：用于监听DOM事件，调用Vue实例中的方法 --&gt;&lt;input type&#x3D;&quot;text&quot; v-on:click&#x3D;&quot;changeMajor&quot;&gt;&lt;script&gt;    new Vue(&#123;        el:&#39;#app&#39;,        data:&#123;            major:&#39;java&#39;        &#125;,        methods:&#123;            changeMajor:function()&#123;                console.log(&#39;changed&#39;)            &#125;        &#125;    &#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>鼠标、键盘事件</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">鼠标事件：当用户通过鼠标在页面上执行操作时触发 click：单击事件，用户单机鼠标按钮（一般是左键）或按下回车键时触发 dbclick：双击事件，当双击鼠标时触发（一般是左键） mousedown：当用户在按下任意鼠标按钮时触发 mouseup：当用户释放鼠标按钮时触发 mouseenter：在鼠标光标从外部首次（是指每次进入元素，并不是只执行一次）时触发，而且这个事件不冒泡，而且在光标移到到后代元素上不会触发（从父区域进入子区域，再从子区域进入父区域是不会触发的，因为他认为子区域也是他的一部分），DOM3定义的 mouseleave：和mouseenter是一对，刚好相反 mousemove：当鼠标指针在元素内部移时重复的触发 mouseout：当鼠标指针位于一个元素上方，然后移到到另一个元素上方时触发，另一个元素可能是外部元素也可能是他的后代元素，因为他不认为后代元素所在的区域是他的一部分 mouseover：和mouseout是一对，恰好相反 除了mouseleave和mouseenter之外都会冒泡 click事件只有触发了mousedown和mouseup之后才会触发，代表click只有触发两次click才会触发，如果取消了之前的事件将会不触发 鼠标事件都是在浏览器视口中的特定位置发生的，可以通过事件的属性获取到。 <span class="token hr punctuation">------------------------------------</span>键盘事件：当用户通过键盘在页面上执行操作时触发 keydown：用户按下键盘上的任意键时触发，而且按住不放的话，会重复触发此事件 keypress：用户按下键盘上的字符键时触发，而且按住不放的话，会重复触发此事件，按下esc也会触发 keyup：用户释放键盘上的键时触发 所有元素都支持这三个事件 keydown-》keypress-》textinput-》keyup keyup和keydown的event有个keycode属性，代表键盘码，与ASCII相对应<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-bind-简写"><a href="#v-bind-简写" class="headerlink" title="v-bind 简写:"></a>v-bind 简写:</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 属性绑定：绑定标签属性。HTML中所有属性都不能用插值表达式 --&gt;&lt;a v-bind:href&#x3D;&quot;link&quot;&gt;百度&lt;&#x2F;a&gt;&lt;script&gt;    new Vue(&#123;        el:&#39;#app&#39;,        data:&#123;            link:&#39;https:&#x2F;&#x2F;www.baidu.com&#x2F;&#39;        &#125;    &#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;span&gt;Message: &#123;&#123; msg &#125;&#125;&lt;&#x2F;span&gt;&lt;span v-once&gt;这个将不会改变: &#123;&#123; msg &#125;&#125;&lt;&#x2F;span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-html-amp-v-text"><a href="#v-html-amp-v-text" class="headerlink" title="v-html&amp;v-text"></a>v-html&amp;v-text</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 v-html 指令 --&gt;&lt;p&gt;Using mustaches: &#123;&#123; rawHtml &#125;&#125;&lt;&#x2F;p&gt;&lt;p&gt;Using v-html directive: &lt;span v-html&#x3D;&quot;rawHtml&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><hr><h2 id="计算属性（computed）"><a href="#计算属性（computed）" class="headerlink" title="计算属性（computed）"></a>计算属性（computed）</h2><p><strong>计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销</strong></p><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：computed里面虽然是函数，但是不能用()调用，应该是调用属性。</p><hr><p>##侦听器（watch）</p><p>通过watch里给属性绑定函数，当属性的值发生变化时，该函数会自动被调用。调用时可以接收两个参数，第一个参数是新值，第二个参数是原值。</p><p><a target="_blank" rel="noopener" href="https://vuejs.bootcss.com/guide/computed.html#%E4%BE%A6%E5%90%AC%E5%99%A8">代码样例</a></p><hr><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div v-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;A&#39;&quot;&gt;  A&lt;&#x2F;div&gt;&lt;div v-else-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;B&#39;&quot;&gt;  B&lt;&#x2F;div&gt;&lt;div v-else-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;C&#39;&quot;&gt;  C&lt;&#x2F;div&gt;&lt;div v-else&gt;  Not A&#x2F;B&#x2F;C&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>&#x3D;&#x3D;注意&#x3D;&#x3D;，<code>v-show</code> 不支持 <code>&lt;template&gt;</code> 元素，也不支持 <code>v-else</code>。</p><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;h1 v-show&#x3D;&quot;ok&quot;&gt;Hello!&lt;&#x2F;h1&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p><strong>遍历数组</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script&gt;    new Vue(&#123;      el: &#39;#app&#39;,      data: &#123;        parentMessage: &#39;Parent&#39;,        items: [          &#123; message: &#39;Foo&#39; &#125;,          &#123; message: &#39;Bar&#39; &#125;        ]      &#125;    &#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>&#x3D;&#x3D;结果&#x3D;&#x3D;</p><ul><li>Parent - 0 - Foo</li><li>Parent - 1 - Bar</li></ul><p><strong>遍历对象</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v-for-object<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(value, name, index) in object<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  &#123;&#123; index &#125;&#125;. &#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script&gt;    new Vue(&#123;      el: &#39;#v-for-object&#39;,      data: &#123;        object: &#123;          title: &#39;How to do lists in Vue&#39;,          author: &#39;Jane Doe&#39;,          publishedAt: &#39;2016-04-10&#39;        &#125;      &#125;    &#125;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>&#x3D;&#x3D;结果&#x3D;&#x3D;</p><ol start="0"><li>title: How to do lists in Vue</li><li>author: Jane Doe</li><li>publishedAt: 2016-04-10</li></ol><hr><h2 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h2><h3 id="Vue对象之间的操作"><a href="#Vue对象之间的操作" class="headerlink" title="Vue对象之间的操作"></a>Vue对象之间的操作</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> v1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'hello vue'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">var</span> v2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>       <span class="token function-variable function">invokeV1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           v1<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'hello js'</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr><h3 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h3><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Vue 生命周期'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeCreate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeCreate'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">created</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'created'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeMount</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeMount'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">mounted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mounted'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeUpdate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeUpdate'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">updated</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'updated'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">beforeDestroy</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeDestroy'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">destroyed</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'destroyed'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><img src="/d8bb04466573/lifecycle.png" alt="lifecycle"></p><hr><h2 id="Vue-CLI"><a href="#Vue-CLI" class="headerlink" title="Vue CLI"></a>Vue CLI</h2><blockquote><p><a target="_blank" rel="noopener" href="https://cli.vuejs.org/zh/">官方快速开始</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> update <span class="token parameter variable">-g</span> @vue/cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><hr><h3 id="兼容2-x（旧版本）"><a href="#兼容2-x（旧版本）" class="headerlink" title="兼容2.x（旧版本）"></a>兼容2.x（旧版本）</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同</span>$ <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli-init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><hr><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 命令行</span>$ vue create hello-world<span class="token comment"># 图形化</span>$ vue ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><hr>]]></content>
    
    
    <categories>
      
      <category>迹路文库</category>
      
      <category>速查笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>速查笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
